/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainTCBData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainTCBData{}

// DomainTCBData struct for DomainTCBData
type DomainTCBData struct {
	Amount *float32 `json:"amount,omitempty"`
	Purpose *string `json:"purpose,omitempty"`
	RctOrPmt *string `json:"rct_or_pmt,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	TcSerial *string `json:"tc_serial,omitempty"`
	ToName *string `json:"to_name,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewDomainTCBData instantiates a new DomainTCBData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainTCBData() *DomainTCBData {
	this := DomainTCBData{}
	return &this
}

// NewDomainTCBDataWithDefaults instantiates a new DomainTCBData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainTCBDataWithDefaults() *DomainTCBData {
	this := DomainTCBData{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DomainTCBData) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DomainTCBData) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DomainTCBData) SetAmount(v float32) {
	o.Amount = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *DomainTCBData) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *DomainTCBData) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *DomainTCBData) SetPurpose(v string) {
	o.Purpose = &v
}

// GetRctOrPmt returns the RctOrPmt field value if set, zero value otherwise.
func (o *DomainTCBData) GetRctOrPmt() string {
	if o == nil || IsNil(o.RctOrPmt) {
		var ret string
		return ret
	}
	return *o.RctOrPmt
}

// GetRctOrPmtOk returns a tuple with the RctOrPmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetRctOrPmtOk() (*string, bool) {
	if o == nil || IsNil(o.RctOrPmt) {
		return nil, false
	}
	return o.RctOrPmt, true
}

// HasRctOrPmt returns a boolean if a field has been set.
func (o *DomainTCBData) HasRctOrPmt() bool {
	if o != nil && !IsNil(o.RctOrPmt) {
		return true
	}

	return false
}

// SetRctOrPmt gets a reference to the given string and assigns it to the RctOrPmt field.
func (o *DomainTCBData) SetRctOrPmt(v string) {
	o.RctOrPmt = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *DomainTCBData) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *DomainTCBData) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *DomainTCBData) SetRemarks(v string) {
	o.Remarks = &v
}

// GetTcSerial returns the TcSerial field value if set, zero value otherwise.
func (o *DomainTCBData) GetTcSerial() string {
	if o == nil || IsNil(o.TcSerial) {
		var ret string
		return ret
	}
	return *o.TcSerial
}

// GetTcSerialOk returns a tuple with the TcSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetTcSerialOk() (*string, bool) {
	if o == nil || IsNil(o.TcSerial) {
		return nil, false
	}
	return o.TcSerial, true
}

// HasTcSerial returns a boolean if a field has been set.
func (o *DomainTCBData) HasTcSerial() bool {
	if o != nil && !IsNil(o.TcSerial) {
		return true
	}

	return false
}

// SetTcSerial gets a reference to the given string and assigns it to the TcSerial field.
func (o *DomainTCBData) SetTcSerial(v string) {
	o.TcSerial = &v
}

// GetToName returns the ToName field value if set, zero value otherwise.
func (o *DomainTCBData) GetToName() string {
	if o == nil || IsNil(o.ToName) {
		var ret string
		return ret
	}
	return *o.ToName
}

// GetToNameOk returns a tuple with the ToName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetToNameOk() (*string, bool) {
	if o == nil || IsNil(o.ToName) {
		return nil, false
	}
	return o.ToName, true
}

// HasToName returns a boolean if a field has been set.
func (o *DomainTCBData) HasToName() bool {
	if o != nil && !IsNil(o.ToName) {
		return true
	}

	return false
}

// SetToName gets a reference to the given string and assigns it to the ToName field.
func (o *DomainTCBData) SetToName(v string) {
	o.ToName = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *DomainTCBData) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *DomainTCBData) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *DomainTCBData) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *DomainTCBData) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *DomainTCBData) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *DomainTCBData) SetTransId(v string) {
	o.TransId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DomainTCBData) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainTCBData) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DomainTCBData) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *DomainTCBData) SetUserId(v string) {
	o.UserId = &v
}

func (o DomainTCBData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainTCBData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.RctOrPmt) {
		toSerialize["rct_or_pmt"] = o.RctOrPmt
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.TcSerial) {
		toSerialize["tc_serial"] = o.TcSerial
	}
	if !IsNil(o.ToName) {
		toSerialize["to_name"] = o.ToName
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableDomainTCBData struct {
	value *DomainTCBData
	isSet bool
}

func (v NullableDomainTCBData) Get() *DomainTCBData {
	return v.value
}

func (v *NullableDomainTCBData) Set(val *DomainTCBData) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainTCBData) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainTCBData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainTCBData(val *DomainTCBData) *NullableDomainTCBData {
	return &NullableDomainTCBData{value: val, isSet: true}
}

func (v NullableDomainTCBData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainTCBData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


