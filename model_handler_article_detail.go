/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HandlerArticleDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerArticleDetail{}

// HandlerArticleDetail struct for HandlerArticleDetail
type HandlerArticleDetail struct {
	ArticleNumber *string `json:"article_number,omitempty"`
	ArticleType *string `json:"article_type,omitempty"`
}

// NewHandlerArticleDetail instantiates a new HandlerArticleDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerArticleDetail() *HandlerArticleDetail {
	this := HandlerArticleDetail{}
	return &this
}

// NewHandlerArticleDetailWithDefaults instantiates a new HandlerArticleDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerArticleDetailWithDefaults() *HandlerArticleDetail {
	this := HandlerArticleDetail{}
	return &this
}

// GetArticleNumber returns the ArticleNumber field value if set, zero value otherwise.
func (o *HandlerArticleDetail) GetArticleNumber() string {
	if o == nil || IsNil(o.ArticleNumber) {
		var ret string
		return ret
	}
	return *o.ArticleNumber
}

// GetArticleNumberOk returns a tuple with the ArticleNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerArticleDetail) GetArticleNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleNumber) {
		return nil, false
	}
	return o.ArticleNumber, true
}

// HasArticleNumber returns a boolean if a field has been set.
func (o *HandlerArticleDetail) HasArticleNumber() bool {
	if o != nil && !IsNil(o.ArticleNumber) {
		return true
	}

	return false
}

// SetArticleNumber gets a reference to the given string and assigns it to the ArticleNumber field.
func (o *HandlerArticleDetail) SetArticleNumber(v string) {
	o.ArticleNumber = &v
}

// GetArticleType returns the ArticleType field value if set, zero value otherwise.
func (o *HandlerArticleDetail) GetArticleType() string {
	if o == nil || IsNil(o.ArticleType) {
		var ret string
		return ret
	}
	return *o.ArticleType
}

// GetArticleTypeOk returns a tuple with the ArticleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerArticleDetail) GetArticleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleType) {
		return nil, false
	}
	return o.ArticleType, true
}

// HasArticleType returns a boolean if a field has been set.
func (o *HandlerArticleDetail) HasArticleType() bool {
	if o != nil && !IsNil(o.ArticleType) {
		return true
	}

	return false
}

// SetArticleType gets a reference to the given string and assigns it to the ArticleType field.
func (o *HandlerArticleDetail) SetArticleType(v string) {
	o.ArticleType = &v
}

func (o HandlerArticleDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerArticleDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArticleNumber) {
		toSerialize["article_number"] = o.ArticleNumber
	}
	if !IsNil(o.ArticleType) {
		toSerialize["article_type"] = o.ArticleType
	}
	return toSerialize, nil
}

type NullableHandlerArticleDetail struct {
	value *HandlerArticleDetail
	isSet bool
}

func (v NullableHandlerArticleDetail) Get() *HandlerArticleDetail {
	return v.value
}

func (v *NullableHandlerArticleDetail) Set(val *HandlerArticleDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerArticleDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerArticleDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerArticleDetail(val *HandlerArticleDetail) *NullableHandlerArticleDetail {
	return &NullableHandlerArticleDetail{value: val, isSet: true}
}

func (v NullableHandlerArticleDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerArticleDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


