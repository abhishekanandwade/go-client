/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HandlerChequeDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerChequeDetail{}

// HandlerChequeDetail struct for HandlerChequeDetail
type HandlerChequeDetail struct {
	TransAmount *float32 `json:"trans_amount,omitempty"`
	TransDetails *string `json:"trans_details,omitempty"`
}

// NewHandlerChequeDetail instantiates a new HandlerChequeDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerChequeDetail() *HandlerChequeDetail {
	this := HandlerChequeDetail{}
	return &this
}

// NewHandlerChequeDetailWithDefaults instantiates a new HandlerChequeDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerChequeDetailWithDefaults() *HandlerChequeDetail {
	this := HandlerChequeDetail{}
	return &this
}

// GetTransAmount returns the TransAmount field value if set, zero value otherwise.
func (o *HandlerChequeDetail) GetTransAmount() float32 {
	if o == nil || IsNil(o.TransAmount) {
		var ret float32
		return ret
	}
	return *o.TransAmount
}

// GetTransAmountOk returns a tuple with the TransAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerChequeDetail) GetTransAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TransAmount) {
		return nil, false
	}
	return o.TransAmount, true
}

// HasTransAmount returns a boolean if a field has been set.
func (o *HandlerChequeDetail) HasTransAmount() bool {
	if o != nil && !IsNil(o.TransAmount) {
		return true
	}

	return false
}

// SetTransAmount gets a reference to the given float32 and assigns it to the TransAmount field.
func (o *HandlerChequeDetail) SetTransAmount(v float32) {
	o.TransAmount = &v
}

// GetTransDetails returns the TransDetails field value if set, zero value otherwise.
func (o *HandlerChequeDetail) GetTransDetails() string {
	if o == nil || IsNil(o.TransDetails) {
		var ret string
		return ret
	}
	return *o.TransDetails
}

// GetTransDetailsOk returns a tuple with the TransDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerChequeDetail) GetTransDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.TransDetails) {
		return nil, false
	}
	return o.TransDetails, true
}

// HasTransDetails returns a boolean if a field has been set.
func (o *HandlerChequeDetail) HasTransDetails() bool {
	if o != nil && !IsNil(o.TransDetails) {
		return true
	}

	return false
}

// SetTransDetails gets a reference to the given string and assigns it to the TransDetails field.
func (o *HandlerChequeDetail) SetTransDetails(v string) {
	o.TransDetails = &v
}

func (o HandlerChequeDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerChequeDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransAmount) {
		toSerialize["trans_amount"] = o.TransAmount
	}
	if !IsNil(o.TransDetails) {
		toSerialize["trans_details"] = o.TransDetails
	}
	return toSerialize, nil
}

type NullableHandlerChequeDetail struct {
	value *HandlerChequeDetail
	isSet bool
}

func (v NullableHandlerChequeDetail) Get() *HandlerChequeDetail {
	return v.value
}

func (v *NullableHandlerChequeDetail) Set(val *HandlerChequeDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerChequeDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerChequeDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerChequeDetail(val *HandlerChequeDetail) *NullableHandlerChequeDetail {
	return &NullableHandlerChequeDetail{value: val, isSet: true}
}

func (v NullableHandlerChequeDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerChequeDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


