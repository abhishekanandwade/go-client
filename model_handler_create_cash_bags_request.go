/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateCashBagsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateCashBagsRequest{}

// HandlerCreateCashBagsRequest struct for HandlerCreateCashBagsRequest
type HandlerCreateCashBagsRequest struct {
	BagWeight float32 `json:"bag_weight"`
	FromOfficeId int32 `json:"from_office_id"`
	FromUserId int32 `json:"from_user_id"`
	ToOfficeId int32 `json:"to_office_id"`
	TransIds string `json:"trans_ids"`
}

type _HandlerCreateCashBagsRequest HandlerCreateCashBagsRequest

// NewHandlerCreateCashBagsRequest instantiates a new HandlerCreateCashBagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateCashBagsRequest(bagWeight float32, fromOfficeId int32, fromUserId int32, toOfficeId int32, transIds string) *HandlerCreateCashBagsRequest {
	this := HandlerCreateCashBagsRequest{}
	this.BagWeight = bagWeight
	this.FromOfficeId = fromOfficeId
	this.FromUserId = fromUserId
	this.ToOfficeId = toOfficeId
	this.TransIds = transIds
	return &this
}

// NewHandlerCreateCashBagsRequestWithDefaults instantiates a new HandlerCreateCashBagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateCashBagsRequestWithDefaults() *HandlerCreateCashBagsRequest {
	this := HandlerCreateCashBagsRequest{}
	return &this
}

// GetBagWeight returns the BagWeight field value
func (o *HandlerCreateCashBagsRequest) GetBagWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BagWeight
}

// GetBagWeightOk returns a tuple with the BagWeight field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashBagsRequest) GetBagWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BagWeight, true
}

// SetBagWeight sets field value
func (o *HandlerCreateCashBagsRequest) SetBagWeight(v float32) {
	o.BagWeight = v
}

// GetFromOfficeId returns the FromOfficeId field value
func (o *HandlerCreateCashBagsRequest) GetFromOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromOfficeId
}

// GetFromOfficeIdOk returns a tuple with the FromOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashBagsRequest) GetFromOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromOfficeId, true
}

// SetFromOfficeId sets field value
func (o *HandlerCreateCashBagsRequest) SetFromOfficeId(v int32) {
	o.FromOfficeId = v
}

// GetFromUserId returns the FromUserId field value
func (o *HandlerCreateCashBagsRequest) GetFromUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromUserId
}

// GetFromUserIdOk returns a tuple with the FromUserId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashBagsRequest) GetFromUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromUserId, true
}

// SetFromUserId sets field value
func (o *HandlerCreateCashBagsRequest) SetFromUserId(v int32) {
	o.FromUserId = v
}

// GetToOfficeId returns the ToOfficeId field value
func (o *HandlerCreateCashBagsRequest) GetToOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToOfficeId
}

// GetToOfficeIdOk returns a tuple with the ToOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashBagsRequest) GetToOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToOfficeId, true
}

// SetToOfficeId sets field value
func (o *HandlerCreateCashBagsRequest) SetToOfficeId(v int32) {
	o.ToOfficeId = v
}

// GetTransIds returns the TransIds field value
func (o *HandlerCreateCashBagsRequest) GetTransIds() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransIds
}

// GetTransIdsOk returns a tuple with the TransIds field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashBagsRequest) GetTransIdsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransIds, true
}

// SetTransIds sets field value
func (o *HandlerCreateCashBagsRequest) SetTransIds(v string) {
	o.TransIds = v
}

func (o HandlerCreateCashBagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateCashBagsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bag_weight"] = o.BagWeight
	toSerialize["from_office_id"] = o.FromOfficeId
	toSerialize["from_user_id"] = o.FromUserId
	toSerialize["to_office_id"] = o.ToOfficeId
	toSerialize["trans_ids"] = o.TransIds
	return toSerialize, nil
}

func (o *HandlerCreateCashBagsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bag_weight",
		"from_office_id",
		"from_user_id",
		"to_office_id",
		"trans_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateCashBagsRequest := _HandlerCreateCashBagsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateCashBagsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateCashBagsRequest(varHandlerCreateCashBagsRequest)

	return err
}

type NullableHandlerCreateCashBagsRequest struct {
	value *HandlerCreateCashBagsRequest
	isSet bool
}

func (v NullableHandlerCreateCashBagsRequest) Get() *HandlerCreateCashBagsRequest {
	return v.value
}

func (v *NullableHandlerCreateCashBagsRequest) Set(val *HandlerCreateCashBagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateCashBagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateCashBagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateCashBagsRequest(val *HandlerCreateCashBagsRequest) *NullableHandlerCreateCashBagsRequest {
	return &NullableHandlerCreateCashBagsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateCashBagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateCashBagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


