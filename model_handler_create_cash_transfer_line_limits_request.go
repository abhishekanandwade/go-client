/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateCashTransferLineLimitsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateCashTransferLineLimitsRequest{}

// HandlerCreateCashTransferLineLimitsRequest struct for HandlerCreateCashTransferLineLimitsRequest
type HandlerCreateCashTransferLineLimitsRequest struct {
	EnteredByUserid string `json:"entered_by_userid"`
	LimitAmt float32 `json:"limit_amt"`
	LimitDescription string `json:"limit_description"`
	ValidFrom string `json:"valid_from"`
}

type _HandlerCreateCashTransferLineLimitsRequest HandlerCreateCashTransferLineLimitsRequest

// NewHandlerCreateCashTransferLineLimitsRequest instantiates a new HandlerCreateCashTransferLineLimitsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateCashTransferLineLimitsRequest(enteredByUserid string, limitAmt float32, limitDescription string, validFrom string) *HandlerCreateCashTransferLineLimitsRequest {
	this := HandlerCreateCashTransferLineLimitsRequest{}
	this.EnteredByUserid = enteredByUserid
	this.LimitAmt = limitAmt
	this.LimitDescription = limitDescription
	this.ValidFrom = validFrom
	return &this
}

// NewHandlerCreateCashTransferLineLimitsRequestWithDefaults instantiates a new HandlerCreateCashTransferLineLimitsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateCashTransferLineLimitsRequestWithDefaults() *HandlerCreateCashTransferLineLimitsRequest {
	this := HandlerCreateCashTransferLineLimitsRequest{}
	return &this
}

// GetEnteredByUserid returns the EnteredByUserid field value
func (o *HandlerCreateCashTransferLineLimitsRequest) GetEnteredByUserid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnteredByUserid
}

// GetEnteredByUseridOk returns a tuple with the EnteredByUserid field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashTransferLineLimitsRequest) GetEnteredByUseridOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnteredByUserid, true
}

// SetEnteredByUserid sets field value
func (o *HandlerCreateCashTransferLineLimitsRequest) SetEnteredByUserid(v string) {
	o.EnteredByUserid = v
}

// GetLimitAmt returns the LimitAmt field value
func (o *HandlerCreateCashTransferLineLimitsRequest) GetLimitAmt() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LimitAmt
}

// GetLimitAmtOk returns a tuple with the LimitAmt field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashTransferLineLimitsRequest) GetLimitAmtOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LimitAmt, true
}

// SetLimitAmt sets field value
func (o *HandlerCreateCashTransferLineLimitsRequest) SetLimitAmt(v float32) {
	o.LimitAmt = v
}

// GetLimitDescription returns the LimitDescription field value
func (o *HandlerCreateCashTransferLineLimitsRequest) GetLimitDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LimitDescription
}

// GetLimitDescriptionOk returns a tuple with the LimitDescription field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashTransferLineLimitsRequest) GetLimitDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LimitDescription, true
}

// SetLimitDescription sets field value
func (o *HandlerCreateCashTransferLineLimitsRequest) SetLimitDescription(v string) {
	o.LimitDescription = v
}

// GetValidFrom returns the ValidFrom field value
func (o *HandlerCreateCashTransferLineLimitsRequest) GetValidFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCashTransferLineLimitsRequest) GetValidFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *HandlerCreateCashTransferLineLimitsRequest) SetValidFrom(v string) {
	o.ValidFrom = v
}

func (o HandlerCreateCashTransferLineLimitsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateCashTransferLineLimitsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entered_by_userid"] = o.EnteredByUserid
	toSerialize["limit_amt"] = o.LimitAmt
	toSerialize["limit_description"] = o.LimitDescription
	toSerialize["valid_from"] = o.ValidFrom
	return toSerialize, nil
}

func (o *HandlerCreateCashTransferLineLimitsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entered_by_userid",
		"limit_amt",
		"limit_description",
		"valid_from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateCashTransferLineLimitsRequest := _HandlerCreateCashTransferLineLimitsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateCashTransferLineLimitsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateCashTransferLineLimitsRequest(varHandlerCreateCashTransferLineLimitsRequest)

	return err
}

type NullableHandlerCreateCashTransferLineLimitsRequest struct {
	value *HandlerCreateCashTransferLineLimitsRequest
	isSet bool
}

func (v NullableHandlerCreateCashTransferLineLimitsRequest) Get() *HandlerCreateCashTransferLineLimitsRequest {
	return v.value
}

func (v *NullableHandlerCreateCashTransferLineLimitsRequest) Set(val *HandlerCreateCashTransferLineLimitsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateCashTransferLineLimitsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateCashTransferLineLimitsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateCashTransferLineLimitsRequest(val *HandlerCreateCashTransferLineLimitsRequest) *NullableHandlerCreateCashTransferLineLimitsRequest {
	return &NullableHandlerCreateCashTransferLineLimitsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateCashTransferLineLimitsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateCashTransferLineLimitsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


