/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateCustomerTransactionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateCustomerTransactionsRequest{}

// HandlerCreateCustomerTransactionsRequest struct for HandlerCreateCustomerTransactionsRequest
type HandlerCreateCustomerTransactionsRequest struct {
	BillAmount float32 `json:"bill_amount"`
	BillDate string `json:"bill_date"`
	BillId string `json:"bill_id"`
	BillRemarks string `json:"bill_remarks"`
	ChequeDate *string `json:"cheque_date,omitempty"`
	ChequeNo *string `json:"cheque_no,omitempty"`
	CustomerId string `json:"customer_id"`
	CustomerName string `json:"customer_name"`
	CustomerTypeId *string `json:"customer_type_id,omitempty"`
	CustomerTypeName string `json:"customer_type_name"`
	IsAdvanceCustomer *bool `json:"is_advance_customer,omitempty"`
	IsReceiptPayment string `json:"is_receipt_payment"`
	IssOfficeId *int32 `json:"iss_office_id,omitempty"`
	OfficeId int32 `json:"office_id"`
	Remarks string `json:"remarks"`
	TxAmount float32 `json:"tx_amount"`
	TxMode string `json:"tx_mode"`
	UserId string `json:"user_id"`
}

type _HandlerCreateCustomerTransactionsRequest HandlerCreateCustomerTransactionsRequest

// NewHandlerCreateCustomerTransactionsRequest instantiates a new HandlerCreateCustomerTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateCustomerTransactionsRequest(billAmount float32, billDate string, billId string, billRemarks string, customerId string, customerName string, customerTypeName string, isReceiptPayment string, officeId int32, remarks string, txAmount float32, txMode string, userId string) *HandlerCreateCustomerTransactionsRequest {
	this := HandlerCreateCustomerTransactionsRequest{}
	this.BillAmount = billAmount
	this.BillDate = billDate
	this.BillId = billId
	this.BillRemarks = billRemarks
	this.CustomerId = customerId
	this.CustomerName = customerName
	this.CustomerTypeName = customerTypeName
	this.IsReceiptPayment = isReceiptPayment
	this.OfficeId = officeId
	this.Remarks = remarks
	this.TxAmount = txAmount
	this.TxMode = txMode
	this.UserId = userId
	return &this
}

// NewHandlerCreateCustomerTransactionsRequestWithDefaults instantiates a new HandlerCreateCustomerTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateCustomerTransactionsRequestWithDefaults() *HandlerCreateCustomerTransactionsRequest {
	this := HandlerCreateCustomerTransactionsRequest{}
	return &this
}

// GetBillAmount returns the BillAmount field value
func (o *HandlerCreateCustomerTransactionsRequest) GetBillAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BillAmount
}

// GetBillAmountOk returns a tuple with the BillAmount field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetBillAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillAmount, true
}

// SetBillAmount sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetBillAmount(v float32) {
	o.BillAmount = v
}

// GetBillDate returns the BillDate field value
func (o *HandlerCreateCustomerTransactionsRequest) GetBillDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillDate
}

// GetBillDateOk returns a tuple with the BillDate field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetBillDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillDate, true
}

// SetBillDate sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetBillDate(v string) {
	o.BillDate = v
}

// GetBillId returns the BillId field value
func (o *HandlerCreateCustomerTransactionsRequest) GetBillId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillId
}

// GetBillIdOk returns a tuple with the BillId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetBillIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillId, true
}

// SetBillId sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetBillId(v string) {
	o.BillId = v
}

// GetBillRemarks returns the BillRemarks field value
func (o *HandlerCreateCustomerTransactionsRequest) GetBillRemarks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillRemarks
}

// GetBillRemarksOk returns a tuple with the BillRemarks field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetBillRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillRemarks, true
}

// SetBillRemarks sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetBillRemarks(v string) {
	o.BillRemarks = v
}

// GetChequeDate returns the ChequeDate field value if set, zero value otherwise.
func (o *HandlerCreateCustomerTransactionsRequest) GetChequeDate() string {
	if o == nil || IsNil(o.ChequeDate) {
		var ret string
		return ret
	}
	return *o.ChequeDate
}

// GetChequeDateOk returns a tuple with the ChequeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetChequeDateOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeDate) {
		return nil, false
	}
	return o.ChequeDate, true
}

// HasChequeDate returns a boolean if a field has been set.
func (o *HandlerCreateCustomerTransactionsRequest) HasChequeDate() bool {
	if o != nil && !IsNil(o.ChequeDate) {
		return true
	}

	return false
}

// SetChequeDate gets a reference to the given string and assigns it to the ChequeDate field.
func (o *HandlerCreateCustomerTransactionsRequest) SetChequeDate(v string) {
	o.ChequeDate = &v
}

// GetChequeNo returns the ChequeNo field value if set, zero value otherwise.
func (o *HandlerCreateCustomerTransactionsRequest) GetChequeNo() string {
	if o == nil || IsNil(o.ChequeNo) {
		var ret string
		return ret
	}
	return *o.ChequeNo
}

// GetChequeNoOk returns a tuple with the ChequeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetChequeNoOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeNo) {
		return nil, false
	}
	return o.ChequeNo, true
}

// HasChequeNo returns a boolean if a field has been set.
func (o *HandlerCreateCustomerTransactionsRequest) HasChequeNo() bool {
	if o != nil && !IsNil(o.ChequeNo) {
		return true
	}

	return false
}

// SetChequeNo gets a reference to the given string and assigns it to the ChequeNo field.
func (o *HandlerCreateCustomerTransactionsRequest) SetChequeNo(v string) {
	o.ChequeNo = &v
}

// GetCustomerId returns the CustomerId field value
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetCustomerName returns the CustomerName field value
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerName, true
}

// SetCustomerName sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetCustomerName(v string) {
	o.CustomerName = v
}

// GetCustomerTypeId returns the CustomerTypeId field value if set, zero value otherwise.
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerTypeId() string {
	if o == nil || IsNil(o.CustomerTypeId) {
		var ret string
		return ret
	}
	return *o.CustomerTypeId
}

// GetCustomerTypeIdOk returns a tuple with the CustomerTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerTypeId) {
		return nil, false
	}
	return o.CustomerTypeId, true
}

// HasCustomerTypeId returns a boolean if a field has been set.
func (o *HandlerCreateCustomerTransactionsRequest) HasCustomerTypeId() bool {
	if o != nil && !IsNil(o.CustomerTypeId) {
		return true
	}

	return false
}

// SetCustomerTypeId gets a reference to the given string and assigns it to the CustomerTypeId field.
func (o *HandlerCreateCustomerTransactionsRequest) SetCustomerTypeId(v string) {
	o.CustomerTypeId = &v
}

// GetCustomerTypeName returns the CustomerTypeName field value
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerTypeName
}

// GetCustomerTypeNameOk returns a tuple with the CustomerTypeName field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetCustomerTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerTypeName, true
}

// SetCustomerTypeName sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetCustomerTypeName(v string) {
	o.CustomerTypeName = v
}

// GetIsAdvanceCustomer returns the IsAdvanceCustomer field value if set, zero value otherwise.
func (o *HandlerCreateCustomerTransactionsRequest) GetIsAdvanceCustomer() bool {
	if o == nil || IsNil(o.IsAdvanceCustomer) {
		var ret bool
		return ret
	}
	return *o.IsAdvanceCustomer
}

// GetIsAdvanceCustomerOk returns a tuple with the IsAdvanceCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetIsAdvanceCustomerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdvanceCustomer) {
		return nil, false
	}
	return o.IsAdvanceCustomer, true
}

// HasIsAdvanceCustomer returns a boolean if a field has been set.
func (o *HandlerCreateCustomerTransactionsRequest) HasIsAdvanceCustomer() bool {
	if o != nil && !IsNil(o.IsAdvanceCustomer) {
		return true
	}

	return false
}

// SetIsAdvanceCustomer gets a reference to the given bool and assigns it to the IsAdvanceCustomer field.
func (o *HandlerCreateCustomerTransactionsRequest) SetIsAdvanceCustomer(v bool) {
	o.IsAdvanceCustomer = &v
}

// GetIsReceiptPayment returns the IsReceiptPayment field value
func (o *HandlerCreateCustomerTransactionsRequest) GetIsReceiptPayment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsReceiptPayment
}

// GetIsReceiptPaymentOk returns a tuple with the IsReceiptPayment field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetIsReceiptPaymentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsReceiptPayment, true
}

// SetIsReceiptPayment sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetIsReceiptPayment(v string) {
	o.IsReceiptPayment = v
}

// GetIssOfficeId returns the IssOfficeId field value if set, zero value otherwise.
func (o *HandlerCreateCustomerTransactionsRequest) GetIssOfficeId() int32 {
	if o == nil || IsNil(o.IssOfficeId) {
		var ret int32
		return ret
	}
	return *o.IssOfficeId
}

// GetIssOfficeIdOk returns a tuple with the IssOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetIssOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssOfficeId) {
		return nil, false
	}
	return o.IssOfficeId, true
}

// HasIssOfficeId returns a boolean if a field has been set.
func (o *HandlerCreateCustomerTransactionsRequest) HasIssOfficeId() bool {
	if o != nil && !IsNil(o.IssOfficeId) {
		return true
	}

	return false
}

// SetIssOfficeId gets a reference to the given int32 and assigns it to the IssOfficeId field.
func (o *HandlerCreateCustomerTransactionsRequest) SetIssOfficeId(v int32) {
	o.IssOfficeId = &v
}

// GetOfficeId returns the OfficeId field value
func (o *HandlerCreateCustomerTransactionsRequest) GetOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfficeId, true
}

// SetOfficeId sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetOfficeId(v int32) {
	o.OfficeId = v
}

// GetRemarks returns the Remarks field value
func (o *HandlerCreateCustomerTransactionsRequest) GetRemarks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetRemarksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Remarks, true
}

// SetRemarks sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetRemarks(v string) {
	o.Remarks = v
}

// GetTxAmount returns the TxAmount field value
func (o *HandlerCreateCustomerTransactionsRequest) GetTxAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TxAmount
}

// GetTxAmountOk returns a tuple with the TxAmount field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetTxAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxAmount, true
}

// SetTxAmount sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetTxAmount(v float32) {
	o.TxAmount = v
}

// GetTxMode returns the TxMode field value
func (o *HandlerCreateCustomerTransactionsRequest) GetTxMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxMode
}

// GetTxModeOk returns a tuple with the TxMode field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetTxModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxMode, true
}

// SetTxMode sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetTxMode(v string) {
	o.TxMode = v
}

// GetUserId returns the UserId field value
func (o *HandlerCreateCustomerTransactionsRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateCustomerTransactionsRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *HandlerCreateCustomerTransactionsRequest) SetUserId(v string) {
	o.UserId = v
}

func (o HandlerCreateCustomerTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateCustomerTransactionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bill_amount"] = o.BillAmount
	toSerialize["bill_date"] = o.BillDate
	toSerialize["bill_id"] = o.BillId
	toSerialize["bill_remarks"] = o.BillRemarks
	if !IsNil(o.ChequeDate) {
		toSerialize["cheque_date"] = o.ChequeDate
	}
	if !IsNil(o.ChequeNo) {
		toSerialize["cheque_no"] = o.ChequeNo
	}
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["customer_name"] = o.CustomerName
	if !IsNil(o.CustomerTypeId) {
		toSerialize["customer_type_id"] = o.CustomerTypeId
	}
	toSerialize["customer_type_name"] = o.CustomerTypeName
	if !IsNil(o.IsAdvanceCustomer) {
		toSerialize["is_advance_customer"] = o.IsAdvanceCustomer
	}
	toSerialize["is_receipt_payment"] = o.IsReceiptPayment
	if !IsNil(o.IssOfficeId) {
		toSerialize["iss_office_id"] = o.IssOfficeId
	}
	toSerialize["office_id"] = o.OfficeId
	toSerialize["remarks"] = o.Remarks
	toSerialize["tx_amount"] = o.TxAmount
	toSerialize["tx_mode"] = o.TxMode
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

func (o *HandlerCreateCustomerTransactionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bill_amount",
		"bill_date",
		"bill_id",
		"bill_remarks",
		"customer_id",
		"customer_name",
		"customer_type_name",
		"is_receipt_payment",
		"office_id",
		"remarks",
		"tx_amount",
		"tx_mode",
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateCustomerTransactionsRequest := _HandlerCreateCustomerTransactionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateCustomerTransactionsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateCustomerTransactionsRequest(varHandlerCreateCustomerTransactionsRequest)

	return err
}

type NullableHandlerCreateCustomerTransactionsRequest struct {
	value *HandlerCreateCustomerTransactionsRequest
	isSet bool
}

func (v NullableHandlerCreateCustomerTransactionsRequest) Get() *HandlerCreateCustomerTransactionsRequest {
	return v.value
}

func (v *NullableHandlerCreateCustomerTransactionsRequest) Set(val *HandlerCreateCustomerTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateCustomerTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateCustomerTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateCustomerTransactionsRequest(val *HandlerCreateCustomerTransactionsRequest) *NullableHandlerCreateCustomerTransactionsRequest {
	return &NullableHandlerCreateCustomerTransactionsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateCustomerTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateCustomerTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


