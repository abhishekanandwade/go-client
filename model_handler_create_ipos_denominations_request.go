/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateIPOsDenominationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateIPOsDenominationsRequest{}

// HandlerCreateIPOsDenominationsRequest struct for HandlerCreateIPOsDenominationsRequest
type HandlerCreateIPOsDenominationsRequest struct {
	DenominationDesc string `json:"denomination_desc"`
	DenominationValue int32 `json:"denomination_value"`
	EnteredByUser string `json:"entered_by_user"`
	ValidFrom string `json:"valid_from"`
}

type _HandlerCreateIPOsDenominationsRequest HandlerCreateIPOsDenominationsRequest

// NewHandlerCreateIPOsDenominationsRequest instantiates a new HandlerCreateIPOsDenominationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateIPOsDenominationsRequest(denominationDesc string, denominationValue int32, enteredByUser string, validFrom string) *HandlerCreateIPOsDenominationsRequest {
	this := HandlerCreateIPOsDenominationsRequest{}
	this.DenominationDesc = denominationDesc
	this.DenominationValue = denominationValue
	this.EnteredByUser = enteredByUser
	this.ValidFrom = validFrom
	return &this
}

// NewHandlerCreateIPOsDenominationsRequestWithDefaults instantiates a new HandlerCreateIPOsDenominationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateIPOsDenominationsRequestWithDefaults() *HandlerCreateIPOsDenominationsRequest {
	this := HandlerCreateIPOsDenominationsRequest{}
	return &this
}

// GetDenominationDesc returns the DenominationDesc field value
func (o *HandlerCreateIPOsDenominationsRequest) GetDenominationDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateIPOsDenominationsRequest) GetDenominationDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DenominationDesc, true
}

// SetDenominationDesc sets field value
func (o *HandlerCreateIPOsDenominationsRequest) SetDenominationDesc(v string) {
	o.DenominationDesc = v
}

// GetDenominationValue returns the DenominationValue field value
func (o *HandlerCreateIPOsDenominationsRequest) GetDenominationValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateIPOsDenominationsRequest) GetDenominationValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DenominationValue, true
}

// SetDenominationValue sets field value
func (o *HandlerCreateIPOsDenominationsRequest) SetDenominationValue(v int32) {
	o.DenominationValue = v
}

// GetEnteredByUser returns the EnteredByUser field value
func (o *HandlerCreateIPOsDenominationsRequest) GetEnteredByUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnteredByUser
}

// GetEnteredByUserOk returns a tuple with the EnteredByUser field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateIPOsDenominationsRequest) GetEnteredByUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnteredByUser, true
}

// SetEnteredByUser sets field value
func (o *HandlerCreateIPOsDenominationsRequest) SetEnteredByUser(v string) {
	o.EnteredByUser = v
}

// GetValidFrom returns the ValidFrom field value
func (o *HandlerCreateIPOsDenominationsRequest) GetValidFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateIPOsDenominationsRequest) GetValidFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *HandlerCreateIPOsDenominationsRequest) SetValidFrom(v string) {
	o.ValidFrom = v
}

func (o HandlerCreateIPOsDenominationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateIPOsDenominationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["denomination_desc"] = o.DenominationDesc
	toSerialize["denomination_value"] = o.DenominationValue
	toSerialize["entered_by_user"] = o.EnteredByUser
	toSerialize["valid_from"] = o.ValidFrom
	return toSerialize, nil
}

func (o *HandlerCreateIPOsDenominationsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"denomination_desc",
		"denomination_value",
		"entered_by_user",
		"valid_from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateIPOsDenominationsRequest := _HandlerCreateIPOsDenominationsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateIPOsDenominationsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateIPOsDenominationsRequest(varHandlerCreateIPOsDenominationsRequest)

	return err
}

type NullableHandlerCreateIPOsDenominationsRequest struct {
	value *HandlerCreateIPOsDenominationsRequest
	isSet bool
}

func (v NullableHandlerCreateIPOsDenominationsRequest) Get() *HandlerCreateIPOsDenominationsRequest {
	return v.value
}

func (v *NullableHandlerCreateIPOsDenominationsRequest) Set(val *HandlerCreateIPOsDenominationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateIPOsDenominationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateIPOsDenominationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateIPOsDenominationsRequest(val *HandlerCreateIPOsDenominationsRequest) *NullableHandlerCreateIPOsDenominationsRequest {
	return &NullableHandlerCreateIPOsDenominationsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateIPOsDenominationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateIPOsDenominationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


