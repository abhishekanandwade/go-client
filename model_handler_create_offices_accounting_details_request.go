/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateOfficesAccountingDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateOfficesAccountingDetailsRequest{}

// HandlerCreateOfficesAccountingDetailsRequest struct for HandlerCreateOfficesAccountingDetailsRequest
type HandlerCreateOfficesAccountingDetailsRequest struct {
	CreditOrDebit *string `json:"credit_or_debit,omitempty"`
	DigitalTxnsAmount *float32 `json:"digital_txns_amount,omitempty"`
	DigitalTxnsCount *int32 `json:"digital_txns_count,omitempty"`
	GlCode *string `json:"gl_code,omitempty"`
	NonDigitalTxnsAmount *float32 `json:"non_digital_txns_amount,omitempty"`
	NonDigitalTxnsCount *int32 `json:"non_digital_txns_count,omitempty"`
	ReceiptSource string `json:"receipt_source"`
	Remarks *string `json:"remarks,omitempty"`
	SrcTranId string `json:"src_tran_id"`
	SrcTransDate string `json:"src_trans_date"`
}

type _HandlerCreateOfficesAccountingDetailsRequest HandlerCreateOfficesAccountingDetailsRequest

// NewHandlerCreateOfficesAccountingDetailsRequest instantiates a new HandlerCreateOfficesAccountingDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateOfficesAccountingDetailsRequest(receiptSource string, srcTranId string, srcTransDate string) *HandlerCreateOfficesAccountingDetailsRequest {
	this := HandlerCreateOfficesAccountingDetailsRequest{}
	this.ReceiptSource = receiptSource
	this.SrcTranId = srcTranId
	this.SrcTransDate = srcTransDate
	return &this
}

// NewHandlerCreateOfficesAccountingDetailsRequestWithDefaults instantiates a new HandlerCreateOfficesAccountingDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateOfficesAccountingDetailsRequestWithDefaults() *HandlerCreateOfficesAccountingDetailsRequest {
	this := HandlerCreateOfficesAccountingDetailsRequest{}
	return &this
}

// GetCreditOrDebit returns the CreditOrDebit field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetCreditOrDebit() string {
	if o == nil || IsNil(o.CreditOrDebit) {
		var ret string
		return ret
	}
	return *o.CreditOrDebit
}

// GetCreditOrDebitOk returns a tuple with the CreditOrDebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetCreditOrDebitOk() (*string, bool) {
	if o == nil || IsNil(o.CreditOrDebit) {
		return nil, false
	}
	return o.CreditOrDebit, true
}

// HasCreditOrDebit returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasCreditOrDebit() bool {
	if o != nil && !IsNil(o.CreditOrDebit) {
		return true
	}

	return false
}

// SetCreditOrDebit gets a reference to the given string and assigns it to the CreditOrDebit field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetCreditOrDebit(v string) {
	o.CreditOrDebit = &v
}

// GetDigitalTxnsAmount returns the DigitalTxnsAmount field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetDigitalTxnsAmount() float32 {
	if o == nil || IsNil(o.DigitalTxnsAmount) {
		var ret float32
		return ret
	}
	return *o.DigitalTxnsAmount
}

// GetDigitalTxnsAmountOk returns a tuple with the DigitalTxnsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetDigitalTxnsAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DigitalTxnsAmount) {
		return nil, false
	}
	return o.DigitalTxnsAmount, true
}

// HasDigitalTxnsAmount returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasDigitalTxnsAmount() bool {
	if o != nil && !IsNil(o.DigitalTxnsAmount) {
		return true
	}

	return false
}

// SetDigitalTxnsAmount gets a reference to the given float32 and assigns it to the DigitalTxnsAmount field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetDigitalTxnsAmount(v float32) {
	o.DigitalTxnsAmount = &v
}

// GetDigitalTxnsCount returns the DigitalTxnsCount field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetDigitalTxnsCount() int32 {
	if o == nil || IsNil(o.DigitalTxnsCount) {
		var ret int32
		return ret
	}
	return *o.DigitalTxnsCount
}

// GetDigitalTxnsCountOk returns a tuple with the DigitalTxnsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetDigitalTxnsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DigitalTxnsCount) {
		return nil, false
	}
	return o.DigitalTxnsCount, true
}

// HasDigitalTxnsCount returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasDigitalTxnsCount() bool {
	if o != nil && !IsNil(o.DigitalTxnsCount) {
		return true
	}

	return false
}

// SetDigitalTxnsCount gets a reference to the given int32 and assigns it to the DigitalTxnsCount field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetDigitalTxnsCount(v int32) {
	o.DigitalTxnsCount = &v
}

// GetGlCode returns the GlCode field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetGlCode() string {
	if o == nil || IsNil(o.GlCode) {
		var ret string
		return ret
	}
	return *o.GlCode
}

// GetGlCodeOk returns a tuple with the GlCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetGlCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GlCode) {
		return nil, false
	}
	return o.GlCode, true
}

// HasGlCode returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasGlCode() bool {
	if o != nil && !IsNil(o.GlCode) {
		return true
	}

	return false
}

// SetGlCode gets a reference to the given string and assigns it to the GlCode field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetGlCode(v string) {
	o.GlCode = &v
}

// GetNonDigitalTxnsAmount returns the NonDigitalTxnsAmount field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetNonDigitalTxnsAmount() float32 {
	if o == nil || IsNil(o.NonDigitalTxnsAmount) {
		var ret float32
		return ret
	}
	return *o.NonDigitalTxnsAmount
}

// GetNonDigitalTxnsAmountOk returns a tuple with the NonDigitalTxnsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetNonDigitalTxnsAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.NonDigitalTxnsAmount) {
		return nil, false
	}
	return o.NonDigitalTxnsAmount, true
}

// HasNonDigitalTxnsAmount returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasNonDigitalTxnsAmount() bool {
	if o != nil && !IsNil(o.NonDigitalTxnsAmount) {
		return true
	}

	return false
}

// SetNonDigitalTxnsAmount gets a reference to the given float32 and assigns it to the NonDigitalTxnsAmount field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetNonDigitalTxnsAmount(v float32) {
	o.NonDigitalTxnsAmount = &v
}

// GetNonDigitalTxnsCount returns the NonDigitalTxnsCount field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetNonDigitalTxnsCount() int32 {
	if o == nil || IsNil(o.NonDigitalTxnsCount) {
		var ret int32
		return ret
	}
	return *o.NonDigitalTxnsCount
}

// GetNonDigitalTxnsCountOk returns a tuple with the NonDigitalTxnsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetNonDigitalTxnsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NonDigitalTxnsCount) {
		return nil, false
	}
	return o.NonDigitalTxnsCount, true
}

// HasNonDigitalTxnsCount returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasNonDigitalTxnsCount() bool {
	if o != nil && !IsNil(o.NonDigitalTxnsCount) {
		return true
	}

	return false
}

// SetNonDigitalTxnsCount gets a reference to the given int32 and assigns it to the NonDigitalTxnsCount field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetNonDigitalTxnsCount(v int32) {
	o.NonDigitalTxnsCount = &v
}

// GetReceiptSource returns the ReceiptSource field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetReceiptSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiptSource
}

// GetReceiptSourceOk returns a tuple with the ReceiptSource field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetReceiptSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptSource, true
}

// SetReceiptSource sets field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetReceiptSource(v string) {
	o.ReceiptSource = v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetRemarks(v string) {
	o.Remarks = &v
}

// GetSrcTranId returns the SrcTranId field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetSrcTranId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SrcTranId
}

// GetSrcTranIdOk returns a tuple with the SrcTranId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetSrcTranIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SrcTranId, true
}

// SetSrcTranId sets field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetSrcTranId(v string) {
	o.SrcTranId = v
}

// GetSrcTransDate returns the SrcTransDate field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetSrcTransDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SrcTransDate
}

// GetSrcTransDateOk returns a tuple with the SrcTransDate field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateOfficesAccountingDetailsRequest) GetSrcTransDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SrcTransDate, true
}

// SetSrcTransDate sets field value
func (o *HandlerCreateOfficesAccountingDetailsRequest) SetSrcTransDate(v string) {
	o.SrcTransDate = v
}

func (o HandlerCreateOfficesAccountingDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateOfficesAccountingDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreditOrDebit) {
		toSerialize["credit_or_debit"] = o.CreditOrDebit
	}
	if !IsNil(o.DigitalTxnsAmount) {
		toSerialize["digital_txns_amount"] = o.DigitalTxnsAmount
	}
	if !IsNil(o.DigitalTxnsCount) {
		toSerialize["digital_txns_count"] = o.DigitalTxnsCount
	}
	if !IsNil(o.GlCode) {
		toSerialize["gl_code"] = o.GlCode
	}
	if !IsNil(o.NonDigitalTxnsAmount) {
		toSerialize["non_digital_txns_amount"] = o.NonDigitalTxnsAmount
	}
	if !IsNil(o.NonDigitalTxnsCount) {
		toSerialize["non_digital_txns_count"] = o.NonDigitalTxnsCount
	}
	toSerialize["receipt_source"] = o.ReceiptSource
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	toSerialize["src_tran_id"] = o.SrcTranId
	toSerialize["src_trans_date"] = o.SrcTransDate
	return toSerialize, nil
}

func (o *HandlerCreateOfficesAccountingDetailsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"receipt_source",
		"src_tran_id",
		"src_trans_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateOfficesAccountingDetailsRequest := _HandlerCreateOfficesAccountingDetailsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateOfficesAccountingDetailsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateOfficesAccountingDetailsRequest(varHandlerCreateOfficesAccountingDetailsRequest)

	return err
}

type NullableHandlerCreateOfficesAccountingDetailsRequest struct {
	value *HandlerCreateOfficesAccountingDetailsRequest
	isSet bool
}

func (v NullableHandlerCreateOfficesAccountingDetailsRequest) Get() *HandlerCreateOfficesAccountingDetailsRequest {
	return v.value
}

func (v *NullableHandlerCreateOfficesAccountingDetailsRequest) Set(val *HandlerCreateOfficesAccountingDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateOfficesAccountingDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateOfficesAccountingDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateOfficesAccountingDetailsRequest(val *HandlerCreateOfficesAccountingDetailsRequest) *NullableHandlerCreateOfficesAccountingDetailsRequest {
	return &NullableHandlerCreateOfficesAccountingDetailsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateOfficesAccountingDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateOfficesAccountingDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


