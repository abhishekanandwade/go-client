/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateStampsCategoriesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateStampsCategoriesRequest{}

// HandlerCreateStampsCategoriesRequest struct for HandlerCreateStampsCategoriesRequest
type HandlerCreateStampsCategoriesRequest struct {
	CategoryDesc string `json:"category_desc"`
	EnteredByUserid string `json:"entered_by_userid"`
	GlCode string `json:"gl_code"`
	ValidFrom string `json:"valid_from"`
}

type _HandlerCreateStampsCategoriesRequest HandlerCreateStampsCategoriesRequest

// NewHandlerCreateStampsCategoriesRequest instantiates a new HandlerCreateStampsCategoriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateStampsCategoriesRequest(categoryDesc string, enteredByUserid string, glCode string, validFrom string) *HandlerCreateStampsCategoriesRequest {
	this := HandlerCreateStampsCategoriesRequest{}
	this.CategoryDesc = categoryDesc
	this.EnteredByUserid = enteredByUserid
	this.GlCode = glCode
	this.ValidFrom = validFrom
	return &this
}

// NewHandlerCreateStampsCategoriesRequestWithDefaults instantiates a new HandlerCreateStampsCategoriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateStampsCategoriesRequestWithDefaults() *HandlerCreateStampsCategoriesRequest {
	this := HandlerCreateStampsCategoriesRequest{}
	return &this
}

// GetCategoryDesc returns the CategoryDesc field value
func (o *HandlerCreateStampsCategoriesRequest) GetCategoryDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CategoryDesc
}

// GetCategoryDescOk returns a tuple with the CategoryDesc field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsCategoriesRequest) GetCategoryDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryDesc, true
}

// SetCategoryDesc sets field value
func (o *HandlerCreateStampsCategoriesRequest) SetCategoryDesc(v string) {
	o.CategoryDesc = v
}

// GetEnteredByUserid returns the EnteredByUserid field value
func (o *HandlerCreateStampsCategoriesRequest) GetEnteredByUserid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnteredByUserid
}

// GetEnteredByUseridOk returns a tuple with the EnteredByUserid field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsCategoriesRequest) GetEnteredByUseridOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnteredByUserid, true
}

// SetEnteredByUserid sets field value
func (o *HandlerCreateStampsCategoriesRequest) SetEnteredByUserid(v string) {
	o.EnteredByUserid = v
}

// GetGlCode returns the GlCode field value
func (o *HandlerCreateStampsCategoriesRequest) GetGlCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlCode
}

// GetGlCodeOk returns a tuple with the GlCode field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsCategoriesRequest) GetGlCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlCode, true
}

// SetGlCode sets field value
func (o *HandlerCreateStampsCategoriesRequest) SetGlCode(v string) {
	o.GlCode = v
}

// GetValidFrom returns the ValidFrom field value
func (o *HandlerCreateStampsCategoriesRequest) GetValidFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsCategoriesRequest) GetValidFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *HandlerCreateStampsCategoriesRequest) SetValidFrom(v string) {
	o.ValidFrom = v
}

func (o HandlerCreateStampsCategoriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateStampsCategoriesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category_desc"] = o.CategoryDesc
	toSerialize["entered_by_userid"] = o.EnteredByUserid
	toSerialize["gl_code"] = o.GlCode
	toSerialize["valid_from"] = o.ValidFrom
	return toSerialize, nil
}

func (o *HandlerCreateStampsCategoriesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_desc",
		"entered_by_userid",
		"gl_code",
		"valid_from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateStampsCategoriesRequest := _HandlerCreateStampsCategoriesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateStampsCategoriesRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateStampsCategoriesRequest(varHandlerCreateStampsCategoriesRequest)

	return err
}

type NullableHandlerCreateStampsCategoriesRequest struct {
	value *HandlerCreateStampsCategoriesRequest
	isSet bool
}

func (v NullableHandlerCreateStampsCategoriesRequest) Get() *HandlerCreateStampsCategoriesRequest {
	return v.value
}

func (v *NullableHandlerCreateStampsCategoriesRequest) Set(val *HandlerCreateStampsCategoriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateStampsCategoriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateStampsCategoriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateStampsCategoriesRequest(val *HandlerCreateStampsCategoriesRequest) *NullableHandlerCreateStampsCategoriesRequest {
	return &NullableHandlerCreateStampsCategoriesRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateStampsCategoriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateStampsCategoriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


