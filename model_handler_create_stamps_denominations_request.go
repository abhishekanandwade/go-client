/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateStampsDenominationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateStampsDenominationsRequest{}

// HandlerCreateStampsDenominationsRequest struct for HandlerCreateStampsDenominationsRequest
type HandlerCreateStampsDenominationsRequest struct {
	CategoryId string `json:"category_id"`
	DenominationDesc string `json:"denomination_desc"`
	DenominationValue float32 `json:"denomination_value"`
	EnteredBy string `json:"entered_by"`
	OfficeId *int32 `json:"office_id,omitempty"`
	ValidFrom string `json:"valid_from"`
}

type _HandlerCreateStampsDenominationsRequest HandlerCreateStampsDenominationsRequest

// NewHandlerCreateStampsDenominationsRequest instantiates a new HandlerCreateStampsDenominationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateStampsDenominationsRequest(categoryId string, denominationDesc string, denominationValue float32, enteredBy string, validFrom string) *HandlerCreateStampsDenominationsRequest {
	this := HandlerCreateStampsDenominationsRequest{}
	this.CategoryId = categoryId
	this.DenominationDesc = denominationDesc
	this.DenominationValue = denominationValue
	this.EnteredBy = enteredBy
	this.ValidFrom = validFrom
	return &this
}

// NewHandlerCreateStampsDenominationsRequestWithDefaults instantiates a new HandlerCreateStampsDenominationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateStampsDenominationsRequestWithDefaults() *HandlerCreateStampsDenominationsRequest {
	this := HandlerCreateStampsDenominationsRequest{}
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *HandlerCreateStampsDenominationsRequest) GetCategoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetCategoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *HandlerCreateStampsDenominationsRequest) SetCategoryId(v string) {
	o.CategoryId = v
}

// GetDenominationDesc returns the DenominationDesc field value
func (o *HandlerCreateStampsDenominationsRequest) GetDenominationDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetDenominationDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DenominationDesc, true
}

// SetDenominationDesc sets field value
func (o *HandlerCreateStampsDenominationsRequest) SetDenominationDesc(v string) {
	o.DenominationDesc = v
}

// GetDenominationValue returns the DenominationValue field value
func (o *HandlerCreateStampsDenominationsRequest) GetDenominationValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetDenominationValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DenominationValue, true
}

// SetDenominationValue sets field value
func (o *HandlerCreateStampsDenominationsRequest) SetDenominationValue(v float32) {
	o.DenominationValue = v
}

// GetEnteredBy returns the EnteredBy field value
func (o *HandlerCreateStampsDenominationsRequest) GetEnteredBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnteredBy
}

// GetEnteredByOk returns a tuple with the EnteredBy field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetEnteredByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnteredBy, true
}

// SetEnteredBy sets field value
func (o *HandlerCreateStampsDenominationsRequest) SetEnteredBy(v string) {
	o.EnteredBy = v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *HandlerCreateStampsDenominationsRequest) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *HandlerCreateStampsDenominationsRequest) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *HandlerCreateStampsDenominationsRequest) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetValidFrom returns the ValidFrom field value
func (o *HandlerCreateStampsDenominationsRequest) GetValidFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsDenominationsRequest) GetValidFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *HandlerCreateStampsDenominationsRequest) SetValidFrom(v string) {
	o.ValidFrom = v
}

func (o HandlerCreateStampsDenominationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateStampsDenominationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category_id"] = o.CategoryId
	toSerialize["denomination_desc"] = o.DenominationDesc
	toSerialize["denomination_value"] = o.DenominationValue
	toSerialize["entered_by"] = o.EnteredBy
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	toSerialize["valid_from"] = o.ValidFrom
	return toSerialize, nil
}

func (o *HandlerCreateStampsDenominationsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_id",
		"denomination_desc",
		"denomination_value",
		"entered_by",
		"valid_from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateStampsDenominationsRequest := _HandlerCreateStampsDenominationsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateStampsDenominationsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateStampsDenominationsRequest(varHandlerCreateStampsDenominationsRequest)

	return err
}

type NullableHandlerCreateStampsDenominationsRequest struct {
	value *HandlerCreateStampsDenominationsRequest
	isSet bool
}

func (v NullableHandlerCreateStampsDenominationsRequest) Get() *HandlerCreateStampsDenominationsRequest {
	return v.value
}

func (v *NullableHandlerCreateStampsDenominationsRequest) Set(val *HandlerCreateStampsDenominationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateStampsDenominationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateStampsDenominationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateStampsDenominationsRequest(val *HandlerCreateStampsDenominationsRequest) *NullableHandlerCreateStampsDenominationsRequest {
	return &NullableHandlerCreateStampsDenominationsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateStampsDenominationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateStampsDenominationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


