/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateStampsSoiledWriteOffLimitsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateStampsSoiledWriteOffLimitsRequest{}

// HandlerCreateStampsSoiledWriteOffLimitsRequest struct for HandlerCreateStampsSoiledWriteOffLimitsRequest
type HandlerCreateStampsSoiledWriteOffLimitsRequest struct {
	EnteredByUserid string `json:"entered_by_userid"`
	LimitPerAnnum *int32 `json:"limit_per_annum,omitempty"`
	LimitPerTime int32 `json:"limit_per_time"`
	ValidFrom string `json:"valid_from"`
}

type _HandlerCreateStampsSoiledWriteOffLimitsRequest HandlerCreateStampsSoiledWriteOffLimitsRequest

// NewHandlerCreateStampsSoiledWriteOffLimitsRequest instantiates a new HandlerCreateStampsSoiledWriteOffLimitsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateStampsSoiledWriteOffLimitsRequest(enteredByUserid string, limitPerTime int32, validFrom string) *HandlerCreateStampsSoiledWriteOffLimitsRequest {
	this := HandlerCreateStampsSoiledWriteOffLimitsRequest{}
	this.EnteredByUserid = enteredByUserid
	this.LimitPerTime = limitPerTime
	this.ValidFrom = validFrom
	return &this
}

// NewHandlerCreateStampsSoiledWriteOffLimitsRequestWithDefaults instantiates a new HandlerCreateStampsSoiledWriteOffLimitsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateStampsSoiledWriteOffLimitsRequestWithDefaults() *HandlerCreateStampsSoiledWriteOffLimitsRequest {
	this := HandlerCreateStampsSoiledWriteOffLimitsRequest{}
	return &this
}

// GetEnteredByUserid returns the EnteredByUserid field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetEnteredByUserid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnteredByUserid
}

// GetEnteredByUseridOk returns a tuple with the EnteredByUserid field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetEnteredByUseridOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnteredByUserid, true
}

// SetEnteredByUserid sets field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) SetEnteredByUserid(v string) {
	o.EnteredByUserid = v
}

// GetLimitPerAnnum returns the LimitPerAnnum field value if set, zero value otherwise.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetLimitPerAnnum() int32 {
	if o == nil || IsNil(o.LimitPerAnnum) {
		var ret int32
		return ret
	}
	return *o.LimitPerAnnum
}

// GetLimitPerAnnumOk returns a tuple with the LimitPerAnnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetLimitPerAnnumOk() (*int32, bool) {
	if o == nil || IsNil(o.LimitPerAnnum) {
		return nil, false
	}
	return o.LimitPerAnnum, true
}

// HasLimitPerAnnum returns a boolean if a field has been set.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) HasLimitPerAnnum() bool {
	if o != nil && !IsNil(o.LimitPerAnnum) {
		return true
	}

	return false
}

// SetLimitPerAnnum gets a reference to the given int32 and assigns it to the LimitPerAnnum field.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) SetLimitPerAnnum(v int32) {
	o.LimitPerAnnum = &v
}

// GetLimitPerTime returns the LimitPerTime field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetLimitPerTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LimitPerTime
}

// GetLimitPerTimeOk returns a tuple with the LimitPerTime field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetLimitPerTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LimitPerTime, true
}

// SetLimitPerTime sets field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) SetLimitPerTime(v int32) {
	o.LimitPerTime = v
}

// GetValidFrom returns the ValidFrom field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetValidFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) GetValidFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) SetValidFrom(v string) {
	o.ValidFrom = v
}

func (o HandlerCreateStampsSoiledWriteOffLimitsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateStampsSoiledWriteOffLimitsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entered_by_userid"] = o.EnteredByUserid
	if !IsNil(o.LimitPerAnnum) {
		toSerialize["limit_per_annum"] = o.LimitPerAnnum
	}
	toSerialize["limit_per_time"] = o.LimitPerTime
	toSerialize["valid_from"] = o.ValidFrom
	return toSerialize, nil
}

func (o *HandlerCreateStampsSoiledWriteOffLimitsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entered_by_userid",
		"limit_per_time",
		"valid_from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateStampsSoiledWriteOffLimitsRequest := _HandlerCreateStampsSoiledWriteOffLimitsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateStampsSoiledWriteOffLimitsRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateStampsSoiledWriteOffLimitsRequest(varHandlerCreateStampsSoiledWriteOffLimitsRequest)

	return err
}

type NullableHandlerCreateStampsSoiledWriteOffLimitsRequest struct {
	value *HandlerCreateStampsSoiledWriteOffLimitsRequest
	isSet bool
}

func (v NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) Get() *HandlerCreateStampsSoiledWriteOffLimitsRequest {
	return v.value
}

func (v *NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) Set(val *HandlerCreateStampsSoiledWriteOffLimitsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateStampsSoiledWriteOffLimitsRequest(val *HandlerCreateStampsSoiledWriteOffLimitsRequest) *NullableHandlerCreateStampsSoiledWriteOffLimitsRequest {
	return &NullableHandlerCreateStampsSoiledWriteOffLimitsRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateStampsSoiledWriteOffLimitsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


