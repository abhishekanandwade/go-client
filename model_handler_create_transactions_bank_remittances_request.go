/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerCreateTransactionsBankRemittancesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCreateTransactionsBankRemittancesRequest{}

// HandlerCreateTransactionsBankRemittancesRequest struct for HandlerCreateTransactionsBankRemittancesRequest
type HandlerCreateTransactionsBankRemittancesRequest struct {
	BagWeight *float32 `json:"bag_weight,omitempty"`
	ChequeDate *string `json:"cheque_date,omitempty"`
	ChequeNo *string `json:"cheque_no,omitempty"`
	CurrencyDetails *map[string]int32 `json:"currency_details,omitempty"`
	EmployeeId1 *int32 `json:"employee_id1,omitempty"`
	EmployeeId2 *int32 `json:"employee_id2,omitempty"`
	IsSingleHand *bool `json:"is_single_hand,omitempty"`
	IsSpecialRemittance *bool `json:"is_special_remittance,omitempty"`
	IssOfficeId int32 `json:"iss_office_id"`
	LiabilityDetails *string `json:"liability_details,omitempty"`
	LimitId *string `json:"limit_id,omitempty"`
	PayeeName *string `json:"payee_name,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	ReqAmount float32 `json:"req_amount"`
	ReqOfficeId int32 `json:"req_office_id"`
	ReqUserId int32 `json:"req_user_id"`
	RequestId *string `json:"request_id,omitempty"`
	RequestSource string `json:"request_source"`
	RequestType *string `json:"request_type,omitempty"`
	TxnMode string `json:"txn_mode"`
}

type _HandlerCreateTransactionsBankRemittancesRequest HandlerCreateTransactionsBankRemittancesRequest

// NewHandlerCreateTransactionsBankRemittancesRequest instantiates a new HandlerCreateTransactionsBankRemittancesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCreateTransactionsBankRemittancesRequest(issOfficeId int32, reqAmount float32, reqOfficeId int32, reqUserId int32, requestSource string, txnMode string) *HandlerCreateTransactionsBankRemittancesRequest {
	this := HandlerCreateTransactionsBankRemittancesRequest{}
	this.IssOfficeId = issOfficeId
	this.ReqAmount = reqAmount
	this.ReqOfficeId = reqOfficeId
	this.ReqUserId = reqUserId
	this.RequestSource = requestSource
	this.TxnMode = txnMode
	return &this
}

// NewHandlerCreateTransactionsBankRemittancesRequestWithDefaults instantiates a new HandlerCreateTransactionsBankRemittancesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCreateTransactionsBankRemittancesRequestWithDefaults() *HandlerCreateTransactionsBankRemittancesRequest {
	this := HandlerCreateTransactionsBankRemittancesRequest{}
	return &this
}

// GetBagWeight returns the BagWeight field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetBagWeight() float32 {
	if o == nil || IsNil(o.BagWeight) {
		var ret float32
		return ret
	}
	return *o.BagWeight
}

// GetBagWeightOk returns a tuple with the BagWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetBagWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.BagWeight) {
		return nil, false
	}
	return o.BagWeight, true
}

// HasBagWeight returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasBagWeight() bool {
	if o != nil && !IsNil(o.BagWeight) {
		return true
	}

	return false
}

// SetBagWeight gets a reference to the given float32 and assigns it to the BagWeight field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetBagWeight(v float32) {
	o.BagWeight = &v
}

// GetChequeDate returns the ChequeDate field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetChequeDate() string {
	if o == nil || IsNil(o.ChequeDate) {
		var ret string
		return ret
	}
	return *o.ChequeDate
}

// GetChequeDateOk returns a tuple with the ChequeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetChequeDateOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeDate) {
		return nil, false
	}
	return o.ChequeDate, true
}

// HasChequeDate returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasChequeDate() bool {
	if o != nil && !IsNil(o.ChequeDate) {
		return true
	}

	return false
}

// SetChequeDate gets a reference to the given string and assigns it to the ChequeDate field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetChequeDate(v string) {
	o.ChequeDate = &v
}

// GetChequeNo returns the ChequeNo field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetChequeNo() string {
	if o == nil || IsNil(o.ChequeNo) {
		var ret string
		return ret
	}
	return *o.ChequeNo
}

// GetChequeNoOk returns a tuple with the ChequeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetChequeNoOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeNo) {
		return nil, false
	}
	return o.ChequeNo, true
}

// HasChequeNo returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasChequeNo() bool {
	if o != nil && !IsNil(o.ChequeNo) {
		return true
	}

	return false
}

// SetChequeNo gets a reference to the given string and assigns it to the ChequeNo field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetChequeNo(v string) {
	o.ChequeNo = &v
}

// GetCurrencyDetails returns the CurrencyDetails field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetCurrencyDetails() map[string]int32 {
	if o == nil || IsNil(o.CurrencyDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.CurrencyDetails
}

// GetCurrencyDetailsOk returns a tuple with the CurrencyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetCurrencyDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.CurrencyDetails) {
		return nil, false
	}
	return o.CurrencyDetails, true
}

// HasCurrencyDetails returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasCurrencyDetails() bool {
	if o != nil && !IsNil(o.CurrencyDetails) {
		return true
	}

	return false
}

// SetCurrencyDetails gets a reference to the given map[string]int32 and assigns it to the CurrencyDetails field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetCurrencyDetails(v map[string]int32) {
	o.CurrencyDetails = &v
}

// GetEmployeeId1 returns the EmployeeId1 field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetEmployeeId1() int32 {
	if o == nil || IsNil(o.EmployeeId1) {
		var ret int32
		return ret
	}
	return *o.EmployeeId1
}

// GetEmployeeId1Ok returns a tuple with the EmployeeId1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetEmployeeId1Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId1) {
		return nil, false
	}
	return o.EmployeeId1, true
}

// HasEmployeeId1 returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasEmployeeId1() bool {
	if o != nil && !IsNil(o.EmployeeId1) {
		return true
	}

	return false
}

// SetEmployeeId1 gets a reference to the given int32 and assigns it to the EmployeeId1 field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetEmployeeId1(v int32) {
	o.EmployeeId1 = &v
}

// GetEmployeeId2 returns the EmployeeId2 field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetEmployeeId2() int32 {
	if o == nil || IsNil(o.EmployeeId2) {
		var ret int32
		return ret
	}
	return *o.EmployeeId2
}

// GetEmployeeId2Ok returns a tuple with the EmployeeId2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetEmployeeId2Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId2) {
		return nil, false
	}
	return o.EmployeeId2, true
}

// HasEmployeeId2 returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasEmployeeId2() bool {
	if o != nil && !IsNil(o.EmployeeId2) {
		return true
	}

	return false
}

// SetEmployeeId2 gets a reference to the given int32 and assigns it to the EmployeeId2 field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetEmployeeId2(v int32) {
	o.EmployeeId2 = &v
}

// GetIsSingleHand returns the IsSingleHand field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIsSingleHand() bool {
	if o == nil || IsNil(o.IsSingleHand) {
		var ret bool
		return ret
	}
	return *o.IsSingleHand
}

// GetIsSingleHandOk returns a tuple with the IsSingleHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIsSingleHandOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSingleHand) {
		return nil, false
	}
	return o.IsSingleHand, true
}

// HasIsSingleHand returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasIsSingleHand() bool {
	if o != nil && !IsNil(o.IsSingleHand) {
		return true
	}

	return false
}

// SetIsSingleHand gets a reference to the given bool and assigns it to the IsSingleHand field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetIsSingleHand(v bool) {
	o.IsSingleHand = &v
}

// GetIsSpecialRemittance returns the IsSpecialRemittance field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIsSpecialRemittance() bool {
	if o == nil || IsNil(o.IsSpecialRemittance) {
		var ret bool
		return ret
	}
	return *o.IsSpecialRemittance
}

// GetIsSpecialRemittanceOk returns a tuple with the IsSpecialRemittance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIsSpecialRemittanceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpecialRemittance) {
		return nil, false
	}
	return o.IsSpecialRemittance, true
}

// HasIsSpecialRemittance returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasIsSpecialRemittance() bool {
	if o != nil && !IsNil(o.IsSpecialRemittance) {
		return true
	}

	return false
}

// SetIsSpecialRemittance gets a reference to the given bool and assigns it to the IsSpecialRemittance field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetIsSpecialRemittance(v bool) {
	o.IsSpecialRemittance = &v
}

// GetIssOfficeId returns the IssOfficeId field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIssOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IssOfficeId
}

// GetIssOfficeIdOk returns a tuple with the IssOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetIssOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssOfficeId, true
}

// SetIssOfficeId sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetIssOfficeId(v int32) {
	o.IssOfficeId = v
}

// GetLiabilityDetails returns the LiabilityDetails field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetLiabilityDetails() string {
	if o == nil || IsNil(o.LiabilityDetails) {
		var ret string
		return ret
	}
	return *o.LiabilityDetails
}

// GetLiabilityDetailsOk returns a tuple with the LiabilityDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetLiabilityDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.LiabilityDetails) {
		return nil, false
	}
	return o.LiabilityDetails, true
}

// HasLiabilityDetails returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasLiabilityDetails() bool {
	if o != nil && !IsNil(o.LiabilityDetails) {
		return true
	}

	return false
}

// SetLiabilityDetails gets a reference to the given string and assigns it to the LiabilityDetails field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetLiabilityDetails(v string) {
	o.LiabilityDetails = &v
}

// GetLimitId returns the LimitId field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetLimitId() string {
	if o == nil || IsNil(o.LimitId) {
		var ret string
		return ret
	}
	return *o.LimitId
}

// GetLimitIdOk returns a tuple with the LimitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetLimitIdOk() (*string, bool) {
	if o == nil || IsNil(o.LimitId) {
		return nil, false
	}
	return o.LimitId, true
}

// HasLimitId returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasLimitId() bool {
	if o != nil && !IsNil(o.LimitId) {
		return true
	}

	return false
}

// SetLimitId gets a reference to the given string and assigns it to the LimitId field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetLimitId(v string) {
	o.LimitId = &v
}

// GetPayeeName returns the PayeeName field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetPayeeName() string {
	if o == nil || IsNil(o.PayeeName) {
		var ret string
		return ret
	}
	return *o.PayeeName
}

// GetPayeeNameOk returns a tuple with the PayeeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetPayeeNameOk() (*string, bool) {
	if o == nil || IsNil(o.PayeeName) {
		return nil, false
	}
	return o.PayeeName, true
}

// HasPayeeName returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasPayeeName() bool {
	if o != nil && !IsNil(o.PayeeName) {
		return true
	}

	return false
}

// SetPayeeName gets a reference to the given string and assigns it to the PayeeName field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetPayeeName(v string) {
	o.PayeeName = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetRemarks(v string) {
	o.Remarks = &v
}

// GetReqAmount returns the ReqAmount field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReqAmount
}

// GetReqAmountOk returns a tuple with the ReqAmount field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReqAmount, true
}

// SetReqAmount sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetReqAmount(v float32) {
	o.ReqAmount = v
}

// GetReqOfficeId returns the ReqOfficeId field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReqOfficeId
}

// GetReqOfficeIdOk returns a tuple with the ReqOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReqOfficeId, true
}

// SetReqOfficeId sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetReqOfficeId(v int32) {
	o.ReqOfficeId = v
}

// GetReqUserId returns the ReqUserId field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReqUserId
}

// GetReqUserIdOk returns a tuple with the ReqUserId field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetReqUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReqUserId, true
}

// SetReqUserId sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetReqUserId(v int32) {
	o.ReqUserId = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetRequestId(v string) {
	o.RequestId = &v
}

// GetRequestSource returns the RequestSource field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestSource
}

// GetRequestSourceOk returns a tuple with the RequestSource field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestSource, true
}

// SetRequestSource sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetRequestSource(v string) {
	o.RequestSource = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetRequestType(v string) {
	o.RequestType = &v
}

// GetTxnMode returns the TxnMode field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetTxnMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxnMode
}

// GetTxnModeOk returns a tuple with the TxnMode field value
// and a boolean to check if the value has been set.
func (o *HandlerCreateTransactionsBankRemittancesRequest) GetTxnModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxnMode, true
}

// SetTxnMode sets field value
func (o *HandlerCreateTransactionsBankRemittancesRequest) SetTxnMode(v string) {
	o.TxnMode = v
}

func (o HandlerCreateTransactionsBankRemittancesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCreateTransactionsBankRemittancesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BagWeight) {
		toSerialize["bag_weight"] = o.BagWeight
	}
	if !IsNil(o.ChequeDate) {
		toSerialize["cheque_date"] = o.ChequeDate
	}
	if !IsNil(o.ChequeNo) {
		toSerialize["cheque_no"] = o.ChequeNo
	}
	if !IsNil(o.CurrencyDetails) {
		toSerialize["currency_details"] = o.CurrencyDetails
	}
	if !IsNil(o.EmployeeId1) {
		toSerialize["employee_id1"] = o.EmployeeId1
	}
	if !IsNil(o.EmployeeId2) {
		toSerialize["employee_id2"] = o.EmployeeId2
	}
	if !IsNil(o.IsSingleHand) {
		toSerialize["is_single_hand"] = o.IsSingleHand
	}
	if !IsNil(o.IsSpecialRemittance) {
		toSerialize["is_special_remittance"] = o.IsSpecialRemittance
	}
	toSerialize["iss_office_id"] = o.IssOfficeId
	if !IsNil(o.LiabilityDetails) {
		toSerialize["liability_details"] = o.LiabilityDetails
	}
	if !IsNil(o.LimitId) {
		toSerialize["limit_id"] = o.LimitId
	}
	if !IsNil(o.PayeeName) {
		toSerialize["payee_name"] = o.PayeeName
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	toSerialize["req_amount"] = o.ReqAmount
	toSerialize["req_office_id"] = o.ReqOfficeId
	toSerialize["req_user_id"] = o.ReqUserId
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	toSerialize["request_source"] = o.RequestSource
	if !IsNil(o.RequestType) {
		toSerialize["request_type"] = o.RequestType
	}
	toSerialize["txn_mode"] = o.TxnMode
	return toSerialize, nil
}

func (o *HandlerCreateTransactionsBankRemittancesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"iss_office_id",
		"req_amount",
		"req_office_id",
		"req_user_id",
		"request_source",
		"txn_mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerCreateTransactionsBankRemittancesRequest := _HandlerCreateTransactionsBankRemittancesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerCreateTransactionsBankRemittancesRequest)

	if err != nil {
		return err
	}

	*o = HandlerCreateTransactionsBankRemittancesRequest(varHandlerCreateTransactionsBankRemittancesRequest)

	return err
}

type NullableHandlerCreateTransactionsBankRemittancesRequest struct {
	value *HandlerCreateTransactionsBankRemittancesRequest
	isSet bool
}

func (v NullableHandlerCreateTransactionsBankRemittancesRequest) Get() *HandlerCreateTransactionsBankRemittancesRequest {
	return v.value
}

func (v *NullableHandlerCreateTransactionsBankRemittancesRequest) Set(val *HandlerCreateTransactionsBankRemittancesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCreateTransactionsBankRemittancesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCreateTransactionsBankRemittancesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCreateTransactionsBankRemittancesRequest(val *HandlerCreateTransactionsBankRemittancesRequest) *NullableHandlerCreateTransactionsBankRemittancesRequest {
	return &NullableHandlerCreateTransactionsBankRemittancesRequest{value: val, isSet: true}
}

func (v NullableHandlerCreateTransactionsBankRemittancesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCreateTransactionsBankRemittancesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


