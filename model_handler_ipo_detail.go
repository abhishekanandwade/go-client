/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerIPODetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerIPODetail{}

// HandlerIPODetail struct for HandlerIPODetail
type HandlerIPODetail struct {
	CurrQty *int32 `json:"curr_qty,omitempty"`
	CurrSerial *string `json:"curr_serial,omitempty"`
	DenominationDesc *string `json:"denomination_Desc,omitempty"`
	DenominationValue *string `json:"denomination_Value,omitempty"`
	DenominationId string `json:"denomination_id"`
	EndSerial string `json:"end_serial"`
	PrefixId string `json:"prefix_id"`
	StartSerial string `json:"start_serial"`
	TotQuantity int32 `json:"tot_quantity"`
}

type _HandlerIPODetail HandlerIPODetail

// NewHandlerIPODetail instantiates a new HandlerIPODetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerIPODetail(denominationId string, endSerial string, prefixId string, startSerial string, totQuantity int32) *HandlerIPODetail {
	this := HandlerIPODetail{}
	this.DenominationId = denominationId
	this.EndSerial = endSerial
	this.PrefixId = prefixId
	this.StartSerial = startSerial
	this.TotQuantity = totQuantity
	return &this
}

// NewHandlerIPODetailWithDefaults instantiates a new HandlerIPODetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerIPODetailWithDefaults() *HandlerIPODetail {
	this := HandlerIPODetail{}
	return &this
}

// GetCurrQty returns the CurrQty field value if set, zero value otherwise.
func (o *HandlerIPODetail) GetCurrQty() int32 {
	if o == nil || IsNil(o.CurrQty) {
		var ret int32
		return ret
	}
	return *o.CurrQty
}

// GetCurrQtyOk returns a tuple with the CurrQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetCurrQtyOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrQty) {
		return nil, false
	}
	return o.CurrQty, true
}

// HasCurrQty returns a boolean if a field has been set.
func (o *HandlerIPODetail) HasCurrQty() bool {
	if o != nil && !IsNil(o.CurrQty) {
		return true
	}

	return false
}

// SetCurrQty gets a reference to the given int32 and assigns it to the CurrQty field.
func (o *HandlerIPODetail) SetCurrQty(v int32) {
	o.CurrQty = &v
}

// GetCurrSerial returns the CurrSerial field value if set, zero value otherwise.
func (o *HandlerIPODetail) GetCurrSerial() string {
	if o == nil || IsNil(o.CurrSerial) {
		var ret string
		return ret
	}
	return *o.CurrSerial
}

// GetCurrSerialOk returns a tuple with the CurrSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetCurrSerialOk() (*string, bool) {
	if o == nil || IsNil(o.CurrSerial) {
		return nil, false
	}
	return o.CurrSerial, true
}

// HasCurrSerial returns a boolean if a field has been set.
func (o *HandlerIPODetail) HasCurrSerial() bool {
	if o != nil && !IsNil(o.CurrSerial) {
		return true
	}

	return false
}

// SetCurrSerial gets a reference to the given string and assigns it to the CurrSerial field.
func (o *HandlerIPODetail) SetCurrSerial(v string) {
	o.CurrSerial = &v
}

// GetDenominationDesc returns the DenominationDesc field value if set, zero value otherwise.
func (o *HandlerIPODetail) GetDenominationDesc() string {
	if o == nil || IsNil(o.DenominationDesc) {
		var ret string
		return ret
	}
	return *o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetDenominationDescOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationDesc) {
		return nil, false
	}
	return o.DenominationDesc, true
}

// HasDenominationDesc returns a boolean if a field has been set.
func (o *HandlerIPODetail) HasDenominationDesc() bool {
	if o != nil && !IsNil(o.DenominationDesc) {
		return true
	}

	return false
}

// SetDenominationDesc gets a reference to the given string and assigns it to the DenominationDesc field.
func (o *HandlerIPODetail) SetDenominationDesc(v string) {
	o.DenominationDesc = &v
}

// GetDenominationValue returns the DenominationValue field value if set, zero value otherwise.
func (o *HandlerIPODetail) GetDenominationValue() string {
	if o == nil || IsNil(o.DenominationValue) {
		var ret string
		return ret
	}
	return *o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetDenominationValueOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationValue) {
		return nil, false
	}
	return o.DenominationValue, true
}

// HasDenominationValue returns a boolean if a field has been set.
func (o *HandlerIPODetail) HasDenominationValue() bool {
	if o != nil && !IsNil(o.DenominationValue) {
		return true
	}

	return false
}

// SetDenominationValue gets a reference to the given string and assigns it to the DenominationValue field.
func (o *HandlerIPODetail) SetDenominationValue(v string) {
	o.DenominationValue = &v
}

// GetDenominationId returns the DenominationId field value
func (o *HandlerIPODetail) GetDenominationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DenominationId
}

// GetDenominationIdOk returns a tuple with the DenominationId field value
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetDenominationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DenominationId, true
}

// SetDenominationId sets field value
func (o *HandlerIPODetail) SetDenominationId(v string) {
	o.DenominationId = v
}

// GetEndSerial returns the EndSerial field value
func (o *HandlerIPODetail) GetEndSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndSerial
}

// GetEndSerialOk returns a tuple with the EndSerial field value
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetEndSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndSerial, true
}

// SetEndSerial sets field value
func (o *HandlerIPODetail) SetEndSerial(v string) {
	o.EndSerial = v
}

// GetPrefixId returns the PrefixId field value
func (o *HandlerIPODetail) GetPrefixId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrefixId
}

// GetPrefixIdOk returns a tuple with the PrefixId field value
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetPrefixIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrefixId, true
}

// SetPrefixId sets field value
func (o *HandlerIPODetail) SetPrefixId(v string) {
	o.PrefixId = v
}

// GetStartSerial returns the StartSerial field value
func (o *HandlerIPODetail) GetStartSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartSerial
}

// GetStartSerialOk returns a tuple with the StartSerial field value
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetStartSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartSerial, true
}

// SetStartSerial sets field value
func (o *HandlerIPODetail) SetStartSerial(v string) {
	o.StartSerial = v
}

// GetTotQuantity returns the TotQuantity field value
func (o *HandlerIPODetail) GetTotQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotQuantity
}

// GetTotQuantityOk returns a tuple with the TotQuantity field value
// and a boolean to check if the value has been set.
func (o *HandlerIPODetail) GetTotQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotQuantity, true
}

// SetTotQuantity sets field value
func (o *HandlerIPODetail) SetTotQuantity(v int32) {
	o.TotQuantity = v
}

func (o HandlerIPODetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerIPODetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrQty) {
		toSerialize["curr_qty"] = o.CurrQty
	}
	if !IsNil(o.CurrSerial) {
		toSerialize["curr_serial"] = o.CurrSerial
	}
	if !IsNil(o.DenominationDesc) {
		toSerialize["denomination_Desc"] = o.DenominationDesc
	}
	if !IsNil(o.DenominationValue) {
		toSerialize["denomination_Value"] = o.DenominationValue
	}
	toSerialize["denomination_id"] = o.DenominationId
	toSerialize["end_serial"] = o.EndSerial
	toSerialize["prefix_id"] = o.PrefixId
	toSerialize["start_serial"] = o.StartSerial
	toSerialize["tot_quantity"] = o.TotQuantity
	return toSerialize, nil
}

func (o *HandlerIPODetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"denomination_id",
		"end_serial",
		"prefix_id",
		"start_serial",
		"tot_quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerIPODetail := _HandlerIPODetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerIPODetail)

	if err != nil {
		return err
	}

	*o = HandlerIPODetail(varHandlerIPODetail)

	return err
}

type NullableHandlerIPODetail struct {
	value *HandlerIPODetail
	isSet bool
}

func (v NullableHandlerIPODetail) Get() *HandlerIPODetail {
	return v.value
}

func (v *NullableHandlerIPODetail) Set(val *HandlerIPODetail) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerIPODetail) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerIPODetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerIPODetail(val *HandlerIPODetail) *NullableHandlerIPODetail {
	return &NullableHandlerIPODetail{value: val, isSet: true}
}

func (v NullableHandlerIPODetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerIPODetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


