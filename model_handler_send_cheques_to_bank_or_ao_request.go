/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerSendChequesToBankOrAORequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerSendChequesToBankOrAORequest{}

// HandlerSendChequesToBankOrAORequest struct for HandlerSendChequesToBankOrAORequest
type HandlerSendChequesToBankOrAORequest struct {
	BoSentDate *string `json:"bo_sent_date,omitempty"`
	BoUserId *int32 `json:"bo_user_id,omitempty"`
	ChequeAmount float32 `json:"cheque_amount"`
	ChequeDate string `json:"cheque_date"`
	ChequeNo string `json:"cheque_no"`
	ClearingSentDate *string `json:"clearing_sent_date,omitempty"`
	CurrOfficeId int32 `json:"curr_office_id"`
	DdoUserId *int32 `json:"ddo_user_id,omitempty"`
	NcddoSentDate *string `json:"ncddo_sent_date,omitempty"`
	NcddoUserId *int32 `json:"ncddo_user_id,omitempty"`
	SoSentDate *string `json:"so_sent_date,omitempty"`
	SoUserId *int32 `json:"so_user_id,omitempty"`
	SrcOfficeId int32 `json:"src_office_id"`
}

type _HandlerSendChequesToBankOrAORequest HandlerSendChequesToBankOrAORequest

// NewHandlerSendChequesToBankOrAORequest instantiates a new HandlerSendChequesToBankOrAORequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerSendChequesToBankOrAORequest(chequeAmount float32, chequeDate string, chequeNo string, currOfficeId int32, srcOfficeId int32) *HandlerSendChequesToBankOrAORequest {
	this := HandlerSendChequesToBankOrAORequest{}
	this.ChequeAmount = chequeAmount
	this.ChequeDate = chequeDate
	this.ChequeNo = chequeNo
	this.CurrOfficeId = currOfficeId
	this.SrcOfficeId = srcOfficeId
	return &this
}

// NewHandlerSendChequesToBankOrAORequestWithDefaults instantiates a new HandlerSendChequesToBankOrAORequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerSendChequesToBankOrAORequestWithDefaults() *HandlerSendChequesToBankOrAORequest {
	this := HandlerSendChequesToBankOrAORequest{}
	return &this
}

// GetBoSentDate returns the BoSentDate field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetBoSentDate() string {
	if o == nil || IsNil(o.BoSentDate) {
		var ret string
		return ret
	}
	return *o.BoSentDate
}

// GetBoSentDateOk returns a tuple with the BoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetBoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.BoSentDate) {
		return nil, false
	}
	return o.BoSentDate, true
}

// HasBoSentDate returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasBoSentDate() bool {
	if o != nil && !IsNil(o.BoSentDate) {
		return true
	}

	return false
}

// SetBoSentDate gets a reference to the given string and assigns it to the BoSentDate field.
func (o *HandlerSendChequesToBankOrAORequest) SetBoSentDate(v string) {
	o.BoSentDate = &v
}

// GetBoUserId returns the BoUserId field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetBoUserId() int32 {
	if o == nil || IsNil(o.BoUserId) {
		var ret int32
		return ret
	}
	return *o.BoUserId
}

// GetBoUserIdOk returns a tuple with the BoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetBoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BoUserId) {
		return nil, false
	}
	return o.BoUserId, true
}

// HasBoUserId returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasBoUserId() bool {
	if o != nil && !IsNil(o.BoUserId) {
		return true
	}

	return false
}

// SetBoUserId gets a reference to the given int32 and assigns it to the BoUserId field.
func (o *HandlerSendChequesToBankOrAORequest) SetBoUserId(v int32) {
	o.BoUserId = &v
}

// GetChequeAmount returns the ChequeAmount field value
func (o *HandlerSendChequesToBankOrAORequest) GetChequeAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChequeAmount
}

// GetChequeAmountOk returns a tuple with the ChequeAmount field value
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetChequeAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChequeAmount, true
}

// SetChequeAmount sets field value
func (o *HandlerSendChequesToBankOrAORequest) SetChequeAmount(v float32) {
	o.ChequeAmount = v
}

// GetChequeDate returns the ChequeDate field value
func (o *HandlerSendChequesToBankOrAORequest) GetChequeDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChequeDate
}

// GetChequeDateOk returns a tuple with the ChequeDate field value
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetChequeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChequeDate, true
}

// SetChequeDate sets field value
func (o *HandlerSendChequesToBankOrAORequest) SetChequeDate(v string) {
	o.ChequeDate = v
}

// GetChequeNo returns the ChequeNo field value
func (o *HandlerSendChequesToBankOrAORequest) GetChequeNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChequeNo
}

// GetChequeNoOk returns a tuple with the ChequeNo field value
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetChequeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChequeNo, true
}

// SetChequeNo sets field value
func (o *HandlerSendChequesToBankOrAORequest) SetChequeNo(v string) {
	o.ChequeNo = v
}

// GetClearingSentDate returns the ClearingSentDate field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetClearingSentDate() string {
	if o == nil || IsNil(o.ClearingSentDate) {
		var ret string
		return ret
	}
	return *o.ClearingSentDate
}

// GetClearingSentDateOk returns a tuple with the ClearingSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetClearingSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClearingSentDate) {
		return nil, false
	}
	return o.ClearingSentDate, true
}

// HasClearingSentDate returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasClearingSentDate() bool {
	if o != nil && !IsNil(o.ClearingSentDate) {
		return true
	}

	return false
}

// SetClearingSentDate gets a reference to the given string and assigns it to the ClearingSentDate field.
func (o *HandlerSendChequesToBankOrAORequest) SetClearingSentDate(v string) {
	o.ClearingSentDate = &v
}

// GetCurrOfficeId returns the CurrOfficeId field value
func (o *HandlerSendChequesToBankOrAORequest) GetCurrOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrOfficeId
}

// GetCurrOfficeIdOk returns a tuple with the CurrOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetCurrOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrOfficeId, true
}

// SetCurrOfficeId sets field value
func (o *HandlerSendChequesToBankOrAORequest) SetCurrOfficeId(v int32) {
	o.CurrOfficeId = v
}

// GetDdoUserId returns the DdoUserId field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetDdoUserId() int32 {
	if o == nil || IsNil(o.DdoUserId) {
		var ret int32
		return ret
	}
	return *o.DdoUserId
}

// GetDdoUserIdOk returns a tuple with the DdoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetDdoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DdoUserId) {
		return nil, false
	}
	return o.DdoUserId, true
}

// HasDdoUserId returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasDdoUserId() bool {
	if o != nil && !IsNil(o.DdoUserId) {
		return true
	}

	return false
}

// SetDdoUserId gets a reference to the given int32 and assigns it to the DdoUserId field.
func (o *HandlerSendChequesToBankOrAORequest) SetDdoUserId(v int32) {
	o.DdoUserId = &v
}

// GetNcddoSentDate returns the NcddoSentDate field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetNcddoSentDate() string {
	if o == nil || IsNil(o.NcddoSentDate) {
		var ret string
		return ret
	}
	return *o.NcddoSentDate
}

// GetNcddoSentDateOk returns a tuple with the NcddoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetNcddoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.NcddoSentDate) {
		return nil, false
	}
	return o.NcddoSentDate, true
}

// HasNcddoSentDate returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasNcddoSentDate() bool {
	if o != nil && !IsNil(o.NcddoSentDate) {
		return true
	}

	return false
}

// SetNcddoSentDate gets a reference to the given string and assigns it to the NcddoSentDate field.
func (o *HandlerSendChequesToBankOrAORequest) SetNcddoSentDate(v string) {
	o.NcddoSentDate = &v
}

// GetNcddoUserId returns the NcddoUserId field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetNcddoUserId() int32 {
	if o == nil || IsNil(o.NcddoUserId) {
		var ret int32
		return ret
	}
	return *o.NcddoUserId
}

// GetNcddoUserIdOk returns a tuple with the NcddoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetNcddoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NcddoUserId) {
		return nil, false
	}
	return o.NcddoUserId, true
}

// HasNcddoUserId returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasNcddoUserId() bool {
	if o != nil && !IsNil(o.NcddoUserId) {
		return true
	}

	return false
}

// SetNcddoUserId gets a reference to the given int32 and assigns it to the NcddoUserId field.
func (o *HandlerSendChequesToBankOrAORequest) SetNcddoUserId(v int32) {
	o.NcddoUserId = &v
}

// GetSoSentDate returns the SoSentDate field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetSoSentDate() string {
	if o == nil || IsNil(o.SoSentDate) {
		var ret string
		return ret
	}
	return *o.SoSentDate
}

// GetSoSentDateOk returns a tuple with the SoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetSoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.SoSentDate) {
		return nil, false
	}
	return o.SoSentDate, true
}

// HasSoSentDate returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasSoSentDate() bool {
	if o != nil && !IsNil(o.SoSentDate) {
		return true
	}

	return false
}

// SetSoSentDate gets a reference to the given string and assigns it to the SoSentDate field.
func (o *HandlerSendChequesToBankOrAORequest) SetSoSentDate(v string) {
	o.SoSentDate = &v
}

// GetSoUserId returns the SoUserId field value if set, zero value otherwise.
func (o *HandlerSendChequesToBankOrAORequest) GetSoUserId() int32 {
	if o == nil || IsNil(o.SoUserId) {
		var ret int32
		return ret
	}
	return *o.SoUserId
}

// GetSoUserIdOk returns a tuple with the SoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetSoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SoUserId) {
		return nil, false
	}
	return o.SoUserId, true
}

// HasSoUserId returns a boolean if a field has been set.
func (o *HandlerSendChequesToBankOrAORequest) HasSoUserId() bool {
	if o != nil && !IsNil(o.SoUserId) {
		return true
	}

	return false
}

// SetSoUserId gets a reference to the given int32 and assigns it to the SoUserId field.
func (o *HandlerSendChequesToBankOrAORequest) SetSoUserId(v int32) {
	o.SoUserId = &v
}

// GetSrcOfficeId returns the SrcOfficeId field value
func (o *HandlerSendChequesToBankOrAORequest) GetSrcOfficeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SrcOfficeId
}

// GetSrcOfficeIdOk returns a tuple with the SrcOfficeId field value
// and a boolean to check if the value has been set.
func (o *HandlerSendChequesToBankOrAORequest) GetSrcOfficeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SrcOfficeId, true
}

// SetSrcOfficeId sets field value
func (o *HandlerSendChequesToBankOrAORequest) SetSrcOfficeId(v int32) {
	o.SrcOfficeId = v
}

func (o HandlerSendChequesToBankOrAORequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerSendChequesToBankOrAORequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoSentDate) {
		toSerialize["bo_sent_date"] = o.BoSentDate
	}
	if !IsNil(o.BoUserId) {
		toSerialize["bo_user_id"] = o.BoUserId
	}
	toSerialize["cheque_amount"] = o.ChequeAmount
	toSerialize["cheque_date"] = o.ChequeDate
	toSerialize["cheque_no"] = o.ChequeNo
	if !IsNil(o.ClearingSentDate) {
		toSerialize["clearing_sent_date"] = o.ClearingSentDate
	}
	toSerialize["curr_office_id"] = o.CurrOfficeId
	if !IsNil(o.DdoUserId) {
		toSerialize["ddo_user_id"] = o.DdoUserId
	}
	if !IsNil(o.NcddoSentDate) {
		toSerialize["ncddo_sent_date"] = o.NcddoSentDate
	}
	if !IsNil(o.NcddoUserId) {
		toSerialize["ncddo_user_id"] = o.NcddoUserId
	}
	if !IsNil(o.SoSentDate) {
		toSerialize["so_sent_date"] = o.SoSentDate
	}
	if !IsNil(o.SoUserId) {
		toSerialize["so_user_id"] = o.SoUserId
	}
	toSerialize["src_office_id"] = o.SrcOfficeId
	return toSerialize, nil
}

func (o *HandlerSendChequesToBankOrAORequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cheque_amount",
		"cheque_date",
		"cheque_no",
		"curr_office_id",
		"src_office_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerSendChequesToBankOrAORequest := _HandlerSendChequesToBankOrAORequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerSendChequesToBankOrAORequest)

	if err != nil {
		return err
	}

	*o = HandlerSendChequesToBankOrAORequest(varHandlerSendChequesToBankOrAORequest)

	return err
}

type NullableHandlerSendChequesToBankOrAORequest struct {
	value *HandlerSendChequesToBankOrAORequest
	isSet bool
}

func (v NullableHandlerSendChequesToBankOrAORequest) Get() *HandlerSendChequesToBankOrAORequest {
	return v.value
}

func (v *NullableHandlerSendChequesToBankOrAORequest) Set(val *HandlerSendChequesToBankOrAORequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerSendChequesToBankOrAORequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerSendChequesToBankOrAORequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerSendChequesToBankOrAORequest(val *HandlerSendChequesToBankOrAORequest) *NullableHandlerSendChequesToBankOrAORequest {
	return &NullableHandlerSendChequesToBankOrAORequest{value: val, isSet: true}
}

func (v NullableHandlerSendChequesToBankOrAORequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerSendChequesToBankOrAORequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


