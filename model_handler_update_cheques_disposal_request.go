/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateChequesDisposalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateChequesDisposalRequest{}

// HandlerUpdateChequesDisposalRequest struct for HandlerUpdateChequesDisposalRequest
type HandlerUpdateChequesDisposalRequest struct {
	ChequeAmount float32 `json:"cheque_amount"`
	DisposedBy int32 `json:"disposed_by"`
	IsBankDrawl *bool `json:"is_bank_drawl,omitempty"`
	TransactionId string `json:"transaction_id"`
}

type _HandlerUpdateChequesDisposalRequest HandlerUpdateChequesDisposalRequest

// NewHandlerUpdateChequesDisposalRequest instantiates a new HandlerUpdateChequesDisposalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateChequesDisposalRequest(chequeAmount float32, disposedBy int32, transactionId string) *HandlerUpdateChequesDisposalRequest {
	this := HandlerUpdateChequesDisposalRequest{}
	this.ChequeAmount = chequeAmount
	this.DisposedBy = disposedBy
	this.TransactionId = transactionId
	return &this
}

// NewHandlerUpdateChequesDisposalRequestWithDefaults instantiates a new HandlerUpdateChequesDisposalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateChequesDisposalRequestWithDefaults() *HandlerUpdateChequesDisposalRequest {
	this := HandlerUpdateChequesDisposalRequest{}
	return &this
}

// GetChequeAmount returns the ChequeAmount field value
func (o *HandlerUpdateChequesDisposalRequest) GetChequeAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChequeAmount
}

// GetChequeAmountOk returns a tuple with the ChequeAmount field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateChequesDisposalRequest) GetChequeAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChequeAmount, true
}

// SetChequeAmount sets field value
func (o *HandlerUpdateChequesDisposalRequest) SetChequeAmount(v float32) {
	o.ChequeAmount = v
}

// GetDisposedBy returns the DisposedBy field value
func (o *HandlerUpdateChequesDisposalRequest) GetDisposedBy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DisposedBy
}

// GetDisposedByOk returns a tuple with the DisposedBy field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateChequesDisposalRequest) GetDisposedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisposedBy, true
}

// SetDisposedBy sets field value
func (o *HandlerUpdateChequesDisposalRequest) SetDisposedBy(v int32) {
	o.DisposedBy = v
}

// GetIsBankDrawl returns the IsBankDrawl field value if set, zero value otherwise.
func (o *HandlerUpdateChequesDisposalRequest) GetIsBankDrawl() bool {
	if o == nil || IsNil(o.IsBankDrawl) {
		var ret bool
		return ret
	}
	return *o.IsBankDrawl
}

// GetIsBankDrawlOk returns a tuple with the IsBankDrawl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateChequesDisposalRequest) GetIsBankDrawlOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBankDrawl) {
		return nil, false
	}
	return o.IsBankDrawl, true
}

// HasIsBankDrawl returns a boolean if a field has been set.
func (o *HandlerUpdateChequesDisposalRequest) HasIsBankDrawl() bool {
	if o != nil && !IsNil(o.IsBankDrawl) {
		return true
	}

	return false
}

// SetIsBankDrawl gets a reference to the given bool and assigns it to the IsBankDrawl field.
func (o *HandlerUpdateChequesDisposalRequest) SetIsBankDrawl(v bool) {
	o.IsBankDrawl = &v
}

// GetTransactionId returns the TransactionId field value
func (o *HandlerUpdateChequesDisposalRequest) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateChequesDisposalRequest) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *HandlerUpdateChequesDisposalRequest) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o HandlerUpdateChequesDisposalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateChequesDisposalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cheque_amount"] = o.ChequeAmount
	toSerialize["disposed_by"] = o.DisposedBy
	if !IsNil(o.IsBankDrawl) {
		toSerialize["is_bank_drawl"] = o.IsBankDrawl
	}
	toSerialize["transaction_id"] = o.TransactionId
	return toSerialize, nil
}

func (o *HandlerUpdateChequesDisposalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cheque_amount",
		"disposed_by",
		"transaction_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateChequesDisposalRequest := _HandlerUpdateChequesDisposalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateChequesDisposalRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateChequesDisposalRequest(varHandlerUpdateChequesDisposalRequest)

	return err
}

type NullableHandlerUpdateChequesDisposalRequest struct {
	value *HandlerUpdateChequesDisposalRequest
	isSet bool
}

func (v NullableHandlerUpdateChequesDisposalRequest) Get() *HandlerUpdateChequesDisposalRequest {
	return v.value
}

func (v *NullableHandlerUpdateChequesDisposalRequest) Set(val *HandlerUpdateChequesDisposalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateChequesDisposalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateChequesDisposalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateChequesDisposalRequest(val *HandlerUpdateChequesDisposalRequest) *NullableHandlerUpdateChequesDisposalRequest {
	return &NullableHandlerUpdateChequesDisposalRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateChequesDisposalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateChequesDisposalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


