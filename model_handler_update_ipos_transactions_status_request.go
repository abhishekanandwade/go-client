/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateIPOsTransactionsStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateIPOsTransactionsStatusRequest{}

// HandlerUpdateIPOsTransactionsStatusRequest struct for HandlerUpdateIPOsTransactionsStatusRequest
type HandlerUpdateIPOsTransactionsStatusRequest struct {
	ApprovedAmt *float32 `json:"approved_amt,omitempty"`
	ApprovedDetails *string `json:"approved_details,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	IsNotApproved *bool `json:"is_not_approved,omitempty"`
	IsSingleHand *bool `json:"is_single_hand,omitempty"`
	IssApproverRemarks *string `json:"iss_approver_remarks,omitempty"`
	IssUserId int32 `json:"iss_user_id"`
	RequestType *string `json:"request_type,omitempty"`
}

type _HandlerUpdateIPOsTransactionsStatusRequest HandlerUpdateIPOsTransactionsStatusRequest

// NewHandlerUpdateIPOsTransactionsStatusRequest instantiates a new HandlerUpdateIPOsTransactionsStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateIPOsTransactionsStatusRequest(issUserId int32) *HandlerUpdateIPOsTransactionsStatusRequest {
	this := HandlerUpdateIPOsTransactionsStatusRequest{}
	this.IssUserId = issUserId
	return &this
}

// NewHandlerUpdateIPOsTransactionsStatusRequestWithDefaults instantiates a new HandlerUpdateIPOsTransactionsStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateIPOsTransactionsStatusRequestWithDefaults() *HandlerUpdateIPOsTransactionsStatusRequest {
	this := HandlerUpdateIPOsTransactionsStatusRequest{}
	return &this
}

// GetApprovedAmt returns the ApprovedAmt field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetApprovedAmt() float32 {
	if o == nil || IsNil(o.ApprovedAmt) {
		var ret float32
		return ret
	}
	return *o.ApprovedAmt
}

// GetApprovedAmtOk returns a tuple with the ApprovedAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetApprovedAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.ApprovedAmt) {
		return nil, false
	}
	return o.ApprovedAmt, true
}

// HasApprovedAmt returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasApprovedAmt() bool {
	if o != nil && !IsNil(o.ApprovedAmt) {
		return true
	}

	return false
}

// SetApprovedAmt gets a reference to the given float32 and assigns it to the ApprovedAmt field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetApprovedAmt(v float32) {
	o.ApprovedAmt = &v
}

// GetApprovedDetails returns the ApprovedDetails field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetApprovedDetails() string {
	if o == nil || IsNil(o.ApprovedDetails) {
		var ret string
		return ret
	}
	return *o.ApprovedDetails
}

// GetApprovedDetailsOk returns a tuple with the ApprovedDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetApprovedDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedDetails) {
		return nil, false
	}
	return o.ApprovedDetails, true
}

// HasApprovedDetails returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasApprovedDetails() bool {
	if o != nil && !IsNil(o.ApprovedDetails) {
		return true
	}

	return false
}

// SetApprovedDetails gets a reference to the given string and assigns it to the ApprovedDetails field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetApprovedDetails(v string) {
	o.ApprovedDetails = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetIsNotApproved returns the IsNotApproved field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsNotApproved() bool {
	if o == nil || IsNil(o.IsNotApproved) {
		var ret bool
		return ret
	}
	return *o.IsNotApproved
}

// GetIsNotApprovedOk returns a tuple with the IsNotApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsNotApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNotApproved) {
		return nil, false
	}
	return o.IsNotApproved, true
}

// HasIsNotApproved returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasIsNotApproved() bool {
	if o != nil && !IsNil(o.IsNotApproved) {
		return true
	}

	return false
}

// SetIsNotApproved gets a reference to the given bool and assigns it to the IsNotApproved field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetIsNotApproved(v bool) {
	o.IsNotApproved = &v
}

// GetIsSingleHand returns the IsSingleHand field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsSingleHand() bool {
	if o == nil || IsNil(o.IsSingleHand) {
		var ret bool
		return ret
	}
	return *o.IsSingleHand
}

// GetIsSingleHandOk returns a tuple with the IsSingleHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIsSingleHandOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSingleHand) {
		return nil, false
	}
	return o.IsSingleHand, true
}

// HasIsSingleHand returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasIsSingleHand() bool {
	if o != nil && !IsNil(o.IsSingleHand) {
		return true
	}

	return false
}

// SetIsSingleHand gets a reference to the given bool and assigns it to the IsSingleHand field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetIsSingleHand(v bool) {
	o.IsSingleHand = &v
}

// GetIssApproverRemarks returns the IssApproverRemarks field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIssApproverRemarks() string {
	if o == nil || IsNil(o.IssApproverRemarks) {
		var ret string
		return ret
	}
	return *o.IssApproverRemarks
}

// GetIssApproverRemarksOk returns a tuple with the IssApproverRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIssApproverRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.IssApproverRemarks) {
		return nil, false
	}
	return o.IssApproverRemarks, true
}

// HasIssApproverRemarks returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasIssApproverRemarks() bool {
	if o != nil && !IsNil(o.IssApproverRemarks) {
		return true
	}

	return false
}

// SetIssApproverRemarks gets a reference to the given string and assigns it to the IssApproverRemarks field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetIssApproverRemarks(v string) {
	o.IssApproverRemarks = &v
}

// GetIssUserId returns the IssUserId field value
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIssUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IssUserId
}

// GetIssUserIdOk returns a tuple with the IssUserId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetIssUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssUserId, true
}

// SetIssUserId sets field value
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetIssUserId(v int32) {
	o.IssUserId = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *HandlerUpdateIPOsTransactionsStatusRequest) SetRequestType(v string) {
	o.RequestType = &v
}

func (o HandlerUpdateIPOsTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateIPOsTransactionsStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovedAmt) {
		toSerialize["approved_amt"] = o.ApprovedAmt
	}
	if !IsNil(o.ApprovedDetails) {
		toSerialize["approved_details"] = o.ApprovedDetails
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.IsNotApproved) {
		toSerialize["is_not_approved"] = o.IsNotApproved
	}
	if !IsNil(o.IsSingleHand) {
		toSerialize["is_single_hand"] = o.IsSingleHand
	}
	if !IsNil(o.IssApproverRemarks) {
		toSerialize["iss_approver_remarks"] = o.IssApproverRemarks
	}
	toSerialize["iss_user_id"] = o.IssUserId
	if !IsNil(o.RequestType) {
		toSerialize["request_type"] = o.RequestType
	}
	return toSerialize, nil
}

func (o *HandlerUpdateIPOsTransactionsStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"iss_user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateIPOsTransactionsStatusRequest := _HandlerUpdateIPOsTransactionsStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateIPOsTransactionsStatusRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateIPOsTransactionsStatusRequest(varHandlerUpdateIPOsTransactionsStatusRequest)

	return err
}

type NullableHandlerUpdateIPOsTransactionsStatusRequest struct {
	value *HandlerUpdateIPOsTransactionsStatusRequest
	isSet bool
}

func (v NullableHandlerUpdateIPOsTransactionsStatusRequest) Get() *HandlerUpdateIPOsTransactionsStatusRequest {
	return v.value
}

func (v *NullableHandlerUpdateIPOsTransactionsStatusRequest) Set(val *HandlerUpdateIPOsTransactionsStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateIPOsTransactionsStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateIPOsTransactionsStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateIPOsTransactionsStatusRequest(val *HandlerUpdateIPOsTransactionsStatusRequest) *NullableHandlerUpdateIPOsTransactionsStatusRequest {
	return &NullableHandlerUpdateIPOsTransactionsStatusRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateIPOsTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateIPOsTransactionsStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


