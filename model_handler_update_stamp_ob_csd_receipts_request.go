/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateStampObCsdReceiptsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateStampObCsdReceiptsRequest{}

// HandlerUpdateStampObCsdReceiptsRequest struct for HandlerUpdateStampObCsdReceiptsRequest
type HandlerUpdateStampObCsdReceiptsRequest struct {
	ApprUserId int32 `json:"appr_user_id"`
	IsApproved *bool `json:"is_approved,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
}

type _HandlerUpdateStampObCsdReceiptsRequest HandlerUpdateStampObCsdReceiptsRequest

// NewHandlerUpdateStampObCsdReceiptsRequest instantiates a new HandlerUpdateStampObCsdReceiptsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateStampObCsdReceiptsRequest(apprUserId int32) *HandlerUpdateStampObCsdReceiptsRequest {
	this := HandlerUpdateStampObCsdReceiptsRequest{}
	this.ApprUserId = apprUserId
	return &this
}

// NewHandlerUpdateStampObCsdReceiptsRequestWithDefaults instantiates a new HandlerUpdateStampObCsdReceiptsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateStampObCsdReceiptsRequestWithDefaults() *HandlerUpdateStampObCsdReceiptsRequest {
	this := HandlerUpdateStampObCsdReceiptsRequest{}
	return &this
}

// GetApprUserId returns the ApprUserId field value
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetApprUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApprUserId
}

// GetApprUserIdOk returns a tuple with the ApprUserId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetApprUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprUserId, true
}

// SetApprUserId sets field value
func (o *HandlerUpdateStampObCsdReceiptsRequest) SetApprUserId(v int32) {
	o.ApprUserId = v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *HandlerUpdateStampObCsdReceiptsRequest) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *HandlerUpdateStampObCsdReceiptsRequest) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampObCsdReceiptsRequest) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *HandlerUpdateStampObCsdReceiptsRequest) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *HandlerUpdateStampObCsdReceiptsRequest) SetRemarks(v string) {
	o.Remarks = &v
}

func (o HandlerUpdateStampObCsdReceiptsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateStampObCsdReceiptsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appr_user_id"] = o.ApprUserId
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	return toSerialize, nil
}

func (o *HandlerUpdateStampObCsdReceiptsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appr_user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateStampObCsdReceiptsRequest := _HandlerUpdateStampObCsdReceiptsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateStampObCsdReceiptsRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateStampObCsdReceiptsRequest(varHandlerUpdateStampObCsdReceiptsRequest)

	return err
}

type NullableHandlerUpdateStampObCsdReceiptsRequest struct {
	value *HandlerUpdateStampObCsdReceiptsRequest
	isSet bool
}

func (v NullableHandlerUpdateStampObCsdReceiptsRequest) Get() *HandlerUpdateStampObCsdReceiptsRequest {
	return v.value
}

func (v *NullableHandlerUpdateStampObCsdReceiptsRequest) Set(val *HandlerUpdateStampObCsdReceiptsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateStampObCsdReceiptsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateStampObCsdReceiptsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateStampObCsdReceiptsRequest(val *HandlerUpdateStampObCsdReceiptsRequest) *NullableHandlerUpdateStampObCsdReceiptsRequest {
	return &NullableHandlerUpdateStampObCsdReceiptsRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateStampObCsdReceiptsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateStampObCsdReceiptsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


