/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateStampSoiledRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateStampSoiledRequest{}

// HandlerUpdateStampSoiledRequest struct for HandlerUpdateStampSoiledRequest
type HandlerUpdateStampSoiledRequest struct {
	ApproverId int32 `json:"approver_id"`
	DisposalDetails *string `json:"disposal_details,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
}

type _HandlerUpdateStampSoiledRequest HandlerUpdateStampSoiledRequest

// NewHandlerUpdateStampSoiledRequest instantiates a new HandlerUpdateStampSoiledRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateStampSoiledRequest(approverId int32) *HandlerUpdateStampSoiledRequest {
	this := HandlerUpdateStampSoiledRequest{}
	this.ApproverId = approverId
	return &this
}

// NewHandlerUpdateStampSoiledRequestWithDefaults instantiates a new HandlerUpdateStampSoiledRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateStampSoiledRequestWithDefaults() *HandlerUpdateStampSoiledRequest {
	this := HandlerUpdateStampSoiledRequest{}
	return &this
}

// GetApproverId returns the ApproverId field value
func (o *HandlerUpdateStampSoiledRequest) GetApproverId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApproverId
}

// GetApproverIdOk returns a tuple with the ApproverId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampSoiledRequest) GetApproverIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApproverId, true
}

// SetApproverId sets field value
func (o *HandlerUpdateStampSoiledRequest) SetApproverId(v int32) {
	o.ApproverId = v
}

// GetDisposalDetails returns the DisposalDetails field value if set, zero value otherwise.
func (o *HandlerUpdateStampSoiledRequest) GetDisposalDetails() string {
	if o == nil || IsNil(o.DisposalDetails) {
		var ret string
		return ret
	}
	return *o.DisposalDetails
}

// GetDisposalDetailsOk returns a tuple with the DisposalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampSoiledRequest) GetDisposalDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.DisposalDetails) {
		return nil, false
	}
	return o.DisposalDetails, true
}

// HasDisposalDetails returns a boolean if a field has been set.
func (o *HandlerUpdateStampSoiledRequest) HasDisposalDetails() bool {
	if o != nil && !IsNil(o.DisposalDetails) {
		return true
	}

	return false
}

// SetDisposalDetails gets a reference to the given string and assigns it to the DisposalDetails field.
func (o *HandlerUpdateStampSoiledRequest) SetDisposalDetails(v string) {
	o.DisposalDetails = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *HandlerUpdateStampSoiledRequest) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampSoiledRequest) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *HandlerUpdateStampSoiledRequest) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *HandlerUpdateStampSoiledRequest) SetIsApproved(v bool) {
	o.IsApproved = &v
}

func (o HandlerUpdateStampSoiledRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateStampSoiledRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approver_id"] = o.ApproverId
	if !IsNil(o.DisposalDetails) {
		toSerialize["disposal_details"] = o.DisposalDetails
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	return toSerialize, nil
}

func (o *HandlerUpdateStampSoiledRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approver_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateStampSoiledRequest := _HandlerUpdateStampSoiledRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateStampSoiledRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateStampSoiledRequest(varHandlerUpdateStampSoiledRequest)

	return err
}

type NullableHandlerUpdateStampSoiledRequest struct {
	value *HandlerUpdateStampSoiledRequest
	isSet bool
}

func (v NullableHandlerUpdateStampSoiledRequest) Get() *HandlerUpdateStampSoiledRequest {
	return v.value
}

func (v *NullableHandlerUpdateStampSoiledRequest) Set(val *HandlerUpdateStampSoiledRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateStampSoiledRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateStampSoiledRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateStampSoiledRequest(val *HandlerUpdateStampSoiledRequest) *NullableHandlerUpdateStampSoiledRequest {
	return &NullableHandlerUpdateStampSoiledRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateStampSoiledRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateStampSoiledRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


