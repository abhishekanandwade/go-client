/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateStampsTransactionsStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateStampsTransactionsStatusRequest{}

// HandlerUpdateStampsTransactionsStatusRequest struct for HandlerUpdateStampsTransactionsStatusRequest
type HandlerUpdateStampsTransactionsStatusRequest struct {
	Amount *float32 `json:"amount,omitempty"`
	Details *map[string]int32 `json:"details,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	IsNotApproved *bool `json:"is_not_approved,omitempty"`
	IsSingleHand *bool `json:"is_single_hand,omitempty"`
	IssApproverRemarks *string `json:"iss_approver_remarks,omitempty"`
	ReqType *string `json:"req_type,omitempty"`
	Type HandlerTransactionType `json:"type"`
	UserId int32 `json:"user_id"`
}

type _HandlerUpdateStampsTransactionsStatusRequest HandlerUpdateStampsTransactionsStatusRequest

// NewHandlerUpdateStampsTransactionsStatusRequest instantiates a new HandlerUpdateStampsTransactionsStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateStampsTransactionsStatusRequest(type_ HandlerTransactionType, userId int32) *HandlerUpdateStampsTransactionsStatusRequest {
	this := HandlerUpdateStampsTransactionsStatusRequest{}
	this.Type = type_
	this.UserId = userId
	return &this
}

// NewHandlerUpdateStampsTransactionsStatusRequestWithDefaults instantiates a new HandlerUpdateStampsTransactionsStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateStampsTransactionsStatusRequestWithDefaults() *HandlerUpdateStampsTransactionsStatusRequest {
	this := HandlerUpdateStampsTransactionsStatusRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetAmount(v float32) {
	o.Amount = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetDetails() map[string]int32 {
	if o == nil || IsNil(o.Details) {
		var ret map[string]int32
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]int32 and assigns it to the Details field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetDetails(v map[string]int32) {
	o.Details = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetIsNotApproved returns the IsNotApproved field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsNotApproved() bool {
	if o == nil || IsNil(o.IsNotApproved) {
		var ret bool
		return ret
	}
	return *o.IsNotApproved
}

// GetIsNotApprovedOk returns a tuple with the IsNotApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsNotApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNotApproved) {
		return nil, false
	}
	return o.IsNotApproved, true
}

// HasIsNotApproved returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasIsNotApproved() bool {
	if o != nil && !IsNil(o.IsNotApproved) {
		return true
	}

	return false
}

// SetIsNotApproved gets a reference to the given bool and assigns it to the IsNotApproved field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetIsNotApproved(v bool) {
	o.IsNotApproved = &v
}

// GetIsSingleHand returns the IsSingleHand field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsSingleHand() bool {
	if o == nil || IsNil(o.IsSingleHand) {
		var ret bool
		return ret
	}
	return *o.IsSingleHand
}

// GetIsSingleHandOk returns a tuple with the IsSingleHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIsSingleHandOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSingleHand) {
		return nil, false
	}
	return o.IsSingleHand, true
}

// HasIsSingleHand returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasIsSingleHand() bool {
	if o != nil && !IsNil(o.IsSingleHand) {
		return true
	}

	return false
}

// SetIsSingleHand gets a reference to the given bool and assigns it to the IsSingleHand field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetIsSingleHand(v bool) {
	o.IsSingleHand = &v
}

// GetIssApproverRemarks returns the IssApproverRemarks field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIssApproverRemarks() string {
	if o == nil || IsNil(o.IssApproverRemarks) {
		var ret string
		return ret
	}
	return *o.IssApproverRemarks
}

// GetIssApproverRemarksOk returns a tuple with the IssApproverRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetIssApproverRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.IssApproverRemarks) {
		return nil, false
	}
	return o.IssApproverRemarks, true
}

// HasIssApproverRemarks returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasIssApproverRemarks() bool {
	if o != nil && !IsNil(o.IssApproverRemarks) {
		return true
	}

	return false
}

// SetIssApproverRemarks gets a reference to the given string and assigns it to the IssApproverRemarks field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetIssApproverRemarks(v string) {
	o.IssApproverRemarks = &v
}

// GetReqType returns the ReqType field value if set, zero value otherwise.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetReqType() string {
	if o == nil || IsNil(o.ReqType) {
		var ret string
		return ret
	}
	return *o.ReqType
}

// GetReqTypeOk returns a tuple with the ReqType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetReqTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReqType) {
		return nil, false
	}
	return o.ReqType, true
}

// HasReqType returns a boolean if a field has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) HasReqType() bool {
	if o != nil && !IsNil(o.ReqType) {
		return true
	}

	return false
}

// SetReqType gets a reference to the given string and assigns it to the ReqType field.
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetReqType(v string) {
	o.ReqType = &v
}

// GetType returns the Type field value
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetType() HandlerTransactionType {
	if o == nil {
		var ret HandlerTransactionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetTypeOk() (*HandlerTransactionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetType(v HandlerTransactionType) {
	o.Type = v
}

// GetUserId returns the UserId field value
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateStampsTransactionsStatusRequest) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *HandlerUpdateStampsTransactionsStatusRequest) SetUserId(v int32) {
	o.UserId = v
}

func (o HandlerUpdateStampsTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateStampsTransactionsStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.IsNotApproved) {
		toSerialize["is_not_approved"] = o.IsNotApproved
	}
	if !IsNil(o.IsSingleHand) {
		toSerialize["is_single_hand"] = o.IsSingleHand
	}
	if !IsNil(o.IssApproverRemarks) {
		toSerialize["iss_approver_remarks"] = o.IssApproverRemarks
	}
	if !IsNil(o.ReqType) {
		toSerialize["req_type"] = o.ReqType
	}
	toSerialize["type"] = o.Type
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

func (o *HandlerUpdateStampsTransactionsStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateStampsTransactionsStatusRequest := _HandlerUpdateStampsTransactionsStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateStampsTransactionsStatusRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateStampsTransactionsStatusRequest(varHandlerUpdateStampsTransactionsStatusRequest)

	return err
}

type NullableHandlerUpdateStampsTransactionsStatusRequest struct {
	value *HandlerUpdateStampsTransactionsStatusRequest
	isSet bool
}

func (v NullableHandlerUpdateStampsTransactionsStatusRequest) Get() *HandlerUpdateStampsTransactionsStatusRequest {
	return v.value
}

func (v *NullableHandlerUpdateStampsTransactionsStatusRequest) Set(val *HandlerUpdateStampsTransactionsStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateStampsTransactionsStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateStampsTransactionsStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateStampsTransactionsStatusRequest(val *HandlerUpdateStampsTransactionsStatusRequest) *NullableHandlerUpdateStampsTransactionsStatusRequest {
	return &NullableHandlerUpdateStampsTransactionsStatusRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateStampsTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateStampsTransactionsStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


