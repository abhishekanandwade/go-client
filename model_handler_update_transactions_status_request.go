/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HandlerUpdateTransactionsStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerUpdateTransactionsStatusRequest{}

// HandlerUpdateTransactionsStatusRequest struct for HandlerUpdateTransactionsStatusRequest
type HandlerUpdateTransactionsStatusRequest struct {
	Amount *float32 `json:"amount,omitempty"`
	Details *map[string]int32 `json:"details,omitempty"`
	EmployeeId1 *int32 `json:"employee_id1,omitempty"`
	EmployeeId2 *int32 `json:"employee_id2,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	IsNotApproved *bool `json:"is_not_approved,omitempty"`
	IsSingleHand *bool `json:"is_single_hand,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	RequestType string `json:"request_type"`
	UserId int32 `json:"user_id"`
}

type _HandlerUpdateTransactionsStatusRequest HandlerUpdateTransactionsStatusRequest

// NewHandlerUpdateTransactionsStatusRequest instantiates a new HandlerUpdateTransactionsStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerUpdateTransactionsStatusRequest(requestType string, userId int32) *HandlerUpdateTransactionsStatusRequest {
	this := HandlerUpdateTransactionsStatusRequest{}
	this.RequestType = requestType
	this.UserId = userId
	return &this
}

// NewHandlerUpdateTransactionsStatusRequestWithDefaults instantiates a new HandlerUpdateTransactionsStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerUpdateTransactionsStatusRequestWithDefaults() *HandlerUpdateTransactionsStatusRequest {
	this := HandlerUpdateTransactionsStatusRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *HandlerUpdateTransactionsStatusRequest) SetAmount(v float32) {
	o.Amount = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetDetails() map[string]int32 {
	if o == nil || IsNil(o.Details) {
		var ret map[string]int32
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]int32 and assigns it to the Details field.
func (o *HandlerUpdateTransactionsStatusRequest) SetDetails(v map[string]int32) {
	o.Details = &v
}

// GetEmployeeId1 returns the EmployeeId1 field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetEmployeeId1() int32 {
	if o == nil || IsNil(o.EmployeeId1) {
		var ret int32
		return ret
	}
	return *o.EmployeeId1
}

// GetEmployeeId1Ok returns a tuple with the EmployeeId1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetEmployeeId1Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId1) {
		return nil, false
	}
	return o.EmployeeId1, true
}

// HasEmployeeId1 returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasEmployeeId1() bool {
	if o != nil && !IsNil(o.EmployeeId1) {
		return true
	}

	return false
}

// SetEmployeeId1 gets a reference to the given int32 and assigns it to the EmployeeId1 field.
func (o *HandlerUpdateTransactionsStatusRequest) SetEmployeeId1(v int32) {
	o.EmployeeId1 = &v
}

// GetEmployeeId2 returns the EmployeeId2 field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetEmployeeId2() int32 {
	if o == nil || IsNil(o.EmployeeId2) {
		var ret int32
		return ret
	}
	return *o.EmployeeId2
}

// GetEmployeeId2Ok returns a tuple with the EmployeeId2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetEmployeeId2Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId2) {
		return nil, false
	}
	return o.EmployeeId2, true
}

// HasEmployeeId2 returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasEmployeeId2() bool {
	if o != nil && !IsNil(o.EmployeeId2) {
		return true
	}

	return false
}

// SetEmployeeId2 gets a reference to the given int32 and assigns it to the EmployeeId2 field.
func (o *HandlerUpdateTransactionsStatusRequest) SetEmployeeId2(v int32) {
	o.EmployeeId2 = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *HandlerUpdateTransactionsStatusRequest) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetIsNotApproved returns the IsNotApproved field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsNotApproved() bool {
	if o == nil || IsNil(o.IsNotApproved) {
		var ret bool
		return ret
	}
	return *o.IsNotApproved
}

// GetIsNotApprovedOk returns a tuple with the IsNotApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsNotApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNotApproved) {
		return nil, false
	}
	return o.IsNotApproved, true
}

// HasIsNotApproved returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasIsNotApproved() bool {
	if o != nil && !IsNil(o.IsNotApproved) {
		return true
	}

	return false
}

// SetIsNotApproved gets a reference to the given bool and assigns it to the IsNotApproved field.
func (o *HandlerUpdateTransactionsStatusRequest) SetIsNotApproved(v bool) {
	o.IsNotApproved = &v
}

// GetIsSingleHand returns the IsSingleHand field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsSingleHand() bool {
	if o == nil || IsNil(o.IsSingleHand) {
		var ret bool
		return ret
	}
	return *o.IsSingleHand
}

// GetIsSingleHandOk returns a tuple with the IsSingleHand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetIsSingleHandOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSingleHand) {
		return nil, false
	}
	return o.IsSingleHand, true
}

// HasIsSingleHand returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasIsSingleHand() bool {
	if o != nil && !IsNil(o.IsSingleHand) {
		return true
	}

	return false
}

// SetIsSingleHand gets a reference to the given bool and assigns it to the IsSingleHand field.
func (o *HandlerUpdateTransactionsStatusRequest) SetIsSingleHand(v bool) {
	o.IsSingleHand = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *HandlerUpdateTransactionsStatusRequest) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *HandlerUpdateTransactionsStatusRequest) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *HandlerUpdateTransactionsStatusRequest) SetRemarks(v string) {
	o.Remarks = &v
}

// GetRequestType returns the RequestType field value
func (o *HandlerUpdateTransactionsStatusRequest) GetRequestType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetRequestTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// SetRequestType sets field value
func (o *HandlerUpdateTransactionsStatusRequest) SetRequestType(v string) {
	o.RequestType = v
}

// GetUserId returns the UserId field value
func (o *HandlerUpdateTransactionsStatusRequest) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *HandlerUpdateTransactionsStatusRequest) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *HandlerUpdateTransactionsStatusRequest) SetUserId(v int32) {
	o.UserId = v
}

func (o HandlerUpdateTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerUpdateTransactionsStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.EmployeeId1) {
		toSerialize["employee_id1"] = o.EmployeeId1
	}
	if !IsNil(o.EmployeeId2) {
		toSerialize["employee_id2"] = o.EmployeeId2
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.IsNotApproved) {
		toSerialize["is_not_approved"] = o.IsNotApproved
	}
	if !IsNil(o.IsSingleHand) {
		toSerialize["is_single_hand"] = o.IsSingleHand
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	toSerialize["request_type"] = o.RequestType
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

func (o *HandlerUpdateTransactionsStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_type",
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerUpdateTransactionsStatusRequest := _HandlerUpdateTransactionsStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerUpdateTransactionsStatusRequest)

	if err != nil {
		return err
	}

	*o = HandlerUpdateTransactionsStatusRequest(varHandlerUpdateTransactionsStatusRequest)

	return err
}

type NullableHandlerUpdateTransactionsStatusRequest struct {
	value *HandlerUpdateTransactionsStatusRequest
	isSet bool
}

func (v NullableHandlerUpdateTransactionsStatusRequest) Get() *HandlerUpdateTransactionsStatusRequest {
	return v.value
}

func (v *NullableHandlerUpdateTransactionsStatusRequest) Set(val *HandlerUpdateTransactionsStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerUpdateTransactionsStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerUpdateTransactionsStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerUpdateTransactionsStatusRequest(val *HandlerUpdateTransactionsStatusRequest) *NullableHandlerUpdateTransactionsStatusRequest {
	return &NullableHandlerUpdateTransactionsStatusRequest{value: val, isSet: true}
}

func (v NullableHandlerUpdateTransactionsStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerUpdateTransactionsStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


