/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseBankRemittances type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBankRemittances{}

// ResponseBankRemittances struct for ResponseBankRemittances
type ResponseBankRemittances struct {
	AcgId *string `json:"acg_id,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	CurrencyDetails *string `json:"currency_details,omitempty"`
	EmployeeId1 *int32 `json:"employee_id1,omitempty"`
	EmployeeId2 *int32 `json:"employee_id2,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
}

// NewResponseBankRemittances instantiates a new ResponseBankRemittances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBankRemittances() *ResponseBankRemittances {
	this := ResponseBankRemittances{}
	return &this
}

// NewResponseBankRemittancesWithDefaults instantiates a new ResponseBankRemittances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBankRemittancesWithDefaults() *ResponseBankRemittances {
	this := ResponseBankRemittances{}
	return &this
}

// GetAcgId returns the AcgId field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetAcgId() string {
	if o == nil || IsNil(o.AcgId) {
		var ret string
		return ret
	}
	return *o.AcgId
}

// GetAcgIdOk returns a tuple with the AcgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetAcgIdOk() (*string, bool) {
	if o == nil || IsNil(o.AcgId) {
		return nil, false
	}
	return o.AcgId, true
}

// HasAcgId returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasAcgId() bool {
	if o != nil && !IsNil(o.AcgId) {
		return true
	}

	return false
}

// SetAcgId gets a reference to the given string and assigns it to the AcgId field.
func (o *ResponseBankRemittances) SetAcgId(v string) {
	o.AcgId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *ResponseBankRemittances) SetAmount(v float32) {
	o.Amount = &v
}

// GetCurrencyDetails returns the CurrencyDetails field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetCurrencyDetails() string {
	if o == nil || IsNil(o.CurrencyDetails) {
		var ret string
		return ret
	}
	return *o.CurrencyDetails
}

// GetCurrencyDetailsOk returns a tuple with the CurrencyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetCurrencyDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyDetails) {
		return nil, false
	}
	return o.CurrencyDetails, true
}

// HasCurrencyDetails returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasCurrencyDetails() bool {
	if o != nil && !IsNil(o.CurrencyDetails) {
		return true
	}

	return false
}

// SetCurrencyDetails gets a reference to the given string and assigns it to the CurrencyDetails field.
func (o *ResponseBankRemittances) SetCurrencyDetails(v string) {
	o.CurrencyDetails = &v
}

// GetEmployeeId1 returns the EmployeeId1 field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetEmployeeId1() int32 {
	if o == nil || IsNil(o.EmployeeId1) {
		var ret int32
		return ret
	}
	return *o.EmployeeId1
}

// GetEmployeeId1Ok returns a tuple with the EmployeeId1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetEmployeeId1Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId1) {
		return nil, false
	}
	return o.EmployeeId1, true
}

// HasEmployeeId1 returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasEmployeeId1() bool {
	if o != nil && !IsNil(o.EmployeeId1) {
		return true
	}

	return false
}

// SetEmployeeId1 gets a reference to the given int32 and assigns it to the EmployeeId1 field.
func (o *ResponseBankRemittances) SetEmployeeId1(v int32) {
	o.EmployeeId1 = &v
}

// GetEmployeeId2 returns the EmployeeId2 field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetEmployeeId2() int32 {
	if o == nil || IsNil(o.EmployeeId2) {
		var ret int32
		return ret
	}
	return *o.EmployeeId2
}

// GetEmployeeId2Ok returns a tuple with the EmployeeId2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetEmployeeId2Ok() (*int32, bool) {
	if o == nil || IsNil(o.EmployeeId2) {
		return nil, false
	}
	return o.EmployeeId2, true
}

// HasEmployeeId2 returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasEmployeeId2() bool {
	if o != nil && !IsNil(o.EmployeeId2) {
		return true
	}

	return false
}

// SetEmployeeId2 gets a reference to the given int32 and assigns it to the EmployeeId2 field.
func (o *ResponseBankRemittances) SetEmployeeId2(v int32) {
	o.EmployeeId2 = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseBankRemittances) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseBankRemittances) SetRemarks(v string) {
	o.Remarks = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseBankRemittances) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *ResponseBankRemittances) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBankRemittances) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *ResponseBankRemittances) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *ResponseBankRemittances) SetTransId(v string) {
	o.TransId = &v
}

func (o ResponseBankRemittances) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBankRemittances) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcgId) {
		toSerialize["acg_id"] = o.AcgId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CurrencyDetails) {
		toSerialize["currency_details"] = o.CurrencyDetails
	}
	if !IsNil(o.EmployeeId1) {
		toSerialize["employee_id1"] = o.EmployeeId1
	}
	if !IsNil(o.EmployeeId2) {
		toSerialize["employee_id2"] = o.EmployeeId2
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	return toSerialize, nil
}

type NullableResponseBankRemittances struct {
	value *ResponseBankRemittances
	isSet bool
}

func (v NullableResponseBankRemittances) Get() *ResponseBankRemittances {
	return v.value
}

func (v *NullableResponseBankRemittances) Set(val *ResponseBankRemittances) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBankRemittances) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBankRemittances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBankRemittances(val *ResponseBankRemittances) *NullableResponseBankRemittances {
	return &NullableResponseBankRemittances{value: val, isSet: true}
}

func (v NullableResponseBankRemittances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBankRemittances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


