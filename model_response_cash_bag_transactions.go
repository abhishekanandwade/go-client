/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseCashBagTransactions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCashBagTransactions{}

// ResponseCashBagTransactions struct for ResponseCashBagTransactions
type ResponseCashBagTransactions struct {
	CashBagId *string `json:"cash_bag_id,omitempty"`
	FromOfficeId *int32 `json:"from_office_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	ToOfficeId *int32 `json:"to_office_id,omitempty"`
	TransAmount *float32 `json:"trans_amount,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransDetails *string `json:"trans_details,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
}

// NewResponseCashBagTransactions instantiates a new ResponseCashBagTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCashBagTransactions() *ResponseCashBagTransactions {
	this := ResponseCashBagTransactions{}
	return &this
}

// NewResponseCashBagTransactionsWithDefaults instantiates a new ResponseCashBagTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCashBagTransactionsWithDefaults() *ResponseCashBagTransactions {
	this := ResponseCashBagTransactions{}
	return &this
}

// GetCashBagId returns the CashBagId field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetCashBagId() string {
	if o == nil || IsNil(o.CashBagId) {
		var ret string
		return ret
	}
	return *o.CashBagId
}

// GetCashBagIdOk returns a tuple with the CashBagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetCashBagIdOk() (*string, bool) {
	if o == nil || IsNil(o.CashBagId) {
		return nil, false
	}
	return o.CashBagId, true
}

// HasCashBagId returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasCashBagId() bool {
	if o != nil && !IsNil(o.CashBagId) {
		return true
	}

	return false
}

// SetCashBagId gets a reference to the given string and assigns it to the CashBagId field.
func (o *ResponseCashBagTransactions) SetCashBagId(v string) {
	o.CashBagId = &v
}

// GetFromOfficeId returns the FromOfficeId field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetFromOfficeId() int32 {
	if o == nil || IsNil(o.FromOfficeId) {
		var ret int32
		return ret
	}
	return *o.FromOfficeId
}

// GetFromOfficeIdOk returns a tuple with the FromOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetFromOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromOfficeId) {
		return nil, false
	}
	return o.FromOfficeId, true
}

// HasFromOfficeId returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasFromOfficeId() bool {
	if o != nil && !IsNil(o.FromOfficeId) {
		return true
	}

	return false
}

// SetFromOfficeId gets a reference to the given int32 and assigns it to the FromOfficeId field.
func (o *ResponseCashBagTransactions) SetFromOfficeId(v int32) {
	o.FromOfficeId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseCashBagTransactions) SetRemarks(v string) {
	o.Remarks = &v
}

// GetToOfficeId returns the ToOfficeId field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetToOfficeId() int32 {
	if o == nil || IsNil(o.ToOfficeId) {
		var ret int32
		return ret
	}
	return *o.ToOfficeId
}

// GetToOfficeIdOk returns a tuple with the ToOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetToOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ToOfficeId) {
		return nil, false
	}
	return o.ToOfficeId, true
}

// HasToOfficeId returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasToOfficeId() bool {
	if o != nil && !IsNil(o.ToOfficeId) {
		return true
	}

	return false
}

// SetToOfficeId gets a reference to the given int32 and assigns it to the ToOfficeId field.
func (o *ResponseCashBagTransactions) SetToOfficeId(v int32) {
	o.ToOfficeId = &v
}

// GetTransAmount returns the TransAmount field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetTransAmount() float32 {
	if o == nil || IsNil(o.TransAmount) {
		var ret float32
		return ret
	}
	return *o.TransAmount
}

// GetTransAmountOk returns a tuple with the TransAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetTransAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TransAmount) {
		return nil, false
	}
	return o.TransAmount, true
}

// HasTransAmount returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasTransAmount() bool {
	if o != nil && !IsNil(o.TransAmount) {
		return true
	}

	return false
}

// SetTransAmount gets a reference to the given float32 and assigns it to the TransAmount field.
func (o *ResponseCashBagTransactions) SetTransAmount(v float32) {
	o.TransAmount = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseCashBagTransactions) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransDetails returns the TransDetails field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetTransDetails() string {
	if o == nil || IsNil(o.TransDetails) {
		var ret string
		return ret
	}
	return *o.TransDetails
}

// GetTransDetailsOk returns a tuple with the TransDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetTransDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.TransDetails) {
		return nil, false
	}
	return o.TransDetails, true
}

// HasTransDetails returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasTransDetails() bool {
	if o != nil && !IsNil(o.TransDetails) {
		return true
	}

	return false
}

// SetTransDetails gets a reference to the given string and assigns it to the TransDetails field.
func (o *ResponseCashBagTransactions) SetTransDetails(v string) {
	o.TransDetails = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *ResponseCashBagTransactions) SetTransId(v string) {
	o.TransId = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *ResponseCashBagTransactions) GetTransType() string {
	if o == nil || IsNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCashBagTransactions) GetTransTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransType) {
		return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *ResponseCashBagTransactions) HasTransType() bool {
	if o != nil && !IsNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *ResponseCashBagTransactions) SetTransType(v string) {
	o.TransType = &v
}

func (o ResponseCashBagTransactions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCashBagTransactions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashBagId) {
		toSerialize["cash_bag_id"] = o.CashBagId
	}
	if !IsNil(o.FromOfficeId) {
		toSerialize["from_office_id"] = o.FromOfficeId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.ToOfficeId) {
		toSerialize["to_office_id"] = o.ToOfficeId
	}
	if !IsNil(o.TransAmount) {
		toSerialize["trans_amount"] = o.TransAmount
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransDetails) {
		toSerialize["trans_details"] = o.TransDetails
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	if !IsNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	return toSerialize, nil
}

type NullableResponseCashBagTransactions struct {
	value *ResponseCashBagTransactions
	isSet bool
}

func (v NullableResponseCashBagTransactions) Get() *ResponseCashBagTransactions {
	return v.value
}

func (v *NullableResponseCashBagTransactions) Set(val *ResponseCashBagTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCashBagTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCashBagTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCashBagTransactions(val *ResponseCashBagTransactions) *NullableResponseCashBagTransactions {
	return &NullableResponseCashBagTransactions{value: val, isSet: true}
}

func (v NullableResponseCashBagTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCashBagTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


