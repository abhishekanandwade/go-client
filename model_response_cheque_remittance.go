/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseChequeRemittance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseChequeRemittance{}

// ResponseChequeRemittance struct for ResponseChequeRemittance
type ResponseChequeRemittance struct {
	BoSentDate *string `json:"bo_sent_date,omitempty"`
	BoUserId *int32 `json:"bo_user_id,omitempty"`
	ChequeAmount *float32 `json:"cheque_amount,omitempty"`
	ChequeDate *string `json:"cheque_date,omitempty"`
	ChequeNo *string `json:"cheque_no,omitempty"`
	ClearingSentDate *string `json:"clearing_sent_date,omitempty"`
	CurrOfficeId *int32 `json:"curr_office_id,omitempty"`
	DdoUserId *int32 `json:"ddo_user_id,omitempty"`
	NcddoSentDate *string `json:"ncddo_sent_date,omitempty"`
	NcddoUserId *int32 `json:"ncddo_user_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	RequestSource *string `json:"request_source,omitempty"`
	SoSentDate *string `json:"so_sent_date,omitempty"`
	SoUserId *int32 `json:"so_user_id,omitempty"`
	SrcOfficeId *int32 `json:"src_office_id,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransactionId *string `json:"transaction_id,omitempty"`
	Transdate *string `json:"transdate,omitempty"`
}

// NewResponseChequeRemittance instantiates a new ResponseChequeRemittance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseChequeRemittance() *ResponseChequeRemittance {
	this := ResponseChequeRemittance{}
	return &this
}

// NewResponseChequeRemittanceWithDefaults instantiates a new ResponseChequeRemittance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseChequeRemittanceWithDefaults() *ResponseChequeRemittance {
	this := ResponseChequeRemittance{}
	return &this
}

// GetBoSentDate returns the BoSentDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetBoSentDate() string {
	if o == nil || IsNil(o.BoSentDate) {
		var ret string
		return ret
	}
	return *o.BoSentDate
}

// GetBoSentDateOk returns a tuple with the BoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetBoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.BoSentDate) {
		return nil, false
	}
	return o.BoSentDate, true
}

// HasBoSentDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasBoSentDate() bool {
	if o != nil && !IsNil(o.BoSentDate) {
		return true
	}

	return false
}

// SetBoSentDate gets a reference to the given string and assigns it to the BoSentDate field.
func (o *ResponseChequeRemittance) SetBoSentDate(v string) {
	o.BoSentDate = &v
}

// GetBoUserId returns the BoUserId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetBoUserId() int32 {
	if o == nil || IsNil(o.BoUserId) {
		var ret int32
		return ret
	}
	return *o.BoUserId
}

// GetBoUserIdOk returns a tuple with the BoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetBoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BoUserId) {
		return nil, false
	}
	return o.BoUserId, true
}

// HasBoUserId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasBoUserId() bool {
	if o != nil && !IsNil(o.BoUserId) {
		return true
	}

	return false
}

// SetBoUserId gets a reference to the given int32 and assigns it to the BoUserId field.
func (o *ResponseChequeRemittance) SetBoUserId(v int32) {
	o.BoUserId = &v
}

// GetChequeAmount returns the ChequeAmount field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetChequeAmount() float32 {
	if o == nil || IsNil(o.ChequeAmount) {
		var ret float32
		return ret
	}
	return *o.ChequeAmount
}

// GetChequeAmountOk returns a tuple with the ChequeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetChequeAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ChequeAmount) {
		return nil, false
	}
	return o.ChequeAmount, true
}

// HasChequeAmount returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasChequeAmount() bool {
	if o != nil && !IsNil(o.ChequeAmount) {
		return true
	}

	return false
}

// SetChequeAmount gets a reference to the given float32 and assigns it to the ChequeAmount field.
func (o *ResponseChequeRemittance) SetChequeAmount(v float32) {
	o.ChequeAmount = &v
}

// GetChequeDate returns the ChequeDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetChequeDate() string {
	if o == nil || IsNil(o.ChequeDate) {
		var ret string
		return ret
	}
	return *o.ChequeDate
}

// GetChequeDateOk returns a tuple with the ChequeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetChequeDateOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeDate) {
		return nil, false
	}
	return o.ChequeDate, true
}

// HasChequeDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasChequeDate() bool {
	if o != nil && !IsNil(o.ChequeDate) {
		return true
	}

	return false
}

// SetChequeDate gets a reference to the given string and assigns it to the ChequeDate field.
func (o *ResponseChequeRemittance) SetChequeDate(v string) {
	o.ChequeDate = &v
}

// GetChequeNo returns the ChequeNo field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetChequeNo() string {
	if o == nil || IsNil(o.ChequeNo) {
		var ret string
		return ret
	}
	return *o.ChequeNo
}

// GetChequeNoOk returns a tuple with the ChequeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetChequeNoOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeNo) {
		return nil, false
	}
	return o.ChequeNo, true
}

// HasChequeNo returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasChequeNo() bool {
	if o != nil && !IsNil(o.ChequeNo) {
		return true
	}

	return false
}

// SetChequeNo gets a reference to the given string and assigns it to the ChequeNo field.
func (o *ResponseChequeRemittance) SetChequeNo(v string) {
	o.ChequeNo = &v
}

// GetClearingSentDate returns the ClearingSentDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetClearingSentDate() string {
	if o == nil || IsNil(o.ClearingSentDate) {
		var ret string
		return ret
	}
	return *o.ClearingSentDate
}

// GetClearingSentDateOk returns a tuple with the ClearingSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetClearingSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClearingSentDate) {
		return nil, false
	}
	return o.ClearingSentDate, true
}

// HasClearingSentDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasClearingSentDate() bool {
	if o != nil && !IsNil(o.ClearingSentDate) {
		return true
	}

	return false
}

// SetClearingSentDate gets a reference to the given string and assigns it to the ClearingSentDate field.
func (o *ResponseChequeRemittance) SetClearingSentDate(v string) {
	o.ClearingSentDate = &v
}

// GetCurrOfficeId returns the CurrOfficeId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetCurrOfficeId() int32 {
	if o == nil || IsNil(o.CurrOfficeId) {
		var ret int32
		return ret
	}
	return *o.CurrOfficeId
}

// GetCurrOfficeIdOk returns a tuple with the CurrOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetCurrOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrOfficeId) {
		return nil, false
	}
	return o.CurrOfficeId, true
}

// HasCurrOfficeId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasCurrOfficeId() bool {
	if o != nil && !IsNil(o.CurrOfficeId) {
		return true
	}

	return false
}

// SetCurrOfficeId gets a reference to the given int32 and assigns it to the CurrOfficeId field.
func (o *ResponseChequeRemittance) SetCurrOfficeId(v int32) {
	o.CurrOfficeId = &v
}

// GetDdoUserId returns the DdoUserId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetDdoUserId() int32 {
	if o == nil || IsNil(o.DdoUserId) {
		var ret int32
		return ret
	}
	return *o.DdoUserId
}

// GetDdoUserIdOk returns a tuple with the DdoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetDdoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DdoUserId) {
		return nil, false
	}
	return o.DdoUserId, true
}

// HasDdoUserId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasDdoUserId() bool {
	if o != nil && !IsNil(o.DdoUserId) {
		return true
	}

	return false
}

// SetDdoUserId gets a reference to the given int32 and assigns it to the DdoUserId field.
func (o *ResponseChequeRemittance) SetDdoUserId(v int32) {
	o.DdoUserId = &v
}

// GetNcddoSentDate returns the NcddoSentDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetNcddoSentDate() string {
	if o == nil || IsNil(o.NcddoSentDate) {
		var ret string
		return ret
	}
	return *o.NcddoSentDate
}

// GetNcddoSentDateOk returns a tuple with the NcddoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetNcddoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.NcddoSentDate) {
		return nil, false
	}
	return o.NcddoSentDate, true
}

// HasNcddoSentDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasNcddoSentDate() bool {
	if o != nil && !IsNil(o.NcddoSentDate) {
		return true
	}

	return false
}

// SetNcddoSentDate gets a reference to the given string and assigns it to the NcddoSentDate field.
func (o *ResponseChequeRemittance) SetNcddoSentDate(v string) {
	o.NcddoSentDate = &v
}

// GetNcddoUserId returns the NcddoUserId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetNcddoUserId() int32 {
	if o == nil || IsNil(o.NcddoUserId) {
		var ret int32
		return ret
	}
	return *o.NcddoUserId
}

// GetNcddoUserIdOk returns a tuple with the NcddoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetNcddoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NcddoUserId) {
		return nil, false
	}
	return o.NcddoUserId, true
}

// HasNcddoUserId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasNcddoUserId() bool {
	if o != nil && !IsNil(o.NcddoUserId) {
		return true
	}

	return false
}

// SetNcddoUserId gets a reference to the given int32 and assigns it to the NcddoUserId field.
func (o *ResponseChequeRemittance) SetNcddoUserId(v int32) {
	o.NcddoUserId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseChequeRemittance) SetRemarks(v string) {
	o.Remarks = &v
}

// GetRequestSource returns the RequestSource field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetRequestSource() string {
	if o == nil || IsNil(o.RequestSource) {
		var ret string
		return ret
	}
	return *o.RequestSource
}

// GetRequestSourceOk returns a tuple with the RequestSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetRequestSourceOk() (*string, bool) {
	if o == nil || IsNil(o.RequestSource) {
		return nil, false
	}
	return o.RequestSource, true
}

// HasRequestSource returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasRequestSource() bool {
	if o != nil && !IsNil(o.RequestSource) {
		return true
	}

	return false
}

// SetRequestSource gets a reference to the given string and assigns it to the RequestSource field.
func (o *ResponseChequeRemittance) SetRequestSource(v string) {
	o.RequestSource = &v
}

// GetSoSentDate returns the SoSentDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetSoSentDate() string {
	if o == nil || IsNil(o.SoSentDate) {
		var ret string
		return ret
	}
	return *o.SoSentDate
}

// GetSoSentDateOk returns a tuple with the SoSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetSoSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.SoSentDate) {
		return nil, false
	}
	return o.SoSentDate, true
}

// HasSoSentDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasSoSentDate() bool {
	if o != nil && !IsNil(o.SoSentDate) {
		return true
	}

	return false
}

// SetSoSentDate gets a reference to the given string and assigns it to the SoSentDate field.
func (o *ResponseChequeRemittance) SetSoSentDate(v string) {
	o.SoSentDate = &v
}

// GetSoUserId returns the SoUserId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetSoUserId() int32 {
	if o == nil || IsNil(o.SoUserId) {
		var ret int32
		return ret
	}
	return *o.SoUserId
}

// GetSoUserIdOk returns a tuple with the SoUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetSoUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SoUserId) {
		return nil, false
	}
	return o.SoUserId, true
}

// HasSoUserId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasSoUserId() bool {
	if o != nil && !IsNil(o.SoUserId) {
		return true
	}

	return false
}

// SetSoUserId gets a reference to the given int32 and assigns it to the SoUserId field.
func (o *ResponseChequeRemittance) SetSoUserId(v int32) {
	o.SoUserId = &v
}

// GetSrcOfficeId returns the SrcOfficeId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetSrcOfficeId() int32 {
	if o == nil || IsNil(o.SrcOfficeId) {
		var ret int32
		return ret
	}
	return *o.SrcOfficeId
}

// GetSrcOfficeIdOk returns a tuple with the SrcOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetSrcOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SrcOfficeId) {
		return nil, false
	}
	return o.SrcOfficeId, true
}

// HasSrcOfficeId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasSrcOfficeId() bool {
	if o != nil && !IsNil(o.SrcOfficeId) {
		return true
	}

	return false
}

// SetSrcOfficeId gets a reference to the given int32 and assigns it to the SrcOfficeId field.
func (o *ResponseChequeRemittance) SetSrcOfficeId(v int32) {
	o.SrcOfficeId = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseChequeRemittance) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ResponseChequeRemittance) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransdate returns the Transdate field value if set, zero value otherwise.
func (o *ResponseChequeRemittance) GetTransdate() string {
	if o == nil || IsNil(o.Transdate) {
		var ret string
		return ret
	}
	return *o.Transdate
}

// GetTransdateOk returns a tuple with the Transdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseChequeRemittance) GetTransdateOk() (*string, bool) {
	if o == nil || IsNil(o.Transdate) {
		return nil, false
	}
	return o.Transdate, true
}

// HasTransdate returns a boolean if a field has been set.
func (o *ResponseChequeRemittance) HasTransdate() bool {
	if o != nil && !IsNil(o.Transdate) {
		return true
	}

	return false
}

// SetTransdate gets a reference to the given string and assigns it to the Transdate field.
func (o *ResponseChequeRemittance) SetTransdate(v string) {
	o.Transdate = &v
}

func (o ResponseChequeRemittance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseChequeRemittance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoSentDate) {
		toSerialize["bo_sent_date"] = o.BoSentDate
	}
	if !IsNil(o.BoUserId) {
		toSerialize["bo_user_id"] = o.BoUserId
	}
	if !IsNil(o.ChequeAmount) {
		toSerialize["cheque_amount"] = o.ChequeAmount
	}
	if !IsNil(o.ChequeDate) {
		toSerialize["cheque_date"] = o.ChequeDate
	}
	if !IsNil(o.ChequeNo) {
		toSerialize["cheque_no"] = o.ChequeNo
	}
	if !IsNil(o.ClearingSentDate) {
		toSerialize["clearing_sent_date"] = o.ClearingSentDate
	}
	if !IsNil(o.CurrOfficeId) {
		toSerialize["curr_office_id"] = o.CurrOfficeId
	}
	if !IsNil(o.DdoUserId) {
		toSerialize["ddo_user_id"] = o.DdoUserId
	}
	if !IsNil(o.NcddoSentDate) {
		toSerialize["ncddo_sent_date"] = o.NcddoSentDate
	}
	if !IsNil(o.NcddoUserId) {
		toSerialize["ncddo_user_id"] = o.NcddoUserId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.RequestSource) {
		toSerialize["request_source"] = o.RequestSource
	}
	if !IsNil(o.SoSentDate) {
		toSerialize["so_sent_date"] = o.SoSentDate
	}
	if !IsNil(o.SoUserId) {
		toSerialize["so_user_id"] = o.SoUserId
	}
	if !IsNil(o.SrcOfficeId) {
		toSerialize["src_office_id"] = o.SrcOfficeId
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.Transdate) {
		toSerialize["transdate"] = o.Transdate
	}
	return toSerialize, nil
}

type NullableResponseChequeRemittance struct {
	value *ResponseChequeRemittance
	isSet bool
}

func (v NullableResponseChequeRemittance) Get() *ResponseChequeRemittance {
	return v.value
}

func (v *NullableResponseChequeRemittance) Set(val *ResponseChequeRemittance) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseChequeRemittance) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseChequeRemittance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseChequeRemittance(val *ResponseChequeRemittance) *NullableResponseChequeRemittance {
	return &NullableResponseChequeRemittance{value: val, isSet: true}
}

func (v NullableResponseChequeRemittance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseChequeRemittance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


