/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseCreateExceptionalWkgDayResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCreateExceptionalWkgDayResponse{}

// ResponseCreateExceptionalWkgDayResponse struct for ResponseCreateExceptionalWkgDayResponse
type ResponseCreateExceptionalWkgDayResponse struct {
	OfficeId *int32 `json:"office_id,omitempty"`
}

// NewResponseCreateExceptionalWkgDayResponse instantiates a new ResponseCreateExceptionalWkgDayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCreateExceptionalWkgDayResponse() *ResponseCreateExceptionalWkgDayResponse {
	this := ResponseCreateExceptionalWkgDayResponse{}
	return &this
}

// NewResponseCreateExceptionalWkgDayResponseWithDefaults instantiates a new ResponseCreateExceptionalWkgDayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCreateExceptionalWkgDayResponseWithDefaults() *ResponseCreateExceptionalWkgDayResponse {
	this := ResponseCreateExceptionalWkgDayResponse{}
	return &this
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseCreateExceptionalWkgDayResponse) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCreateExceptionalWkgDayResponse) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseCreateExceptionalWkgDayResponse) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseCreateExceptionalWkgDayResponse) SetOfficeId(v int32) {
	o.OfficeId = &v
}

func (o ResponseCreateExceptionalWkgDayResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCreateExceptionalWkgDayResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	return toSerialize, nil
}

type NullableResponseCreateExceptionalWkgDayResponse struct {
	value *ResponseCreateExceptionalWkgDayResponse
	isSet bool
}

func (v NullableResponseCreateExceptionalWkgDayResponse) Get() *ResponseCreateExceptionalWkgDayResponse {
	return v.value
}

func (v *NullableResponseCreateExceptionalWkgDayResponse) Set(val *ResponseCreateExceptionalWkgDayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCreateExceptionalWkgDayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCreateExceptionalWkgDayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCreateExceptionalWkgDayResponse(val *ResponseCreateExceptionalWkgDayResponse) *NullableResponseCreateExceptionalWkgDayResponse {
	return &NullableResponseCreateExceptionalWkgDayResponse{value: val, isSet: true}
}

func (v NullableResponseCreateExceptionalWkgDayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCreateExceptionalWkgDayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


