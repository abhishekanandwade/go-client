/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseCustomerTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCustomerTransaction{}

// ResponseCustomerTransaction struct for ResponseCustomerTransaction
type ResponseCustomerTransaction struct {
	ApproverDate *string `json:"approver_date,omitempty"`
	ApproverId *string `json:"approver_id,omitempty"`
	BillAmount *float32 `json:"bill_amount,omitempty"`
	BillDate *string `json:"bill_date,omitempty"`
	BillId *string `json:"bill_id,omitempty"`
	BillRemarks *string `json:"bill_remarks,omitempty"`
	ChequeDate *string `json:"cheque_date,omitempty"`
	ChequeNo *string `json:"cheque_no,omitempty"`
	CustomerId *string `json:"customer_id,omitempty"`
	CustomerName *string `json:"customer_name,omitempty"`
	CustomerTypeId *string `json:"customer_type_id,omitempty"`
	CustomerTypeName *string `json:"customer_type_name,omitempty"`
	IsAdvanceCustomer *bool `json:"is_advance_customer,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	IsRealized *bool `json:"is_realized,omitempty"`
	IsReceiptPayment *string `json:"is_receipt_payment,omitempty"`
	IssOfficeId *int32 `json:"iss_office_id,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	RealizationDate *string `json:"realization_date,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
	TxAmount *float32 `json:"tx_amount,omitempty"`
	TxMode *string `json:"tx_mode,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewResponseCustomerTransaction instantiates a new ResponseCustomerTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCustomerTransaction() *ResponseCustomerTransaction {
	this := ResponseCustomerTransaction{}
	return &this
}

// NewResponseCustomerTransactionWithDefaults instantiates a new ResponseCustomerTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCustomerTransactionWithDefaults() *ResponseCustomerTransaction {
	this := ResponseCustomerTransaction{}
	return &this
}

// GetApproverDate returns the ApproverDate field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetApproverDate() string {
	if o == nil || IsNil(o.ApproverDate) {
		var ret string
		return ret
	}
	return *o.ApproverDate
}

// GetApproverDateOk returns a tuple with the ApproverDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetApproverDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApproverDate) {
		return nil, false
	}
	return o.ApproverDate, true
}

// HasApproverDate returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasApproverDate() bool {
	if o != nil && !IsNil(o.ApproverDate) {
		return true
	}

	return false
}

// SetApproverDate gets a reference to the given string and assigns it to the ApproverDate field.
func (o *ResponseCustomerTransaction) SetApproverDate(v string) {
	o.ApproverDate = &v
}

// GetApproverId returns the ApproverId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetApproverId() string {
	if o == nil || IsNil(o.ApproverId) {
		var ret string
		return ret
	}
	return *o.ApproverId
}

// GetApproverIdOk returns a tuple with the ApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetApproverIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApproverId) {
		return nil, false
	}
	return o.ApproverId, true
}

// HasApproverId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasApproverId() bool {
	if o != nil && !IsNil(o.ApproverId) {
		return true
	}

	return false
}

// SetApproverId gets a reference to the given string and assigns it to the ApproverId field.
func (o *ResponseCustomerTransaction) SetApproverId(v string) {
	o.ApproverId = &v
}

// GetBillAmount returns the BillAmount field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetBillAmount() float32 {
	if o == nil || IsNil(o.BillAmount) {
		var ret float32
		return ret
	}
	return *o.BillAmount
}

// GetBillAmountOk returns a tuple with the BillAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetBillAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BillAmount) {
		return nil, false
	}
	return o.BillAmount, true
}

// HasBillAmount returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasBillAmount() bool {
	if o != nil && !IsNil(o.BillAmount) {
		return true
	}

	return false
}

// SetBillAmount gets a reference to the given float32 and assigns it to the BillAmount field.
func (o *ResponseCustomerTransaction) SetBillAmount(v float32) {
	o.BillAmount = &v
}

// GetBillDate returns the BillDate field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetBillDate() string {
	if o == nil || IsNil(o.BillDate) {
		var ret string
		return ret
	}
	return *o.BillDate
}

// GetBillDateOk returns a tuple with the BillDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetBillDateOk() (*string, bool) {
	if o == nil || IsNil(o.BillDate) {
		return nil, false
	}
	return o.BillDate, true
}

// HasBillDate returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasBillDate() bool {
	if o != nil && !IsNil(o.BillDate) {
		return true
	}

	return false
}

// SetBillDate gets a reference to the given string and assigns it to the BillDate field.
func (o *ResponseCustomerTransaction) SetBillDate(v string) {
	o.BillDate = &v
}

// GetBillId returns the BillId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetBillId() string {
	if o == nil || IsNil(o.BillId) {
		var ret string
		return ret
	}
	return *o.BillId
}

// GetBillIdOk returns a tuple with the BillId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetBillIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillId) {
		return nil, false
	}
	return o.BillId, true
}

// HasBillId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasBillId() bool {
	if o != nil && !IsNil(o.BillId) {
		return true
	}

	return false
}

// SetBillId gets a reference to the given string and assigns it to the BillId field.
func (o *ResponseCustomerTransaction) SetBillId(v string) {
	o.BillId = &v
}

// GetBillRemarks returns the BillRemarks field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetBillRemarks() string {
	if o == nil || IsNil(o.BillRemarks) {
		var ret string
		return ret
	}
	return *o.BillRemarks
}

// GetBillRemarksOk returns a tuple with the BillRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetBillRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.BillRemarks) {
		return nil, false
	}
	return o.BillRemarks, true
}

// HasBillRemarks returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasBillRemarks() bool {
	if o != nil && !IsNil(o.BillRemarks) {
		return true
	}

	return false
}

// SetBillRemarks gets a reference to the given string and assigns it to the BillRemarks field.
func (o *ResponseCustomerTransaction) SetBillRemarks(v string) {
	o.BillRemarks = &v
}

// GetChequeDate returns the ChequeDate field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetChequeDate() string {
	if o == nil || IsNil(o.ChequeDate) {
		var ret string
		return ret
	}
	return *o.ChequeDate
}

// GetChequeDateOk returns a tuple with the ChequeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetChequeDateOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeDate) {
		return nil, false
	}
	return o.ChequeDate, true
}

// HasChequeDate returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasChequeDate() bool {
	if o != nil && !IsNil(o.ChequeDate) {
		return true
	}

	return false
}

// SetChequeDate gets a reference to the given string and assigns it to the ChequeDate field.
func (o *ResponseCustomerTransaction) SetChequeDate(v string) {
	o.ChequeDate = &v
}

// GetChequeNo returns the ChequeNo field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetChequeNo() string {
	if o == nil || IsNil(o.ChequeNo) {
		var ret string
		return ret
	}
	return *o.ChequeNo
}

// GetChequeNoOk returns a tuple with the ChequeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetChequeNoOk() (*string, bool) {
	if o == nil || IsNil(o.ChequeNo) {
		return nil, false
	}
	return o.ChequeNo, true
}

// HasChequeNo returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasChequeNo() bool {
	if o != nil && !IsNil(o.ChequeNo) {
		return true
	}

	return false
}

// SetChequeNo gets a reference to the given string and assigns it to the ChequeNo field.
func (o *ResponseCustomerTransaction) SetChequeNo(v string) {
	o.ChequeNo = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ResponseCustomerTransaction) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetCustomerName() string {
	if o == nil || IsNil(o.CustomerName) {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetCustomerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerName) {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasCustomerName() bool {
	if o != nil && !IsNil(o.CustomerName) {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *ResponseCustomerTransaction) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetCustomerTypeId returns the CustomerTypeId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetCustomerTypeId() string {
	if o == nil || IsNil(o.CustomerTypeId) {
		var ret string
		return ret
	}
	return *o.CustomerTypeId
}

// GetCustomerTypeIdOk returns a tuple with the CustomerTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetCustomerTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerTypeId) {
		return nil, false
	}
	return o.CustomerTypeId, true
}

// HasCustomerTypeId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasCustomerTypeId() bool {
	if o != nil && !IsNil(o.CustomerTypeId) {
		return true
	}

	return false
}

// SetCustomerTypeId gets a reference to the given string and assigns it to the CustomerTypeId field.
func (o *ResponseCustomerTransaction) SetCustomerTypeId(v string) {
	o.CustomerTypeId = &v
}

// GetCustomerTypeName returns the CustomerTypeName field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetCustomerTypeName() string {
	if o == nil || IsNil(o.CustomerTypeName) {
		var ret string
		return ret
	}
	return *o.CustomerTypeName
}

// GetCustomerTypeNameOk returns a tuple with the CustomerTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetCustomerTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerTypeName) {
		return nil, false
	}
	return o.CustomerTypeName, true
}

// HasCustomerTypeName returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasCustomerTypeName() bool {
	if o != nil && !IsNil(o.CustomerTypeName) {
		return true
	}

	return false
}

// SetCustomerTypeName gets a reference to the given string and assigns it to the CustomerTypeName field.
func (o *ResponseCustomerTransaction) SetCustomerTypeName(v string) {
	o.CustomerTypeName = &v
}

// GetIsAdvanceCustomer returns the IsAdvanceCustomer field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetIsAdvanceCustomer() bool {
	if o == nil || IsNil(o.IsAdvanceCustomer) {
		var ret bool
		return ret
	}
	return *o.IsAdvanceCustomer
}

// GetIsAdvanceCustomerOk returns a tuple with the IsAdvanceCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetIsAdvanceCustomerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdvanceCustomer) {
		return nil, false
	}
	return o.IsAdvanceCustomer, true
}

// HasIsAdvanceCustomer returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasIsAdvanceCustomer() bool {
	if o != nil && !IsNil(o.IsAdvanceCustomer) {
		return true
	}

	return false
}

// SetIsAdvanceCustomer gets a reference to the given bool and assigns it to the IsAdvanceCustomer field.
func (o *ResponseCustomerTransaction) SetIsAdvanceCustomer(v bool) {
	o.IsAdvanceCustomer = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *ResponseCustomerTransaction) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetIsRealized returns the IsRealized field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetIsRealized() bool {
	if o == nil || IsNil(o.IsRealized) {
		var ret bool
		return ret
	}
	return *o.IsRealized
}

// GetIsRealizedOk returns a tuple with the IsRealized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetIsRealizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRealized) {
		return nil, false
	}
	return o.IsRealized, true
}

// HasIsRealized returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasIsRealized() bool {
	if o != nil && !IsNil(o.IsRealized) {
		return true
	}

	return false
}

// SetIsRealized gets a reference to the given bool and assigns it to the IsRealized field.
func (o *ResponseCustomerTransaction) SetIsRealized(v bool) {
	o.IsRealized = &v
}

// GetIsReceiptPayment returns the IsReceiptPayment field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetIsReceiptPayment() string {
	if o == nil || IsNil(o.IsReceiptPayment) {
		var ret string
		return ret
	}
	return *o.IsReceiptPayment
}

// GetIsReceiptPaymentOk returns a tuple with the IsReceiptPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetIsReceiptPaymentOk() (*string, bool) {
	if o == nil || IsNil(o.IsReceiptPayment) {
		return nil, false
	}
	return o.IsReceiptPayment, true
}

// HasIsReceiptPayment returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasIsReceiptPayment() bool {
	if o != nil && !IsNil(o.IsReceiptPayment) {
		return true
	}

	return false
}

// SetIsReceiptPayment gets a reference to the given string and assigns it to the IsReceiptPayment field.
func (o *ResponseCustomerTransaction) SetIsReceiptPayment(v string) {
	o.IsReceiptPayment = &v
}

// GetIssOfficeId returns the IssOfficeId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetIssOfficeId() int32 {
	if o == nil || IsNil(o.IssOfficeId) {
		var ret int32
		return ret
	}
	return *o.IssOfficeId
}

// GetIssOfficeIdOk returns a tuple with the IssOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetIssOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssOfficeId) {
		return nil, false
	}
	return o.IssOfficeId, true
}

// HasIssOfficeId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasIssOfficeId() bool {
	if o != nil && !IsNil(o.IssOfficeId) {
		return true
	}

	return false
}

// SetIssOfficeId gets a reference to the given int32 and assigns it to the IssOfficeId field.
func (o *ResponseCustomerTransaction) SetIssOfficeId(v int32) {
	o.IssOfficeId = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseCustomerTransaction) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetRealizationDate returns the RealizationDate field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetRealizationDate() string {
	if o == nil || IsNil(o.RealizationDate) {
		var ret string
		return ret
	}
	return *o.RealizationDate
}

// GetRealizationDateOk returns a tuple with the RealizationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetRealizationDateOk() (*string, bool) {
	if o == nil || IsNil(o.RealizationDate) {
		return nil, false
	}
	return o.RealizationDate, true
}

// HasRealizationDate returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasRealizationDate() bool {
	if o != nil && !IsNil(o.RealizationDate) {
		return true
	}

	return false
}

// SetRealizationDate gets a reference to the given string and assigns it to the RealizationDate field.
func (o *ResponseCustomerTransaction) SetRealizationDate(v string) {
	o.RealizationDate = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseCustomerTransaction) SetRemarks(v string) {
	o.Remarks = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseCustomerTransaction) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *ResponseCustomerTransaction) SetTransId(v string) {
	o.TransId = &v
}

// GetTxAmount returns the TxAmount field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetTxAmount() float32 {
	if o == nil || IsNil(o.TxAmount) {
		var ret float32
		return ret
	}
	return *o.TxAmount
}

// GetTxAmountOk returns a tuple with the TxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetTxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TxAmount) {
		return nil, false
	}
	return o.TxAmount, true
}

// HasTxAmount returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasTxAmount() bool {
	if o != nil && !IsNil(o.TxAmount) {
		return true
	}

	return false
}

// SetTxAmount gets a reference to the given float32 and assigns it to the TxAmount field.
func (o *ResponseCustomerTransaction) SetTxAmount(v float32) {
	o.TxAmount = &v
}

// GetTxMode returns the TxMode field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetTxMode() string {
	if o == nil || IsNil(o.TxMode) {
		var ret string
		return ret
	}
	return *o.TxMode
}

// GetTxModeOk returns a tuple with the TxMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetTxModeOk() (*string, bool) {
	if o == nil || IsNil(o.TxMode) {
		return nil, false
	}
	return o.TxMode, true
}

// HasTxMode returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasTxMode() bool {
	if o != nil && !IsNil(o.TxMode) {
		return true
	}

	return false
}

// SetTxMode gets a reference to the given string and assigns it to the TxMode field.
func (o *ResponseCustomerTransaction) SetTxMode(v string) {
	o.TxMode = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseCustomerTransaction) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCustomerTransaction) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseCustomerTransaction) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ResponseCustomerTransaction) SetUserId(v string) {
	o.UserId = &v
}

func (o ResponseCustomerTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCustomerTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApproverDate) {
		toSerialize["approver_date"] = o.ApproverDate
	}
	if !IsNil(o.ApproverId) {
		toSerialize["approver_id"] = o.ApproverId
	}
	if !IsNil(o.BillAmount) {
		toSerialize["bill_amount"] = o.BillAmount
	}
	if !IsNil(o.BillDate) {
		toSerialize["bill_date"] = o.BillDate
	}
	if !IsNil(o.BillId) {
		toSerialize["bill_id"] = o.BillId
	}
	if !IsNil(o.BillRemarks) {
		toSerialize["bill_remarks"] = o.BillRemarks
	}
	if !IsNil(o.ChequeDate) {
		toSerialize["cheque_date"] = o.ChequeDate
	}
	if !IsNil(o.ChequeNo) {
		toSerialize["cheque_no"] = o.ChequeNo
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.CustomerName) {
		toSerialize["customer_name"] = o.CustomerName
	}
	if !IsNil(o.CustomerTypeId) {
		toSerialize["customer_type_id"] = o.CustomerTypeId
	}
	if !IsNil(o.CustomerTypeName) {
		toSerialize["customer_type_name"] = o.CustomerTypeName
	}
	if !IsNil(o.IsAdvanceCustomer) {
		toSerialize["is_advance_customer"] = o.IsAdvanceCustomer
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.IsRealized) {
		toSerialize["is_realized"] = o.IsRealized
	}
	if !IsNil(o.IsReceiptPayment) {
		toSerialize["is_receipt_payment"] = o.IsReceiptPayment
	}
	if !IsNil(o.IssOfficeId) {
		toSerialize["iss_office_id"] = o.IssOfficeId
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.RealizationDate) {
		toSerialize["realization_date"] = o.RealizationDate
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	if !IsNil(o.TxAmount) {
		toSerialize["tx_amount"] = o.TxAmount
	}
	if !IsNil(o.TxMode) {
		toSerialize["tx_mode"] = o.TxMode
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableResponseCustomerTransaction struct {
	value *ResponseCustomerTransaction
	isSet bool
}

func (v NullableResponseCustomerTransaction) Get() *ResponseCustomerTransaction {
	return v.value
}

func (v *NullableResponseCustomerTransaction) Set(val *ResponseCustomerTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCustomerTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCustomerTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCustomerTransaction(val *ResponseCustomerTransaction) *NullableResponseCustomerTransaction {
	return &NullableResponseCustomerTransaction{value: val, isSet: true}
}

func (v NullableResponseCustomerTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCustomerTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


