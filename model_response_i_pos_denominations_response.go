/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseIPOsDenominationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseIPOsDenominationsResponse{}

// ResponseIPOsDenominationsResponse struct for ResponseIPOsDenominationsResponse
type ResponseIPOsDenominationsResponse struct {
	Commission *string `json:"commission,omitempty"`
	DenominationDesc *string `json:"denomination_desc,omitempty"`
	DenominationId *string `json:"denomination_id,omitempty"`
	DenominationValue *int32 `json:"denomination_value,omitempty"`
	EnteredByUser *string `json:"entered_by_user,omitempty"`
	EntryDate *string `json:"entry_date,omitempty"`
	IpoTariffId *string `json:"ipo_tariff_id,omitempty"`
	ProductCode *string `json:"product_code,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	UpdateDate *string `json:"update_date,omitempty"`
	UpdatedByUser *string `json:"updated_by_user,omitempty"`
	ValidFrom *string `json:"valid_from,omitempty"`
	ValidTo *string `json:"valid_to,omitempty"`
	ValueCode *string `json:"value_code,omitempty"`
}

// NewResponseIPOsDenominationsResponse instantiates a new ResponseIPOsDenominationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseIPOsDenominationsResponse() *ResponseIPOsDenominationsResponse {
	this := ResponseIPOsDenominationsResponse{}
	return &this
}

// NewResponseIPOsDenominationsResponseWithDefaults instantiates a new ResponseIPOsDenominationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseIPOsDenominationsResponseWithDefaults() *ResponseIPOsDenominationsResponse {
	this := ResponseIPOsDenominationsResponse{}
	return &this
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetCommission() string {
	if o == nil || IsNil(o.Commission) {
		var ret string
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetCommissionOk() (*string, bool) {
	if o == nil || IsNil(o.Commission) {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasCommission() bool {
	if o != nil && !IsNil(o.Commission) {
		return true
	}

	return false
}

// SetCommission gets a reference to the given string and assigns it to the Commission field.
func (o *ResponseIPOsDenominationsResponse) SetCommission(v string) {
	o.Commission = &v
}

// GetDenominationDesc returns the DenominationDesc field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetDenominationDesc() string {
	if o == nil || IsNil(o.DenominationDesc) {
		var ret string
		return ret
	}
	return *o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetDenominationDescOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationDesc) {
		return nil, false
	}
	return o.DenominationDesc, true
}

// HasDenominationDesc returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasDenominationDesc() bool {
	if o != nil && !IsNil(o.DenominationDesc) {
		return true
	}

	return false
}

// SetDenominationDesc gets a reference to the given string and assigns it to the DenominationDesc field.
func (o *ResponseIPOsDenominationsResponse) SetDenominationDesc(v string) {
	o.DenominationDesc = &v
}

// GetDenominationId returns the DenominationId field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetDenominationId() string {
	if o == nil || IsNil(o.DenominationId) {
		var ret string
		return ret
	}
	return *o.DenominationId
}

// GetDenominationIdOk returns a tuple with the DenominationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetDenominationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationId) {
		return nil, false
	}
	return o.DenominationId, true
}

// HasDenominationId returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasDenominationId() bool {
	if o != nil && !IsNil(o.DenominationId) {
		return true
	}

	return false
}

// SetDenominationId gets a reference to the given string and assigns it to the DenominationId field.
func (o *ResponseIPOsDenominationsResponse) SetDenominationId(v string) {
	o.DenominationId = &v
}

// GetDenominationValue returns the DenominationValue field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetDenominationValue() int32 {
	if o == nil || IsNil(o.DenominationValue) {
		var ret int32
		return ret
	}
	return *o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetDenominationValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DenominationValue) {
		return nil, false
	}
	return o.DenominationValue, true
}

// HasDenominationValue returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasDenominationValue() bool {
	if o != nil && !IsNil(o.DenominationValue) {
		return true
	}

	return false
}

// SetDenominationValue gets a reference to the given int32 and assigns it to the DenominationValue field.
func (o *ResponseIPOsDenominationsResponse) SetDenominationValue(v int32) {
	o.DenominationValue = &v
}

// GetEnteredByUser returns the EnteredByUser field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetEnteredByUser() string {
	if o == nil || IsNil(o.EnteredByUser) {
		var ret string
		return ret
	}
	return *o.EnteredByUser
}

// GetEnteredByUserOk returns a tuple with the EnteredByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetEnteredByUserOk() (*string, bool) {
	if o == nil || IsNil(o.EnteredByUser) {
		return nil, false
	}
	return o.EnteredByUser, true
}

// HasEnteredByUser returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasEnteredByUser() bool {
	if o != nil && !IsNil(o.EnteredByUser) {
		return true
	}

	return false
}

// SetEnteredByUser gets a reference to the given string and assigns it to the EnteredByUser field.
func (o *ResponseIPOsDenominationsResponse) SetEnteredByUser(v string) {
	o.EnteredByUser = &v
}

// GetEntryDate returns the EntryDate field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetEntryDate() string {
	if o == nil || IsNil(o.EntryDate) {
		var ret string
		return ret
	}
	return *o.EntryDate
}

// GetEntryDateOk returns a tuple with the EntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetEntryDateOk() (*string, bool) {
	if o == nil || IsNil(o.EntryDate) {
		return nil, false
	}
	return o.EntryDate, true
}

// HasEntryDate returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasEntryDate() bool {
	if o != nil && !IsNil(o.EntryDate) {
		return true
	}

	return false
}

// SetEntryDate gets a reference to the given string and assigns it to the EntryDate field.
func (o *ResponseIPOsDenominationsResponse) SetEntryDate(v string) {
	o.EntryDate = &v
}

// GetIpoTariffId returns the IpoTariffId field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetIpoTariffId() string {
	if o == nil || IsNil(o.IpoTariffId) {
		var ret string
		return ret
	}
	return *o.IpoTariffId
}

// GetIpoTariffIdOk returns a tuple with the IpoTariffId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetIpoTariffIdOk() (*string, bool) {
	if o == nil || IsNil(o.IpoTariffId) {
		return nil, false
	}
	return o.IpoTariffId, true
}

// HasIpoTariffId returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasIpoTariffId() bool {
	if o != nil && !IsNil(o.IpoTariffId) {
		return true
	}

	return false
}

// SetIpoTariffId gets a reference to the given string and assigns it to the IpoTariffId field.
func (o *ResponseIPOsDenominationsResponse) SetIpoTariffId(v string) {
	o.IpoTariffId = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *ResponseIPOsDenominationsResponse) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ResponseIPOsDenominationsResponse) SetProductId(v string) {
	o.ProductId = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetUpdateDate() string {
	if o == nil || IsNil(o.UpdateDate) {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetUpdateDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *ResponseIPOsDenominationsResponse) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetUpdatedByUser returns the UpdatedByUser field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetUpdatedByUser() string {
	if o == nil || IsNil(o.UpdatedByUser) {
		var ret string
		return ret
	}
	return *o.UpdatedByUser
}

// GetUpdatedByUserOk returns a tuple with the UpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetUpdatedByUserOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByUser) {
		return nil, false
	}
	return o.UpdatedByUser, true
}

// HasUpdatedByUser returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasUpdatedByUser() bool {
	if o != nil && !IsNil(o.UpdatedByUser) {
		return true
	}

	return false
}

// SetUpdatedByUser gets a reference to the given string and assigns it to the UpdatedByUser field.
func (o *ResponseIPOsDenominationsResponse) SetUpdatedByUser(v string) {
	o.UpdatedByUser = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetValidFrom() string {
	if o == nil || IsNil(o.ValidFrom) {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetValidFromOk() (*string, bool) {
	if o == nil || IsNil(o.ValidFrom) {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasValidFrom() bool {
	if o != nil && !IsNil(o.ValidFrom) {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *ResponseIPOsDenominationsResponse) SetValidFrom(v string) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetValidTo() string {
	if o == nil || IsNil(o.ValidTo) {
		var ret string
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetValidToOk() (*string, bool) {
	if o == nil || IsNil(o.ValidTo) {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasValidTo() bool {
	if o != nil && !IsNil(o.ValidTo) {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given string and assigns it to the ValidTo field.
func (o *ResponseIPOsDenominationsResponse) SetValidTo(v string) {
	o.ValidTo = &v
}

// GetValueCode returns the ValueCode field value if set, zero value otherwise.
func (o *ResponseIPOsDenominationsResponse) GetValueCode() string {
	if o == nil || IsNil(o.ValueCode) {
		var ret string
		return ret
	}
	return *o.ValueCode
}

// GetValueCodeOk returns a tuple with the ValueCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIPOsDenominationsResponse) GetValueCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ValueCode) {
		return nil, false
	}
	return o.ValueCode, true
}

// HasValueCode returns a boolean if a field has been set.
func (o *ResponseIPOsDenominationsResponse) HasValueCode() bool {
	if o != nil && !IsNil(o.ValueCode) {
		return true
	}

	return false
}

// SetValueCode gets a reference to the given string and assigns it to the ValueCode field.
func (o *ResponseIPOsDenominationsResponse) SetValueCode(v string) {
	o.ValueCode = &v
}

func (o ResponseIPOsDenominationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseIPOsDenominationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commission) {
		toSerialize["commission"] = o.Commission
	}
	if !IsNil(o.DenominationDesc) {
		toSerialize["denomination_desc"] = o.DenominationDesc
	}
	if !IsNil(o.DenominationId) {
		toSerialize["denomination_id"] = o.DenominationId
	}
	if !IsNil(o.DenominationValue) {
		toSerialize["denomination_value"] = o.DenominationValue
	}
	if !IsNil(o.EnteredByUser) {
		toSerialize["entered_by_user"] = o.EnteredByUser
	}
	if !IsNil(o.EntryDate) {
		toSerialize["entry_date"] = o.EntryDate
	}
	if !IsNil(o.IpoTariffId) {
		toSerialize["ipo_tariff_id"] = o.IpoTariffId
	}
	if !IsNil(o.ProductCode) {
		toSerialize["product_code"] = o.ProductCode
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["update_date"] = o.UpdateDate
	}
	if !IsNil(o.UpdatedByUser) {
		toSerialize["updated_by_user"] = o.UpdatedByUser
	}
	if !IsNil(o.ValidFrom) {
		toSerialize["valid_from"] = o.ValidFrom
	}
	if !IsNil(o.ValidTo) {
		toSerialize["valid_to"] = o.ValidTo
	}
	if !IsNil(o.ValueCode) {
		toSerialize["value_code"] = o.ValueCode
	}
	return toSerialize, nil
}

type NullableResponseIPOsDenominationsResponse struct {
	value *ResponseIPOsDenominationsResponse
	isSet bool
}

func (v NullableResponseIPOsDenominationsResponse) Get() *ResponseIPOsDenominationsResponse {
	return v.value
}

func (v *NullableResponseIPOsDenominationsResponse) Set(val *ResponseIPOsDenominationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseIPOsDenominationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseIPOsDenominationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseIPOsDenominationsResponse(val *ResponseIPOsDenominationsResponse) *NullableResponseIPOsDenominationsResponse {
	return &NullableResponseIPOsDenominationsResponse{value: val, isSet: true}
}

func (v NullableResponseIPOsDenominationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseIPOsDenominationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


