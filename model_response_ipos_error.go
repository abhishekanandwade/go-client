/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseIposError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseIposError{}

// ResponseIposError struct for ResponseIposError
type ResponseIposError struct {
	CurrOffice *int32 `json:"curr_office,omitempty"`
	DestAmt *float32 `json:"dest_amt,omitempty"`
	DestDetails *string `json:"dest_details,omitempty"`
	DestOffice *int32 `json:"dest_office,omitempty"`
	DestOfficeName *string `json:"dest_office_name,omitempty"`
	DiffDetails *string `json:"diff_details,omitempty"`
	ErrorId *string `json:"error_id,omitempty"`
	IposErrorDetails []ResponseIposErrorDetails `json:"iposErrorDetails,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	SrcAmt *float32 `json:"src_amt,omitempty"`
	SrcDetails *string `json:"src_details,omitempty"`
	SrcOffice *int32 `json:"src_office,omitempty"`
	SrcOfficeName *string `json:"src_office_name,omitempty"`
	Status *string `json:"status,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
}

// NewResponseIposError instantiates a new ResponseIposError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseIposError() *ResponseIposError {
	this := ResponseIposError{}
	return &this
}

// NewResponseIposErrorWithDefaults instantiates a new ResponseIposError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseIposErrorWithDefaults() *ResponseIposError {
	this := ResponseIposError{}
	return &this
}

// GetCurrOffice returns the CurrOffice field value if set, zero value otherwise.
func (o *ResponseIposError) GetCurrOffice() int32 {
	if o == nil || IsNil(o.CurrOffice) {
		var ret int32
		return ret
	}
	return *o.CurrOffice
}

// GetCurrOfficeOk returns a tuple with the CurrOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetCurrOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrOffice) {
		return nil, false
	}
	return o.CurrOffice, true
}

// HasCurrOffice returns a boolean if a field has been set.
func (o *ResponseIposError) HasCurrOffice() bool {
	if o != nil && !IsNil(o.CurrOffice) {
		return true
	}

	return false
}

// SetCurrOffice gets a reference to the given int32 and assigns it to the CurrOffice field.
func (o *ResponseIposError) SetCurrOffice(v int32) {
	o.CurrOffice = &v
}

// GetDestAmt returns the DestAmt field value if set, zero value otherwise.
func (o *ResponseIposError) GetDestAmt() float32 {
	if o == nil || IsNil(o.DestAmt) {
		var ret float32
		return ret
	}
	return *o.DestAmt
}

// GetDestAmtOk returns a tuple with the DestAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetDestAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.DestAmt) {
		return nil, false
	}
	return o.DestAmt, true
}

// HasDestAmt returns a boolean if a field has been set.
func (o *ResponseIposError) HasDestAmt() bool {
	if o != nil && !IsNil(o.DestAmt) {
		return true
	}

	return false
}

// SetDestAmt gets a reference to the given float32 and assigns it to the DestAmt field.
func (o *ResponseIposError) SetDestAmt(v float32) {
	o.DestAmt = &v
}

// GetDestDetails returns the DestDetails field value if set, zero value otherwise.
func (o *ResponseIposError) GetDestDetails() string {
	if o == nil || IsNil(o.DestDetails) {
		var ret string
		return ret
	}
	return *o.DestDetails
}

// GetDestDetailsOk returns a tuple with the DestDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetDestDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.DestDetails) {
		return nil, false
	}
	return o.DestDetails, true
}

// HasDestDetails returns a boolean if a field has been set.
func (o *ResponseIposError) HasDestDetails() bool {
	if o != nil && !IsNil(o.DestDetails) {
		return true
	}

	return false
}

// SetDestDetails gets a reference to the given string and assigns it to the DestDetails field.
func (o *ResponseIposError) SetDestDetails(v string) {
	o.DestDetails = &v
}

// GetDestOffice returns the DestOffice field value if set, zero value otherwise.
func (o *ResponseIposError) GetDestOffice() int32 {
	if o == nil || IsNil(o.DestOffice) {
		var ret int32
		return ret
	}
	return *o.DestOffice
}

// GetDestOfficeOk returns a tuple with the DestOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetDestOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.DestOffice) {
		return nil, false
	}
	return o.DestOffice, true
}

// HasDestOffice returns a boolean if a field has been set.
func (o *ResponseIposError) HasDestOffice() bool {
	if o != nil && !IsNil(o.DestOffice) {
		return true
	}

	return false
}

// SetDestOffice gets a reference to the given int32 and assigns it to the DestOffice field.
func (o *ResponseIposError) SetDestOffice(v int32) {
	o.DestOffice = &v
}

// GetDestOfficeName returns the DestOfficeName field value if set, zero value otherwise.
func (o *ResponseIposError) GetDestOfficeName() string {
	if o == nil || IsNil(o.DestOfficeName) {
		var ret string
		return ret
	}
	return *o.DestOfficeName
}

// GetDestOfficeNameOk returns a tuple with the DestOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetDestOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestOfficeName) {
		return nil, false
	}
	return o.DestOfficeName, true
}

// HasDestOfficeName returns a boolean if a field has been set.
func (o *ResponseIposError) HasDestOfficeName() bool {
	if o != nil && !IsNil(o.DestOfficeName) {
		return true
	}

	return false
}

// SetDestOfficeName gets a reference to the given string and assigns it to the DestOfficeName field.
func (o *ResponseIposError) SetDestOfficeName(v string) {
	o.DestOfficeName = &v
}

// GetDiffDetails returns the DiffDetails field value if set, zero value otherwise.
func (o *ResponseIposError) GetDiffDetails() string {
	if o == nil || IsNil(o.DiffDetails) {
		var ret string
		return ret
	}
	return *o.DiffDetails
}

// GetDiffDetailsOk returns a tuple with the DiffDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetDiffDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.DiffDetails) {
		return nil, false
	}
	return o.DiffDetails, true
}

// HasDiffDetails returns a boolean if a field has been set.
func (o *ResponseIposError) HasDiffDetails() bool {
	if o != nil && !IsNil(o.DiffDetails) {
		return true
	}

	return false
}

// SetDiffDetails gets a reference to the given string and assigns it to the DiffDetails field.
func (o *ResponseIposError) SetDiffDetails(v string) {
	o.DiffDetails = &v
}

// GetErrorId returns the ErrorId field value if set, zero value otherwise.
func (o *ResponseIposError) GetErrorId() string {
	if o == nil || IsNil(o.ErrorId) {
		var ret string
		return ret
	}
	return *o.ErrorId
}

// GetErrorIdOk returns a tuple with the ErrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetErrorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorId) {
		return nil, false
	}
	return o.ErrorId, true
}

// HasErrorId returns a boolean if a field has been set.
func (o *ResponseIposError) HasErrorId() bool {
	if o != nil && !IsNil(o.ErrorId) {
		return true
	}

	return false
}

// SetErrorId gets a reference to the given string and assigns it to the ErrorId field.
func (o *ResponseIposError) SetErrorId(v string) {
	o.ErrorId = &v
}

// GetIposErrorDetails returns the IposErrorDetails field value if set, zero value otherwise.
func (o *ResponseIposError) GetIposErrorDetails() []ResponseIposErrorDetails {
	if o == nil || IsNil(o.IposErrorDetails) {
		var ret []ResponseIposErrorDetails
		return ret
	}
	return o.IposErrorDetails
}

// GetIposErrorDetailsOk returns a tuple with the IposErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetIposErrorDetailsOk() ([]ResponseIposErrorDetails, bool) {
	if o == nil || IsNil(o.IposErrorDetails) {
		return nil, false
	}
	return o.IposErrorDetails, true
}

// HasIposErrorDetails returns a boolean if a field has been set.
func (o *ResponseIposError) HasIposErrorDetails() bool {
	if o != nil && !IsNil(o.IposErrorDetails) {
		return true
	}

	return false
}

// SetIposErrorDetails gets a reference to the given []ResponseIposErrorDetails and assigns it to the IposErrorDetails field.
func (o *ResponseIposError) SetIposErrorDetails(v []ResponseIposErrorDetails) {
	o.IposErrorDetails = v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseIposError) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseIposError) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseIposError) SetRemarks(v string) {
	o.Remarks = &v
}

// GetSrcAmt returns the SrcAmt field value if set, zero value otherwise.
func (o *ResponseIposError) GetSrcAmt() float32 {
	if o == nil || IsNil(o.SrcAmt) {
		var ret float32
		return ret
	}
	return *o.SrcAmt
}

// GetSrcAmtOk returns a tuple with the SrcAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetSrcAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.SrcAmt) {
		return nil, false
	}
	return o.SrcAmt, true
}

// HasSrcAmt returns a boolean if a field has been set.
func (o *ResponseIposError) HasSrcAmt() bool {
	if o != nil && !IsNil(o.SrcAmt) {
		return true
	}

	return false
}

// SetSrcAmt gets a reference to the given float32 and assigns it to the SrcAmt field.
func (o *ResponseIposError) SetSrcAmt(v float32) {
	o.SrcAmt = &v
}

// GetSrcDetails returns the SrcDetails field value if set, zero value otherwise.
func (o *ResponseIposError) GetSrcDetails() string {
	if o == nil || IsNil(o.SrcDetails) {
		var ret string
		return ret
	}
	return *o.SrcDetails
}

// GetSrcDetailsOk returns a tuple with the SrcDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetSrcDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.SrcDetails) {
		return nil, false
	}
	return o.SrcDetails, true
}

// HasSrcDetails returns a boolean if a field has been set.
func (o *ResponseIposError) HasSrcDetails() bool {
	if o != nil && !IsNil(o.SrcDetails) {
		return true
	}

	return false
}

// SetSrcDetails gets a reference to the given string and assigns it to the SrcDetails field.
func (o *ResponseIposError) SetSrcDetails(v string) {
	o.SrcDetails = &v
}

// GetSrcOffice returns the SrcOffice field value if set, zero value otherwise.
func (o *ResponseIposError) GetSrcOffice() int32 {
	if o == nil || IsNil(o.SrcOffice) {
		var ret int32
		return ret
	}
	return *o.SrcOffice
}

// GetSrcOfficeOk returns a tuple with the SrcOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetSrcOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.SrcOffice) {
		return nil, false
	}
	return o.SrcOffice, true
}

// HasSrcOffice returns a boolean if a field has been set.
func (o *ResponseIposError) HasSrcOffice() bool {
	if o != nil && !IsNil(o.SrcOffice) {
		return true
	}

	return false
}

// SetSrcOffice gets a reference to the given int32 and assigns it to the SrcOffice field.
func (o *ResponseIposError) SetSrcOffice(v int32) {
	o.SrcOffice = &v
}

// GetSrcOfficeName returns the SrcOfficeName field value if set, zero value otherwise.
func (o *ResponseIposError) GetSrcOfficeName() string {
	if o == nil || IsNil(o.SrcOfficeName) {
		var ret string
		return ret
	}
	return *o.SrcOfficeName
}

// GetSrcOfficeNameOk returns a tuple with the SrcOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetSrcOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.SrcOfficeName) {
		return nil, false
	}
	return o.SrcOfficeName, true
}

// HasSrcOfficeName returns a boolean if a field has been set.
func (o *ResponseIposError) HasSrcOfficeName() bool {
	if o != nil && !IsNil(o.SrcOfficeName) {
		return true
	}

	return false
}

// SetSrcOfficeName gets a reference to the given string and assigns it to the SrcOfficeName field.
func (o *ResponseIposError) SetSrcOfficeName(v string) {
	o.SrcOfficeName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponseIposError) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponseIposError) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ResponseIposError) SetStatus(v string) {
	o.Status = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseIposError) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseIposError) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseIposError) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *ResponseIposError) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *ResponseIposError) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *ResponseIposError) SetTransId(v string) {
	o.TransId = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *ResponseIposError) GetTransType() string {
	if o == nil || IsNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetTransTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransType) {
		return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *ResponseIposError) HasTransType() bool {
	if o != nil && !IsNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *ResponseIposError) SetTransType(v string) {
	o.TransType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseIposError) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposError) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseIposError) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ResponseIposError) SetUserId(v int32) {
	o.UserId = &v
}

func (o ResponseIposError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseIposError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrOffice) {
		toSerialize["curr_office"] = o.CurrOffice
	}
	if !IsNil(o.DestAmt) {
		toSerialize["dest_amt"] = o.DestAmt
	}
	if !IsNil(o.DestDetails) {
		toSerialize["dest_details"] = o.DestDetails
	}
	if !IsNil(o.DestOffice) {
		toSerialize["dest_office"] = o.DestOffice
	}
	if !IsNil(o.DestOfficeName) {
		toSerialize["dest_office_name"] = o.DestOfficeName
	}
	if !IsNil(o.DiffDetails) {
		toSerialize["diff_details"] = o.DiffDetails
	}
	if !IsNil(o.ErrorId) {
		toSerialize["error_id"] = o.ErrorId
	}
	if !IsNil(o.IposErrorDetails) {
		toSerialize["iposErrorDetails"] = o.IposErrorDetails
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.SrcAmt) {
		toSerialize["src_amt"] = o.SrcAmt
	}
	if !IsNil(o.SrcDetails) {
		toSerialize["src_details"] = o.SrcDetails
	}
	if !IsNil(o.SrcOffice) {
		toSerialize["src_office"] = o.SrcOffice
	}
	if !IsNil(o.SrcOfficeName) {
		toSerialize["src_office_name"] = o.SrcOfficeName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	if !IsNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableResponseIposError struct {
	value *ResponseIposError
	isSet bool
}

func (v NullableResponseIposError) Get() *ResponseIposError {
	return v.value
}

func (v *NullableResponseIposError) Set(val *ResponseIposError) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseIposError) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseIposError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseIposError(val *ResponseIposError) *NullableResponseIposError {
	return &NullableResponseIposError{value: val, isSet: true}
}

func (v NullableResponseIposError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseIposError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


