/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseIposErrorDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseIposErrorDetails{}

// ResponseIposErrorDetails struct for ResponseIposErrorDetails
type ResponseIposErrorDetails struct {
	ErrorId *string `json:"error_id,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
}

// NewResponseIposErrorDetails instantiates a new ResponseIposErrorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseIposErrorDetails() *ResponseIposErrorDetails {
	this := ResponseIposErrorDetails{}
	return &this
}

// NewResponseIposErrorDetailsWithDefaults instantiates a new ResponseIposErrorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseIposErrorDetailsWithDefaults() *ResponseIposErrorDetails {
	this := ResponseIposErrorDetails{}
	return &this
}

// GetErrorId returns the ErrorId field value if set, zero value otherwise.
func (o *ResponseIposErrorDetails) GetErrorId() string {
	if o == nil || IsNil(o.ErrorId) {
		var ret string
		return ret
	}
	return *o.ErrorId
}

// GetErrorIdOk returns a tuple with the ErrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposErrorDetails) GetErrorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorId) {
		return nil, false
	}
	return o.ErrorId, true
}

// HasErrorId returns a boolean if a field has been set.
func (o *ResponseIposErrorDetails) HasErrorId() bool {
	if o != nil && !IsNil(o.ErrorId) {
		return true
	}

	return false
}

// SetErrorId gets a reference to the given string and assigns it to the ErrorId field.
func (o *ResponseIposErrorDetails) SetErrorId(v string) {
	o.ErrorId = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseIposErrorDetails) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposErrorDetails) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseIposErrorDetails) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseIposErrorDetails) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseIposErrorDetails) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposErrorDetails) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseIposErrorDetails) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseIposErrorDetails) SetRemarks(v string) {
	o.Remarks = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseIposErrorDetails) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposErrorDetails) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseIposErrorDetails) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseIposErrorDetails) SetTransDate(v string) {
	o.TransDate = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseIposErrorDetails) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseIposErrorDetails) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseIposErrorDetails) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ResponseIposErrorDetails) SetUserId(v int32) {
	o.UserId = &v
}

func (o ResponseIposErrorDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseIposErrorDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorId) {
		toSerialize["error_id"] = o.ErrorId
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableResponseIposErrorDetails struct {
	value *ResponseIposErrorDetails
	isSet bool
}

func (v NullableResponseIposErrorDetails) Get() *ResponseIposErrorDetails {
	return v.value
}

func (v *NullableResponseIposErrorDetails) Set(val *ResponseIposErrorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseIposErrorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseIposErrorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseIposErrorDetails(val *ResponseIposErrorDetails) *NullableResponseIposErrorDetails {
	return &NullableResponseIposErrorDetails{value: val, isSet: true}
}

func (v NullableResponseIposErrorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseIposErrorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


