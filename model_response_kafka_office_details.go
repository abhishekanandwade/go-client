/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseKafkaOfficeDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseKafkaOfficeDetails{}

// ResponseKafkaOfficeDetails struct for ResponseKafkaOfficeDetails
type ResponseKafkaOfficeDetails struct {
	OfficeId *int32 `json:"office_id,omitempty"`
	OfficeName *string `json:"office_name,omitempty"`
	OfficeTypeCode *string `json:"office_type_code,omitempty"`
}

// NewResponseKafkaOfficeDetails instantiates a new ResponseKafkaOfficeDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseKafkaOfficeDetails() *ResponseKafkaOfficeDetails {
	this := ResponseKafkaOfficeDetails{}
	return &this
}

// NewResponseKafkaOfficeDetailsWithDefaults instantiates a new ResponseKafkaOfficeDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseKafkaOfficeDetailsWithDefaults() *ResponseKafkaOfficeDetails {
	this := ResponseKafkaOfficeDetails{}
	return &this
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseKafkaOfficeDetails) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseKafkaOfficeDetails) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseKafkaOfficeDetails) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseKafkaOfficeDetails) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetOfficeName returns the OfficeName field value if set, zero value otherwise.
func (o *ResponseKafkaOfficeDetails) GetOfficeName() string {
	if o == nil || IsNil(o.OfficeName) {
		var ret string
		return ret
	}
	return *o.OfficeName
}

// GetOfficeNameOk returns a tuple with the OfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseKafkaOfficeDetails) GetOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeName) {
		return nil, false
	}
	return o.OfficeName, true
}

// HasOfficeName returns a boolean if a field has been set.
func (o *ResponseKafkaOfficeDetails) HasOfficeName() bool {
	if o != nil && !IsNil(o.OfficeName) {
		return true
	}

	return false
}

// SetOfficeName gets a reference to the given string and assigns it to the OfficeName field.
func (o *ResponseKafkaOfficeDetails) SetOfficeName(v string) {
	o.OfficeName = &v
}

// GetOfficeTypeCode returns the OfficeTypeCode field value if set, zero value otherwise.
func (o *ResponseKafkaOfficeDetails) GetOfficeTypeCode() string {
	if o == nil || IsNil(o.OfficeTypeCode) {
		var ret string
		return ret
	}
	return *o.OfficeTypeCode
}

// GetOfficeTypeCodeOk returns a tuple with the OfficeTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseKafkaOfficeDetails) GetOfficeTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeTypeCode) {
		return nil, false
	}
	return o.OfficeTypeCode, true
}

// HasOfficeTypeCode returns a boolean if a field has been set.
func (o *ResponseKafkaOfficeDetails) HasOfficeTypeCode() bool {
	if o != nil && !IsNil(o.OfficeTypeCode) {
		return true
	}

	return false
}

// SetOfficeTypeCode gets a reference to the given string and assigns it to the OfficeTypeCode field.
func (o *ResponseKafkaOfficeDetails) SetOfficeTypeCode(v string) {
	o.OfficeTypeCode = &v
}

func (o ResponseKafkaOfficeDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseKafkaOfficeDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.OfficeName) {
		toSerialize["office_name"] = o.OfficeName
	}
	if !IsNil(o.OfficeTypeCode) {
		toSerialize["office_type_code"] = o.OfficeTypeCode
	}
	return toSerialize, nil
}

type NullableResponseKafkaOfficeDetails struct {
	value *ResponseKafkaOfficeDetails
	isSet bool
}

func (v NullableResponseKafkaOfficeDetails) Get() *ResponseKafkaOfficeDetails {
	return v.value
}

func (v *NullableResponseKafkaOfficeDetails) Set(val *ResponseKafkaOfficeDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseKafkaOfficeDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseKafkaOfficeDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseKafkaOfficeDetails(val *ResponseKafkaOfficeDetails) *NullableResponseKafkaOfficeDetails {
	return &NullableResponseKafkaOfficeDetails{value: val, isSet: true}
}

func (v NullableResponseKafkaOfficeDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseKafkaOfficeDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


