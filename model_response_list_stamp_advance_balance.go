/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseListStampAdvanceBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseListStampAdvanceBalance{}

// ResponseListStampAdvanceBalance struct for ResponseListStampAdvanceBalance
type ResponseListStampAdvanceBalance struct {
	AdvanceIssued *float32 `json:"advance_issued,omitempty"`
	AmountRealized *float32 `json:"amount_realized,omitempty"`
	BalanceDetails *map[string]int32 `json:"balance_details,omitempty"`
	ClosingBalance *float32 `json:"closing_balance,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	OpeningBalance *float32 `json:"opening_balance,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	StampDetailsDesc []ResponseStampdetails `json:"stampDetailsDesc,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty"`
}

// NewResponseListStampAdvanceBalance instantiates a new ResponseListStampAdvanceBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseListStampAdvanceBalance() *ResponseListStampAdvanceBalance {
	this := ResponseListStampAdvanceBalance{}
	return &this
}

// NewResponseListStampAdvanceBalanceWithDefaults instantiates a new ResponseListStampAdvanceBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseListStampAdvanceBalanceWithDefaults() *ResponseListStampAdvanceBalance {
	this := ResponseListStampAdvanceBalance{}
	return &this
}

// GetAdvanceIssued returns the AdvanceIssued field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetAdvanceIssued() float32 {
	if o == nil || IsNil(o.AdvanceIssued) {
		var ret float32
		return ret
	}
	return *o.AdvanceIssued
}

// GetAdvanceIssuedOk returns a tuple with the AdvanceIssued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetAdvanceIssuedOk() (*float32, bool) {
	if o == nil || IsNil(o.AdvanceIssued) {
		return nil, false
	}
	return o.AdvanceIssued, true
}

// HasAdvanceIssued returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasAdvanceIssued() bool {
	if o != nil && !IsNil(o.AdvanceIssued) {
		return true
	}

	return false
}

// SetAdvanceIssued gets a reference to the given float32 and assigns it to the AdvanceIssued field.
func (o *ResponseListStampAdvanceBalance) SetAdvanceIssued(v float32) {
	o.AdvanceIssued = &v
}

// GetAmountRealized returns the AmountRealized field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetAmountRealized() float32 {
	if o == nil || IsNil(o.AmountRealized) {
		var ret float32
		return ret
	}
	return *o.AmountRealized
}

// GetAmountRealizedOk returns a tuple with the AmountRealized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetAmountRealizedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountRealized) {
		return nil, false
	}
	return o.AmountRealized, true
}

// HasAmountRealized returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasAmountRealized() bool {
	if o != nil && !IsNil(o.AmountRealized) {
		return true
	}

	return false
}

// SetAmountRealized gets a reference to the given float32 and assigns it to the AmountRealized field.
func (o *ResponseListStampAdvanceBalance) SetAmountRealized(v float32) {
	o.AmountRealized = &v
}

// GetBalanceDetails returns the BalanceDetails field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetBalanceDetails() map[string]int32 {
	if o == nil || IsNil(o.BalanceDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.BalanceDetails
}

// GetBalanceDetailsOk returns a tuple with the BalanceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetBalanceDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.BalanceDetails) {
		return nil, false
	}
	return o.BalanceDetails, true
}

// HasBalanceDetails returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasBalanceDetails() bool {
	if o != nil && !IsNil(o.BalanceDetails) {
		return true
	}

	return false
}

// SetBalanceDetails gets a reference to the given map[string]int32 and assigns it to the BalanceDetails field.
func (o *ResponseListStampAdvanceBalance) SetBalanceDetails(v map[string]int32) {
	o.BalanceDetails = &v
}

// GetClosingBalance returns the ClosingBalance field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetClosingBalance() float32 {
	if o == nil || IsNil(o.ClosingBalance) {
		var ret float32
		return ret
	}
	return *o.ClosingBalance
}

// GetClosingBalanceOk returns a tuple with the ClosingBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetClosingBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.ClosingBalance) {
		return nil, false
	}
	return o.ClosingBalance, true
}

// HasClosingBalance returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasClosingBalance() bool {
	if o != nil && !IsNil(o.ClosingBalance) {
		return true
	}

	return false
}

// SetClosingBalance gets a reference to the given float32 and assigns it to the ClosingBalance field.
func (o *ResponseListStampAdvanceBalance) SetClosingBalance(v float32) {
	o.ClosingBalance = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseListStampAdvanceBalance) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetOpeningBalance returns the OpeningBalance field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetOpeningBalance() float32 {
	if o == nil || IsNil(o.OpeningBalance) {
		var ret float32
		return ret
	}
	return *o.OpeningBalance
}

// GetOpeningBalanceOk returns a tuple with the OpeningBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetOpeningBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.OpeningBalance) {
		return nil, false
	}
	return o.OpeningBalance, true
}

// HasOpeningBalance returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasOpeningBalance() bool {
	if o != nil && !IsNil(o.OpeningBalance) {
		return true
	}

	return false
}

// SetOpeningBalance gets a reference to the given float32 and assigns it to the OpeningBalance field.
func (o *ResponseListStampAdvanceBalance) SetOpeningBalance(v float32) {
	o.OpeningBalance = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseListStampAdvanceBalance) SetRemarks(v string) {
	o.Remarks = &v
}

// GetStampDetailsDesc returns the StampDetailsDesc field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetStampDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.StampDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.StampDetailsDesc
}

// GetStampDetailsDescOk returns a tuple with the StampDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetStampDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.StampDetailsDesc) {
		return nil, false
	}
	return o.StampDetailsDesc, true
}

// HasStampDetailsDesc returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasStampDetailsDesc() bool {
	if o != nil && !IsNil(o.StampDetailsDesc) {
		return true
	}

	return false
}

// SetStampDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the StampDetailsDesc field.
func (o *ResponseListStampAdvanceBalance) SetStampDetailsDesc(v []ResponseStampdetails) {
	o.StampDetailsDesc = v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseListStampAdvanceBalance) SetTransDate(v string) {
	o.TransDate = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ResponseListStampAdvanceBalance) SetUserId(v int32) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ResponseListStampAdvanceBalance) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseListStampAdvanceBalance) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ResponseListStampAdvanceBalance) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ResponseListStampAdvanceBalance) SetUserName(v string) {
	o.UserName = &v
}

func (o ResponseListStampAdvanceBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseListStampAdvanceBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvanceIssued) {
		toSerialize["advance_issued"] = o.AdvanceIssued
	}
	if !IsNil(o.AmountRealized) {
		toSerialize["amount_realized"] = o.AmountRealized
	}
	if !IsNil(o.BalanceDetails) {
		toSerialize["balance_details"] = o.BalanceDetails
	}
	if !IsNil(o.ClosingBalance) {
		toSerialize["closing_balance"] = o.ClosingBalance
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.OpeningBalance) {
		toSerialize["opening_balance"] = o.OpeningBalance
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.StampDetailsDesc) {
		toSerialize["stampDetailsDesc"] = o.StampDetailsDesc
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableResponseListStampAdvanceBalance struct {
	value *ResponseListStampAdvanceBalance
	isSet bool
}

func (v NullableResponseListStampAdvanceBalance) Get() *ResponseListStampAdvanceBalance {
	return v.value
}

func (v *NullableResponseListStampAdvanceBalance) Set(val *ResponseListStampAdvanceBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseListStampAdvanceBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseListStampAdvanceBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseListStampAdvanceBalance(val *ResponseListStampAdvanceBalance) *NullableResponseListStampAdvanceBalance {
	return &NullableResponseListStampAdvanceBalance{value: val, isSet: true}
}

func (v NullableResponseListStampAdvanceBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseListStampAdvanceBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


