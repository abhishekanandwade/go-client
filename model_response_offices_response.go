/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseOfficesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseOfficesResponse{}

// ResponseOfficesResponse struct for ResponseOfficesResponse
type ResponseOfficesResponse struct {
	BankCreditLimit *float32 `json:"bank_credit_limit,omitempty"`
	BankId *string `json:"bank_id,omitempty"`
	CashOfficeId *int32 `json:"cash_office_id,omitempty"`
	CashOfficeName *string `json:"cash_office_name,omitempty"`
	CounterCashTfrLimit *float32 `json:"counter_cash_tfr_limit,omitempty"`
	EnteredBy *string `json:"entered_by,omitempty"`
	EntryDate *string `json:"entry_date,omitempty"`
	MaxAmt *float32 `json:"max_amt,omitempty"`
	MinAmt *float32 `json:"min_amt,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	OfficeName *string `json:"office_name,omitempty"`
	PostageStampsLimit *float32 `json:"postage_stamps_limit,omitempty"`
	RevenueStampsLimit *float32 `json:"revenue_stamps_limit,omitempty"`
	TranId *string `json:"tran_id,omitempty"`
	TransitDuration *int32 `json:"transit_duration,omitempty"`
	UpdateDate *string `json:"update_date,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
	ValidFrom *string `json:"valid_from,omitempty"`
	ValidTo *string `json:"valid_to,omitempty"`
}

// NewResponseOfficesResponse instantiates a new ResponseOfficesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseOfficesResponse() *ResponseOfficesResponse {
	this := ResponseOfficesResponse{}
	return &this
}

// NewResponseOfficesResponseWithDefaults instantiates a new ResponseOfficesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseOfficesResponseWithDefaults() *ResponseOfficesResponse {
	this := ResponseOfficesResponse{}
	return &this
}

// GetBankCreditLimit returns the BankCreditLimit field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetBankCreditLimit() float32 {
	if o == nil || IsNil(o.BankCreditLimit) {
		var ret float32
		return ret
	}
	return *o.BankCreditLimit
}

// GetBankCreditLimitOk returns a tuple with the BankCreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetBankCreditLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.BankCreditLimit) {
		return nil, false
	}
	return o.BankCreditLimit, true
}

// HasBankCreditLimit returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasBankCreditLimit() bool {
	if o != nil && !IsNil(o.BankCreditLimit) {
		return true
	}

	return false
}

// SetBankCreditLimit gets a reference to the given float32 and assigns it to the BankCreditLimit field.
func (o *ResponseOfficesResponse) SetBankCreditLimit(v float32) {
	o.BankCreditLimit = &v
}

// GetBankId returns the BankId field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetBankId() string {
	if o == nil || IsNil(o.BankId) {
		var ret string
		return ret
	}
	return *o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetBankIdOk() (*string, bool) {
	if o == nil || IsNil(o.BankId) {
		return nil, false
	}
	return o.BankId, true
}

// HasBankId returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasBankId() bool {
	if o != nil && !IsNil(o.BankId) {
		return true
	}

	return false
}

// SetBankId gets a reference to the given string and assigns it to the BankId field.
func (o *ResponseOfficesResponse) SetBankId(v string) {
	o.BankId = &v
}

// GetCashOfficeId returns the CashOfficeId field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetCashOfficeId() int32 {
	if o == nil || IsNil(o.CashOfficeId) {
		var ret int32
		return ret
	}
	return *o.CashOfficeId
}

// GetCashOfficeIdOk returns a tuple with the CashOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetCashOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CashOfficeId) {
		return nil, false
	}
	return o.CashOfficeId, true
}

// HasCashOfficeId returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasCashOfficeId() bool {
	if o != nil && !IsNil(o.CashOfficeId) {
		return true
	}

	return false
}

// SetCashOfficeId gets a reference to the given int32 and assigns it to the CashOfficeId field.
func (o *ResponseOfficesResponse) SetCashOfficeId(v int32) {
	o.CashOfficeId = &v
}

// GetCashOfficeName returns the CashOfficeName field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetCashOfficeName() string {
	if o == nil || IsNil(o.CashOfficeName) {
		var ret string
		return ret
	}
	return *o.CashOfficeName
}

// GetCashOfficeNameOk returns a tuple with the CashOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetCashOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.CashOfficeName) {
		return nil, false
	}
	return o.CashOfficeName, true
}

// HasCashOfficeName returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasCashOfficeName() bool {
	if o != nil && !IsNil(o.CashOfficeName) {
		return true
	}

	return false
}

// SetCashOfficeName gets a reference to the given string and assigns it to the CashOfficeName field.
func (o *ResponseOfficesResponse) SetCashOfficeName(v string) {
	o.CashOfficeName = &v
}

// GetCounterCashTfrLimit returns the CounterCashTfrLimit field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetCounterCashTfrLimit() float32 {
	if o == nil || IsNil(o.CounterCashTfrLimit) {
		var ret float32
		return ret
	}
	return *o.CounterCashTfrLimit
}

// GetCounterCashTfrLimitOk returns a tuple with the CounterCashTfrLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetCounterCashTfrLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.CounterCashTfrLimit) {
		return nil, false
	}
	return o.CounterCashTfrLimit, true
}

// HasCounterCashTfrLimit returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasCounterCashTfrLimit() bool {
	if o != nil && !IsNil(o.CounterCashTfrLimit) {
		return true
	}

	return false
}

// SetCounterCashTfrLimit gets a reference to the given float32 and assigns it to the CounterCashTfrLimit field.
func (o *ResponseOfficesResponse) SetCounterCashTfrLimit(v float32) {
	o.CounterCashTfrLimit = &v
}

// GetEnteredBy returns the EnteredBy field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetEnteredBy() string {
	if o == nil || IsNil(o.EnteredBy) {
		var ret string
		return ret
	}
	return *o.EnteredBy
}

// GetEnteredByOk returns a tuple with the EnteredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetEnteredByOk() (*string, bool) {
	if o == nil || IsNil(o.EnteredBy) {
		return nil, false
	}
	return o.EnteredBy, true
}

// HasEnteredBy returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasEnteredBy() bool {
	if o != nil && !IsNil(o.EnteredBy) {
		return true
	}

	return false
}

// SetEnteredBy gets a reference to the given string and assigns it to the EnteredBy field.
func (o *ResponseOfficesResponse) SetEnteredBy(v string) {
	o.EnteredBy = &v
}

// GetEntryDate returns the EntryDate field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetEntryDate() string {
	if o == nil || IsNil(o.EntryDate) {
		var ret string
		return ret
	}
	return *o.EntryDate
}

// GetEntryDateOk returns a tuple with the EntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetEntryDateOk() (*string, bool) {
	if o == nil || IsNil(o.EntryDate) {
		return nil, false
	}
	return o.EntryDate, true
}

// HasEntryDate returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasEntryDate() bool {
	if o != nil && !IsNil(o.EntryDate) {
		return true
	}

	return false
}

// SetEntryDate gets a reference to the given string and assigns it to the EntryDate field.
func (o *ResponseOfficesResponse) SetEntryDate(v string) {
	o.EntryDate = &v
}

// GetMaxAmt returns the MaxAmt field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetMaxAmt() float32 {
	if o == nil || IsNil(o.MaxAmt) {
		var ret float32
		return ret
	}
	return *o.MaxAmt
}

// GetMaxAmtOk returns a tuple with the MaxAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetMaxAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxAmt) {
		return nil, false
	}
	return o.MaxAmt, true
}

// HasMaxAmt returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasMaxAmt() bool {
	if o != nil && !IsNil(o.MaxAmt) {
		return true
	}

	return false
}

// SetMaxAmt gets a reference to the given float32 and assigns it to the MaxAmt field.
func (o *ResponseOfficesResponse) SetMaxAmt(v float32) {
	o.MaxAmt = &v
}

// GetMinAmt returns the MinAmt field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetMinAmt() float32 {
	if o == nil || IsNil(o.MinAmt) {
		var ret float32
		return ret
	}
	return *o.MinAmt
}

// GetMinAmtOk returns a tuple with the MinAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetMinAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.MinAmt) {
		return nil, false
	}
	return o.MinAmt, true
}

// HasMinAmt returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasMinAmt() bool {
	if o != nil && !IsNil(o.MinAmt) {
		return true
	}

	return false
}

// SetMinAmt gets a reference to the given float32 and assigns it to the MinAmt field.
func (o *ResponseOfficesResponse) SetMinAmt(v float32) {
	o.MinAmt = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseOfficesResponse) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetOfficeName returns the OfficeName field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetOfficeName() string {
	if o == nil || IsNil(o.OfficeName) {
		var ret string
		return ret
	}
	return *o.OfficeName
}

// GetOfficeNameOk returns a tuple with the OfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.OfficeName) {
		return nil, false
	}
	return o.OfficeName, true
}

// HasOfficeName returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasOfficeName() bool {
	if o != nil && !IsNil(o.OfficeName) {
		return true
	}

	return false
}

// SetOfficeName gets a reference to the given string and assigns it to the OfficeName field.
func (o *ResponseOfficesResponse) SetOfficeName(v string) {
	o.OfficeName = &v
}

// GetPostageStampsLimit returns the PostageStampsLimit field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetPostageStampsLimit() float32 {
	if o == nil || IsNil(o.PostageStampsLimit) {
		var ret float32
		return ret
	}
	return *o.PostageStampsLimit
}

// GetPostageStampsLimitOk returns a tuple with the PostageStampsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetPostageStampsLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.PostageStampsLimit) {
		return nil, false
	}
	return o.PostageStampsLimit, true
}

// HasPostageStampsLimit returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasPostageStampsLimit() bool {
	if o != nil && !IsNil(o.PostageStampsLimit) {
		return true
	}

	return false
}

// SetPostageStampsLimit gets a reference to the given float32 and assigns it to the PostageStampsLimit field.
func (o *ResponseOfficesResponse) SetPostageStampsLimit(v float32) {
	o.PostageStampsLimit = &v
}

// GetRevenueStampsLimit returns the RevenueStampsLimit field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetRevenueStampsLimit() float32 {
	if o == nil || IsNil(o.RevenueStampsLimit) {
		var ret float32
		return ret
	}
	return *o.RevenueStampsLimit
}

// GetRevenueStampsLimitOk returns a tuple with the RevenueStampsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetRevenueStampsLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.RevenueStampsLimit) {
		return nil, false
	}
	return o.RevenueStampsLimit, true
}

// HasRevenueStampsLimit returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasRevenueStampsLimit() bool {
	if o != nil && !IsNil(o.RevenueStampsLimit) {
		return true
	}

	return false
}

// SetRevenueStampsLimit gets a reference to the given float32 and assigns it to the RevenueStampsLimit field.
func (o *ResponseOfficesResponse) SetRevenueStampsLimit(v float32) {
	o.RevenueStampsLimit = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetTranId() string {
	if o == nil || IsNil(o.TranId) {
		var ret string
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given string and assigns it to the TranId field.
func (o *ResponseOfficesResponse) SetTranId(v string) {
	o.TranId = &v
}

// GetTransitDuration returns the TransitDuration field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetTransitDuration() int32 {
	if o == nil || IsNil(o.TransitDuration) {
		var ret int32
		return ret
	}
	return *o.TransitDuration
}

// GetTransitDurationOk returns a tuple with the TransitDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetTransitDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.TransitDuration) {
		return nil, false
	}
	return o.TransitDuration, true
}

// HasTransitDuration returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasTransitDuration() bool {
	if o != nil && !IsNil(o.TransitDuration) {
		return true
	}

	return false
}

// SetTransitDuration gets a reference to the given int32 and assigns it to the TransitDuration field.
func (o *ResponseOfficesResponse) SetTransitDuration(v int32) {
	o.TransitDuration = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetUpdateDate() string {
	if o == nil || IsNil(o.UpdateDate) {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetUpdateDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *ResponseOfficesResponse) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *ResponseOfficesResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetValidFrom() string {
	if o == nil || IsNil(o.ValidFrom) {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetValidFromOk() (*string, bool) {
	if o == nil || IsNil(o.ValidFrom) {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasValidFrom() bool {
	if o != nil && !IsNil(o.ValidFrom) {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *ResponseOfficesResponse) SetValidFrom(v string) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *ResponseOfficesResponse) GetValidTo() string {
	if o == nil || IsNil(o.ValidTo) {
		var ret string
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOfficesResponse) GetValidToOk() (*string, bool) {
	if o == nil || IsNil(o.ValidTo) {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *ResponseOfficesResponse) HasValidTo() bool {
	if o != nil && !IsNil(o.ValidTo) {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given string and assigns it to the ValidTo field.
func (o *ResponseOfficesResponse) SetValidTo(v string) {
	o.ValidTo = &v
}

func (o ResponseOfficesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseOfficesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankCreditLimit) {
		toSerialize["bank_credit_limit"] = o.BankCreditLimit
	}
	if !IsNil(o.BankId) {
		toSerialize["bank_id"] = o.BankId
	}
	if !IsNil(o.CashOfficeId) {
		toSerialize["cash_office_id"] = o.CashOfficeId
	}
	if !IsNil(o.CashOfficeName) {
		toSerialize["cash_office_name"] = o.CashOfficeName
	}
	if !IsNil(o.CounterCashTfrLimit) {
		toSerialize["counter_cash_tfr_limit"] = o.CounterCashTfrLimit
	}
	if !IsNil(o.EnteredBy) {
		toSerialize["entered_by"] = o.EnteredBy
	}
	if !IsNil(o.EntryDate) {
		toSerialize["entry_date"] = o.EntryDate
	}
	if !IsNil(o.MaxAmt) {
		toSerialize["max_amt"] = o.MaxAmt
	}
	if !IsNil(o.MinAmt) {
		toSerialize["min_amt"] = o.MinAmt
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.OfficeName) {
		toSerialize["office_name"] = o.OfficeName
	}
	if !IsNil(o.PostageStampsLimit) {
		toSerialize["postage_stamps_limit"] = o.PostageStampsLimit
	}
	if !IsNil(o.RevenueStampsLimit) {
		toSerialize["revenue_stamps_limit"] = o.RevenueStampsLimit
	}
	if !IsNil(o.TranId) {
		toSerialize["tran_id"] = o.TranId
	}
	if !IsNil(o.TransitDuration) {
		toSerialize["transit_duration"] = o.TransitDuration
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["update_date"] = o.UpdateDate
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.ValidFrom) {
		toSerialize["valid_from"] = o.ValidFrom
	}
	if !IsNil(o.ValidTo) {
		toSerialize["valid_to"] = o.ValidTo
	}
	return toSerialize, nil
}

type NullableResponseOfficesResponse struct {
	value *ResponseOfficesResponse
	isSet bool
}

func (v NullableResponseOfficesResponse) Get() *ResponseOfficesResponse {
	return v.value
}

func (v *NullableResponseOfficesResponse) Set(val *ResponseOfficesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseOfficesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseOfficesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseOfficesResponse(val *ResponseOfficesResponse) *NullableResponseOfficesResponse {
	return &NullableResponseOfficesResponse{value: val, isSet: true}
}

func (v NullableResponseOfficesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseOfficesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


