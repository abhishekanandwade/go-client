/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponsePaymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePaymentDetails{}

// ResponsePaymentDetails struct for ResponsePaymentDetails
type ResponsePaymentDetails struct {
	Remarks *string `json:"remarks,omitempty"`
	TransAmount *float32 `json:"trans_amount,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransMode *string `json:"trans_mode,omitempty"`
	Transdate *string `json:"transdate,omitempty"`
}

// NewResponsePaymentDetails instantiates a new ResponsePaymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePaymentDetails() *ResponsePaymentDetails {
	this := ResponsePaymentDetails{}
	return &this
}

// NewResponsePaymentDetailsWithDefaults instantiates a new ResponsePaymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePaymentDetailsWithDefaults() *ResponsePaymentDetails {
	this := ResponsePaymentDetails{}
	return &this
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponsePaymentDetails) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePaymentDetails) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponsePaymentDetails) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponsePaymentDetails) SetRemarks(v string) {
	o.Remarks = &v
}

// GetTransAmount returns the TransAmount field value if set, zero value otherwise.
func (o *ResponsePaymentDetails) GetTransAmount() float32 {
	if o == nil || IsNil(o.TransAmount) {
		var ret float32
		return ret
	}
	return *o.TransAmount
}

// GetTransAmountOk returns a tuple with the TransAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePaymentDetails) GetTransAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TransAmount) {
		return nil, false
	}
	return o.TransAmount, true
}

// HasTransAmount returns a boolean if a field has been set.
func (o *ResponsePaymentDetails) HasTransAmount() bool {
	if o != nil && !IsNil(o.TransAmount) {
		return true
	}

	return false
}

// SetTransAmount gets a reference to the given float32 and assigns it to the TransAmount field.
func (o *ResponsePaymentDetails) SetTransAmount(v float32) {
	o.TransAmount = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponsePaymentDetails) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePaymentDetails) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponsePaymentDetails) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponsePaymentDetails) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransMode returns the TransMode field value if set, zero value otherwise.
func (o *ResponsePaymentDetails) GetTransMode() string {
	if o == nil || IsNil(o.TransMode) {
		var ret string
		return ret
	}
	return *o.TransMode
}

// GetTransModeOk returns a tuple with the TransMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePaymentDetails) GetTransModeOk() (*string, bool) {
	if o == nil || IsNil(o.TransMode) {
		return nil, false
	}
	return o.TransMode, true
}

// HasTransMode returns a boolean if a field has been set.
func (o *ResponsePaymentDetails) HasTransMode() bool {
	if o != nil && !IsNil(o.TransMode) {
		return true
	}

	return false
}

// SetTransMode gets a reference to the given string and assigns it to the TransMode field.
func (o *ResponsePaymentDetails) SetTransMode(v string) {
	o.TransMode = &v
}

// GetTransdate returns the Transdate field value if set, zero value otherwise.
func (o *ResponsePaymentDetails) GetTransdate() string {
	if o == nil || IsNil(o.Transdate) {
		var ret string
		return ret
	}
	return *o.Transdate
}

// GetTransdateOk returns a tuple with the Transdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePaymentDetails) GetTransdateOk() (*string, bool) {
	if o == nil || IsNil(o.Transdate) {
		return nil, false
	}
	return o.Transdate, true
}

// HasTransdate returns a boolean if a field has been set.
func (o *ResponsePaymentDetails) HasTransdate() bool {
	if o != nil && !IsNil(o.Transdate) {
		return true
	}

	return false
}

// SetTransdate gets a reference to the given string and assigns it to the Transdate field.
func (o *ResponsePaymentDetails) SetTransdate(v string) {
	o.Transdate = &v
}

func (o ResponsePaymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePaymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.TransAmount) {
		toSerialize["trans_amount"] = o.TransAmount
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransMode) {
		toSerialize["trans_mode"] = o.TransMode
	}
	if !IsNil(o.Transdate) {
		toSerialize["transdate"] = o.Transdate
	}
	return toSerialize, nil
}

type NullableResponsePaymentDetails struct {
	value *ResponsePaymentDetails
	isSet bool
}

func (v NullableResponsePaymentDetails) Get() *ResponsePaymentDetails {
	return v.value
}

func (v *NullableResponsePaymentDetails) Set(val *ResponsePaymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePaymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePaymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePaymentDetails(val *ResponsePaymentDetails) *NullableResponsePaymentDetails {
	return &NullableResponsePaymentDetails{value: val, isSet: true}
}

func (v NullableResponsePaymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePaymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


