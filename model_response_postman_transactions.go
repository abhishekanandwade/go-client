/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponsePostmanTransactions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePostmanTransactions{}

// ResponsePostmanTransactions struct for ResponsePostmanTransactions
type ResponsePostmanTransactions struct {
	IssApprover *string `json:"iss_approver,omitempty"`
	IssUser *string `json:"iss_user,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	ReqAmount *float32 `json:"req_amount,omitempty"`
	ReqUser *string `json:"req_user,omitempty"`
	RequestType *string `json:"request_type,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
}

// NewResponsePostmanTransactions instantiates a new ResponsePostmanTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePostmanTransactions() *ResponsePostmanTransactions {
	this := ResponsePostmanTransactions{}
	return &this
}

// NewResponsePostmanTransactionsWithDefaults instantiates a new ResponsePostmanTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePostmanTransactionsWithDefaults() *ResponsePostmanTransactions {
	this := ResponsePostmanTransactions{}
	return &this
}

// GetIssApprover returns the IssApprover field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetIssApprover() string {
	if o == nil || IsNil(o.IssApprover) {
		var ret string
		return ret
	}
	return *o.IssApprover
}

// GetIssApproverOk returns a tuple with the IssApprover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetIssApproverOk() (*string, bool) {
	if o == nil || IsNil(o.IssApprover) {
		return nil, false
	}
	return o.IssApprover, true
}

// HasIssApprover returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasIssApprover() bool {
	if o != nil && !IsNil(o.IssApprover) {
		return true
	}

	return false
}

// SetIssApprover gets a reference to the given string and assigns it to the IssApprover field.
func (o *ResponsePostmanTransactions) SetIssApprover(v string) {
	o.IssApprover = &v
}

// GetIssUser returns the IssUser field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetIssUser() string {
	if o == nil || IsNil(o.IssUser) {
		var ret string
		return ret
	}
	return *o.IssUser
}

// GetIssUserOk returns a tuple with the IssUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetIssUserOk() (*string, bool) {
	if o == nil || IsNil(o.IssUser) {
		return nil, false
	}
	return o.IssUser, true
}

// HasIssUser returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasIssUser() bool {
	if o != nil && !IsNil(o.IssUser) {
		return true
	}

	return false
}

// SetIssUser gets a reference to the given string and assigns it to the IssUser field.
func (o *ResponsePostmanTransactions) SetIssUser(v string) {
	o.IssUser = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponsePostmanTransactions) SetRemarks(v string) {
	o.Remarks = &v
}

// GetReqAmount returns the ReqAmount field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetReqAmount() float32 {
	if o == nil || IsNil(o.ReqAmount) {
		var ret float32
		return ret
	}
	return *o.ReqAmount
}

// GetReqAmountOk returns a tuple with the ReqAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetReqAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ReqAmount) {
		return nil, false
	}
	return o.ReqAmount, true
}

// HasReqAmount returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasReqAmount() bool {
	if o != nil && !IsNil(o.ReqAmount) {
		return true
	}

	return false
}

// SetReqAmount gets a reference to the given float32 and assigns it to the ReqAmount field.
func (o *ResponsePostmanTransactions) SetReqAmount(v float32) {
	o.ReqAmount = &v
}

// GetReqUser returns the ReqUser field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetReqUser() string {
	if o == nil || IsNil(o.ReqUser) {
		var ret string
		return ret
	}
	return *o.ReqUser
}

// GetReqUserOk returns a tuple with the ReqUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetReqUserOk() (*string, bool) {
	if o == nil || IsNil(o.ReqUser) {
		return nil, false
	}
	return o.ReqUser, true
}

// HasReqUser returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasReqUser() bool {
	if o != nil && !IsNil(o.ReqUser) {
		return true
	}

	return false
}

// SetReqUser gets a reference to the given string and assigns it to the ReqUser field.
func (o *ResponsePostmanTransactions) SetReqUser(v string) {
	o.ReqUser = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *ResponsePostmanTransactions) SetRequestType(v string) {
	o.RequestType = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponsePostmanTransactions) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePostmanTransactions) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponsePostmanTransactions) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponsePostmanTransactions) SetTransDate(v string) {
	o.TransDate = &v
}

func (o ResponsePostmanTransactions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePostmanTransactions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssApprover) {
		toSerialize["iss_approver"] = o.IssApprover
	}
	if !IsNil(o.IssUser) {
		toSerialize["iss_user"] = o.IssUser
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.ReqAmount) {
		toSerialize["req_amount"] = o.ReqAmount
	}
	if !IsNil(o.ReqUser) {
		toSerialize["req_user"] = o.ReqUser
	}
	if !IsNil(o.RequestType) {
		toSerialize["request_type"] = o.RequestType
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	return toSerialize, nil
}

type NullableResponsePostmanTransactions struct {
	value *ResponsePostmanTransactions
	isSet bool
}

func (v NullableResponsePostmanTransactions) Get() *ResponsePostmanTransactions {
	return v.value
}

func (v *NullableResponsePostmanTransactions) Set(val *ResponsePostmanTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePostmanTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePostmanTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePostmanTransactions(val *ResponsePostmanTransactions) *NullableResponsePostmanTransactions {
	return &NullableResponsePostmanTransactions{value: val, isSet: true}
}

func (v NullableResponsePostmanTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePostmanTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


