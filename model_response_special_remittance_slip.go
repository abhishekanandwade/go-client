/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseSpecialRemittanceSlip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseSpecialRemittanceSlip{}

// ResponseSpecialRemittanceSlip struct for ResponseSpecialRemittanceSlip
type ResponseSpecialRemittanceSlip struct {
	CurrencyDetails []ResponseCurrencyDetails `json:"currency_details,omitempty"`
	EmployeeName1 *string `json:"employee_name1,omitempty"`
	EmployeeName2 *string `json:"employee_name2,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	RemittanceId *string `json:"remittance_id,omitempty"`
	ReqApproverAmt *float32 `json:"req_approver_amt,omitempty"`
	ToOffice *string `json:"to_office,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
}

// NewResponseSpecialRemittanceSlip instantiates a new ResponseSpecialRemittanceSlip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseSpecialRemittanceSlip() *ResponseSpecialRemittanceSlip {
	this := ResponseSpecialRemittanceSlip{}
	return &this
}

// NewResponseSpecialRemittanceSlipWithDefaults instantiates a new ResponseSpecialRemittanceSlip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseSpecialRemittanceSlipWithDefaults() *ResponseSpecialRemittanceSlip {
	this := ResponseSpecialRemittanceSlip{}
	return &this
}

// GetCurrencyDetails returns the CurrencyDetails field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetCurrencyDetails() []ResponseCurrencyDetails {
	if o == nil || IsNil(o.CurrencyDetails) {
		var ret []ResponseCurrencyDetails
		return ret
	}
	return o.CurrencyDetails
}

// GetCurrencyDetailsOk returns a tuple with the CurrencyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetCurrencyDetailsOk() ([]ResponseCurrencyDetails, bool) {
	if o == nil || IsNil(o.CurrencyDetails) {
		return nil, false
	}
	return o.CurrencyDetails, true
}

// HasCurrencyDetails returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasCurrencyDetails() bool {
	if o != nil && !IsNil(o.CurrencyDetails) {
		return true
	}

	return false
}

// SetCurrencyDetails gets a reference to the given []ResponseCurrencyDetails and assigns it to the CurrencyDetails field.
func (o *ResponseSpecialRemittanceSlip) SetCurrencyDetails(v []ResponseCurrencyDetails) {
	o.CurrencyDetails = v
}

// GetEmployeeName1 returns the EmployeeName1 field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetEmployeeName1() string {
	if o == nil || IsNil(o.EmployeeName1) {
		var ret string
		return ret
	}
	return *o.EmployeeName1
}

// GetEmployeeName1Ok returns a tuple with the EmployeeName1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetEmployeeName1Ok() (*string, bool) {
	if o == nil || IsNil(o.EmployeeName1) {
		return nil, false
	}
	return o.EmployeeName1, true
}

// HasEmployeeName1 returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasEmployeeName1() bool {
	if o != nil && !IsNil(o.EmployeeName1) {
		return true
	}

	return false
}

// SetEmployeeName1 gets a reference to the given string and assigns it to the EmployeeName1 field.
func (o *ResponseSpecialRemittanceSlip) SetEmployeeName1(v string) {
	o.EmployeeName1 = &v
}

// GetEmployeeName2 returns the EmployeeName2 field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetEmployeeName2() string {
	if o == nil || IsNil(o.EmployeeName2) {
		var ret string
		return ret
	}
	return *o.EmployeeName2
}

// GetEmployeeName2Ok returns a tuple with the EmployeeName2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetEmployeeName2Ok() (*string, bool) {
	if o == nil || IsNil(o.EmployeeName2) {
		return nil, false
	}
	return o.EmployeeName2, true
}

// HasEmployeeName2 returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasEmployeeName2() bool {
	if o != nil && !IsNil(o.EmployeeName2) {
		return true
	}

	return false
}

// SetEmployeeName2 gets a reference to the given string and assigns it to the EmployeeName2 field.
func (o *ResponseSpecialRemittanceSlip) SetEmployeeName2(v string) {
	o.EmployeeName2 = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseSpecialRemittanceSlip) SetRemarks(v string) {
	o.Remarks = &v
}

// GetRemittanceId returns the RemittanceId field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetRemittanceId() string {
	if o == nil || IsNil(o.RemittanceId) {
		var ret string
		return ret
	}
	return *o.RemittanceId
}

// GetRemittanceIdOk returns a tuple with the RemittanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetRemittanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemittanceId) {
		return nil, false
	}
	return o.RemittanceId, true
}

// HasRemittanceId returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasRemittanceId() bool {
	if o != nil && !IsNil(o.RemittanceId) {
		return true
	}

	return false
}

// SetRemittanceId gets a reference to the given string and assigns it to the RemittanceId field.
func (o *ResponseSpecialRemittanceSlip) SetRemittanceId(v string) {
	o.RemittanceId = &v
}

// GetReqApproverAmt returns the ReqApproverAmt field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetReqApproverAmt() float32 {
	if o == nil || IsNil(o.ReqApproverAmt) {
		var ret float32
		return ret
	}
	return *o.ReqApproverAmt
}

// GetReqApproverAmtOk returns a tuple with the ReqApproverAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetReqApproverAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.ReqApproverAmt) {
		return nil, false
	}
	return o.ReqApproverAmt, true
}

// HasReqApproverAmt returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasReqApproverAmt() bool {
	if o != nil && !IsNil(o.ReqApproverAmt) {
		return true
	}

	return false
}

// SetReqApproverAmt gets a reference to the given float32 and assigns it to the ReqApproverAmt field.
func (o *ResponseSpecialRemittanceSlip) SetReqApproverAmt(v float32) {
	o.ReqApproverAmt = &v
}

// GetToOffice returns the ToOffice field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetToOffice() string {
	if o == nil || IsNil(o.ToOffice) {
		var ret string
		return ret
	}
	return *o.ToOffice
}

// GetToOfficeOk returns a tuple with the ToOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetToOfficeOk() (*string, bool) {
	if o == nil || IsNil(o.ToOffice) {
		return nil, false
	}
	return o.ToOffice, true
}

// HasToOffice returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasToOffice() bool {
	if o != nil && !IsNil(o.ToOffice) {
		return true
	}

	return false
}

// SetToOffice gets a reference to the given string and assigns it to the ToOffice field.
func (o *ResponseSpecialRemittanceSlip) SetToOffice(v string) {
	o.ToOffice = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseSpecialRemittanceSlip) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSpecialRemittanceSlip) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseSpecialRemittanceSlip) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseSpecialRemittanceSlip) SetTransDate(v string) {
	o.TransDate = &v
}

func (o ResponseSpecialRemittanceSlip) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseSpecialRemittanceSlip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyDetails) {
		toSerialize["currency_details"] = o.CurrencyDetails
	}
	if !IsNil(o.EmployeeName1) {
		toSerialize["employee_name1"] = o.EmployeeName1
	}
	if !IsNil(o.EmployeeName2) {
		toSerialize["employee_name2"] = o.EmployeeName2
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.RemittanceId) {
		toSerialize["remittance_id"] = o.RemittanceId
	}
	if !IsNil(o.ReqApproverAmt) {
		toSerialize["req_approver_amt"] = o.ReqApproverAmt
	}
	if !IsNil(o.ToOffice) {
		toSerialize["to_office"] = o.ToOffice
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	return toSerialize, nil
}

type NullableResponseSpecialRemittanceSlip struct {
	value *ResponseSpecialRemittanceSlip
	isSet bool
}

func (v NullableResponseSpecialRemittanceSlip) Get() *ResponseSpecialRemittanceSlip {
	return v.value
}

func (v *NullableResponseSpecialRemittanceSlip) Set(val *ResponseSpecialRemittanceSlip) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseSpecialRemittanceSlip) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseSpecialRemittanceSlip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseSpecialRemittanceSlip(val *ResponseSpecialRemittanceSlip) *NullableResponseSpecialRemittanceSlip {
	return &NullableResponseSpecialRemittanceSlip{value: val, isSet: true}
}

func (v NullableResponseSpecialRemittanceSlip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseSpecialRemittanceSlip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


