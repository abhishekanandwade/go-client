/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampBalance{}

// ResponseStampBalance struct for ResponseStampBalance
type ResponseStampBalance struct {
	CategoryDesc *string `json:"category_desc,omitempty"`
	CategoryId *string `json:"category_id,omitempty"`
	ClosingBal *int32 `json:"closing_bal,omitempty"`
	DenominationDesc *string `json:"denomination_desc,omitempty"`
	DenominationId *string `json:"denomination_id,omitempty"`
	DenominationValue *float32 `json:"denomination_value,omitempty"`
	Issues *int32 `json:"issues,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	OpeningBal *int32 `json:"opening_bal,omitempty"`
	ProductCategory *string `json:"product_category,omitempty"`
	Receipts *int32 `json:"receipts,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
}

// NewResponseStampBalance instantiates a new ResponseStampBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampBalance() *ResponseStampBalance {
	this := ResponseStampBalance{}
	return &this
}

// NewResponseStampBalanceWithDefaults instantiates a new ResponseStampBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampBalanceWithDefaults() *ResponseStampBalance {
	this := ResponseStampBalance{}
	return &this
}

// GetCategoryDesc returns the CategoryDesc field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetCategoryDesc() string {
	if o == nil || IsNil(o.CategoryDesc) {
		var ret string
		return ret
	}
	return *o.CategoryDesc
}

// GetCategoryDescOk returns a tuple with the CategoryDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetCategoryDescOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryDesc) {
		return nil, false
	}
	return o.CategoryDesc, true
}

// HasCategoryDesc returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasCategoryDesc() bool {
	if o != nil && !IsNil(o.CategoryDesc) {
		return true
	}

	return false
}

// SetCategoryDesc gets a reference to the given string and assigns it to the CategoryDesc field.
func (o *ResponseStampBalance) SetCategoryDesc(v string) {
	o.CategoryDesc = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ResponseStampBalance) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetClosingBal returns the ClosingBal field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetClosingBal() int32 {
	if o == nil || IsNil(o.ClosingBal) {
		var ret int32
		return ret
	}
	return *o.ClosingBal
}

// GetClosingBalOk returns a tuple with the ClosingBal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetClosingBalOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosingBal) {
		return nil, false
	}
	return o.ClosingBal, true
}

// HasClosingBal returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasClosingBal() bool {
	if o != nil && !IsNil(o.ClosingBal) {
		return true
	}

	return false
}

// SetClosingBal gets a reference to the given int32 and assigns it to the ClosingBal field.
func (o *ResponseStampBalance) SetClosingBal(v int32) {
	o.ClosingBal = &v
}

// GetDenominationDesc returns the DenominationDesc field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetDenominationDesc() string {
	if o == nil || IsNil(o.DenominationDesc) {
		var ret string
		return ret
	}
	return *o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetDenominationDescOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationDesc) {
		return nil, false
	}
	return o.DenominationDesc, true
}

// HasDenominationDesc returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasDenominationDesc() bool {
	if o != nil && !IsNil(o.DenominationDesc) {
		return true
	}

	return false
}

// SetDenominationDesc gets a reference to the given string and assigns it to the DenominationDesc field.
func (o *ResponseStampBalance) SetDenominationDesc(v string) {
	o.DenominationDesc = &v
}

// GetDenominationId returns the DenominationId field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetDenominationId() string {
	if o == nil || IsNil(o.DenominationId) {
		var ret string
		return ret
	}
	return *o.DenominationId
}

// GetDenominationIdOk returns a tuple with the DenominationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetDenominationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationId) {
		return nil, false
	}
	return o.DenominationId, true
}

// HasDenominationId returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasDenominationId() bool {
	if o != nil && !IsNil(o.DenominationId) {
		return true
	}

	return false
}

// SetDenominationId gets a reference to the given string and assigns it to the DenominationId field.
func (o *ResponseStampBalance) SetDenominationId(v string) {
	o.DenominationId = &v
}

// GetDenominationValue returns the DenominationValue field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetDenominationValue() float32 {
	if o == nil || IsNil(o.DenominationValue) {
		var ret float32
		return ret
	}
	return *o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetDenominationValueOk() (*float32, bool) {
	if o == nil || IsNil(o.DenominationValue) {
		return nil, false
	}
	return o.DenominationValue, true
}

// HasDenominationValue returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasDenominationValue() bool {
	if o != nil && !IsNil(o.DenominationValue) {
		return true
	}

	return false
}

// SetDenominationValue gets a reference to the given float32 and assigns it to the DenominationValue field.
func (o *ResponseStampBalance) SetDenominationValue(v float32) {
	o.DenominationValue = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetIssues() int32 {
	if o == nil || IsNil(o.Issues) {
		var ret int32
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetIssuesOk() (*int32, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given int32 and assigns it to the Issues field.
func (o *ResponseStampBalance) SetIssues(v int32) {
	o.Issues = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseStampBalance) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetOpeningBal returns the OpeningBal field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetOpeningBal() int32 {
	if o == nil || IsNil(o.OpeningBal) {
		var ret int32
		return ret
	}
	return *o.OpeningBal
}

// GetOpeningBalOk returns a tuple with the OpeningBal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetOpeningBalOk() (*int32, bool) {
	if o == nil || IsNil(o.OpeningBal) {
		return nil, false
	}
	return o.OpeningBal, true
}

// HasOpeningBal returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasOpeningBal() bool {
	if o != nil && !IsNil(o.OpeningBal) {
		return true
	}

	return false
}

// SetOpeningBal gets a reference to the given int32 and assigns it to the OpeningBal field.
func (o *ResponseStampBalance) SetOpeningBal(v int32) {
	o.OpeningBal = &v
}

// GetProductCategory returns the ProductCategory field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetProductCategory() string {
	if o == nil || IsNil(o.ProductCategory) {
		var ret string
		return ret
	}
	return *o.ProductCategory
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetProductCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCategory) {
		return nil, false
	}
	return o.ProductCategory, true
}

// HasProductCategory returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasProductCategory() bool {
	if o != nil && !IsNil(o.ProductCategory) {
		return true
	}

	return false
}

// SetProductCategory gets a reference to the given string and assigns it to the ProductCategory field.
func (o *ResponseStampBalance) SetProductCategory(v string) {
	o.ProductCategory = &v
}

// GetReceipts returns the Receipts field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetReceipts() int32 {
	if o == nil || IsNil(o.Receipts) {
		var ret int32
		return ret
	}
	return *o.Receipts
}

// GetReceiptsOk returns a tuple with the Receipts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetReceiptsOk() (*int32, bool) {
	if o == nil || IsNil(o.Receipts) {
		return nil, false
	}
	return o.Receipts, true
}

// HasReceipts returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasReceipts() bool {
	if o != nil && !IsNil(o.Receipts) {
		return true
	}

	return false
}

// SetReceipts gets a reference to the given int32 and assigns it to the Receipts field.
func (o *ResponseStampBalance) SetReceipts(v int32) {
	o.Receipts = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseStampBalance) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampBalance) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseStampBalance) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseStampBalance) SetTransDate(v string) {
	o.TransDate = &v
}

func (o ResponseStampBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryDesc) {
		toSerialize["category_desc"] = o.CategoryDesc
	}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.ClosingBal) {
		toSerialize["closing_bal"] = o.ClosingBal
	}
	if !IsNil(o.DenominationDesc) {
		toSerialize["denomination_desc"] = o.DenominationDesc
	}
	if !IsNil(o.DenominationId) {
		toSerialize["denomination_id"] = o.DenominationId
	}
	if !IsNil(o.DenominationValue) {
		toSerialize["denomination_value"] = o.DenominationValue
	}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.OpeningBal) {
		toSerialize["opening_bal"] = o.OpeningBal
	}
	if !IsNil(o.ProductCategory) {
		toSerialize["product_category"] = o.ProductCategory
	}
	if !IsNil(o.Receipts) {
		toSerialize["receipts"] = o.Receipts
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	return toSerialize, nil
}

type NullableResponseStampBalance struct {
	value *ResponseStampBalance
	isSet bool
}

func (v NullableResponseStampBalance) Get() *ResponseStampBalance {
	return v.value
}

func (v *NullableResponseStampBalance) Set(val *ResponseStampBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampBalance(val *ResponseStampBalance) *NullableResponseStampBalance {
	return &NullableResponseStampBalance{value: val, isSet: true}
}

func (v NullableResponseStampBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


