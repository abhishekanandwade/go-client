/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampdetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampdetails{}

// ResponseStampdetails struct for ResponseStampdetails
type ResponseStampdetails struct {
	CategoryDesc *string `json:"category_desc,omitempty"`
	CategoryId *string `json:"category_id,omitempty"`
	DenominationCount *int32 `json:"denomination_count,omitempty"`
	DenominationDesc *string `json:"denomination_desc,omitempty"`
	DenominationId *string `json:"denomination_id,omitempty"`
	DenominationValue *float32 `json:"denomination_value,omitempty"`
}

// NewResponseStampdetails instantiates a new ResponseStampdetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampdetails() *ResponseStampdetails {
	this := ResponseStampdetails{}
	return &this
}

// NewResponseStampdetailsWithDefaults instantiates a new ResponseStampdetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampdetailsWithDefaults() *ResponseStampdetails {
	this := ResponseStampdetails{}
	return &this
}

// GetCategoryDesc returns the CategoryDesc field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetCategoryDesc() string {
	if o == nil || IsNil(o.CategoryDesc) {
		var ret string
		return ret
	}
	return *o.CategoryDesc
}

// GetCategoryDescOk returns a tuple with the CategoryDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetCategoryDescOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryDesc) {
		return nil, false
	}
	return o.CategoryDesc, true
}

// HasCategoryDesc returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasCategoryDesc() bool {
	if o != nil && !IsNil(o.CategoryDesc) {
		return true
	}

	return false
}

// SetCategoryDesc gets a reference to the given string and assigns it to the CategoryDesc field.
func (o *ResponseStampdetails) SetCategoryDesc(v string) {
	o.CategoryDesc = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ResponseStampdetails) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetDenominationCount returns the DenominationCount field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetDenominationCount() int32 {
	if o == nil || IsNil(o.DenominationCount) {
		var ret int32
		return ret
	}
	return *o.DenominationCount
}

// GetDenominationCountOk returns a tuple with the DenominationCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetDenominationCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DenominationCount) {
		return nil, false
	}
	return o.DenominationCount, true
}

// HasDenominationCount returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasDenominationCount() bool {
	if o != nil && !IsNil(o.DenominationCount) {
		return true
	}

	return false
}

// SetDenominationCount gets a reference to the given int32 and assigns it to the DenominationCount field.
func (o *ResponseStampdetails) SetDenominationCount(v int32) {
	o.DenominationCount = &v
}

// GetDenominationDesc returns the DenominationDesc field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetDenominationDesc() string {
	if o == nil || IsNil(o.DenominationDesc) {
		var ret string
		return ret
	}
	return *o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetDenominationDescOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationDesc) {
		return nil, false
	}
	return o.DenominationDesc, true
}

// HasDenominationDesc returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasDenominationDesc() bool {
	if o != nil && !IsNil(o.DenominationDesc) {
		return true
	}

	return false
}

// SetDenominationDesc gets a reference to the given string and assigns it to the DenominationDesc field.
func (o *ResponseStampdetails) SetDenominationDesc(v string) {
	o.DenominationDesc = &v
}

// GetDenominationId returns the DenominationId field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetDenominationId() string {
	if o == nil || IsNil(o.DenominationId) {
		var ret string
		return ret
	}
	return *o.DenominationId
}

// GetDenominationIdOk returns a tuple with the DenominationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetDenominationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationId) {
		return nil, false
	}
	return o.DenominationId, true
}

// HasDenominationId returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasDenominationId() bool {
	if o != nil && !IsNil(o.DenominationId) {
		return true
	}

	return false
}

// SetDenominationId gets a reference to the given string and assigns it to the DenominationId field.
func (o *ResponseStampdetails) SetDenominationId(v string) {
	o.DenominationId = &v
}

// GetDenominationValue returns the DenominationValue field value if set, zero value otherwise.
func (o *ResponseStampdetails) GetDenominationValue() float32 {
	if o == nil || IsNil(o.DenominationValue) {
		var ret float32
		return ret
	}
	return *o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampdetails) GetDenominationValueOk() (*float32, bool) {
	if o == nil || IsNil(o.DenominationValue) {
		return nil, false
	}
	return o.DenominationValue, true
}

// HasDenominationValue returns a boolean if a field has been set.
func (o *ResponseStampdetails) HasDenominationValue() bool {
	if o != nil && !IsNil(o.DenominationValue) {
		return true
	}

	return false
}

// SetDenominationValue gets a reference to the given float32 and assigns it to the DenominationValue field.
func (o *ResponseStampdetails) SetDenominationValue(v float32) {
	o.DenominationValue = &v
}

func (o ResponseStampdetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampdetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryDesc) {
		toSerialize["category_desc"] = o.CategoryDesc
	}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.DenominationCount) {
		toSerialize["denomination_count"] = o.DenominationCount
	}
	if !IsNil(o.DenominationDesc) {
		toSerialize["denomination_desc"] = o.DenominationDesc
	}
	if !IsNil(o.DenominationId) {
		toSerialize["denomination_id"] = o.DenominationId
	}
	if !IsNil(o.DenominationValue) {
		toSerialize["denomination_value"] = o.DenominationValue
	}
	return toSerialize, nil
}

type NullableResponseStampdetails struct {
	value *ResponseStampdetails
	isSet bool
}

func (v NullableResponseStampdetails) Get() *ResponseStampdetails {
	return v.value
}

func (v *NullableResponseStampdetails) Set(val *ResponseStampdetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampdetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampdetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampdetails(val *ResponseStampdetails) *NullableResponseStampdetails {
	return &NullableResponseStampdetails{value: val, isSet: true}
}

func (v NullableResponseStampdetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampdetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


