/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampsAdvanceTxnResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampsAdvanceTxnResponse{}

// ResponseStampsAdvanceTxnResponse struct for ResponseStampsAdvanceTxnResponse
type ResponseStampsAdvanceTxnResponse struct {
	AdvAmt *float32 `json:"adv_amt,omitempty"`
	AdvTxnDetails *map[string]int32 `json:"adv_txn_details,omitempty"`
	AdvUserId *int32 `json:"adv_user_id,omitempty"`
	ApprovedDate *string `json:"approved_date,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	StampDetailsDesc []ResponseStampdetails `json:"stampDetailsDesc,omitempty"`
	TranId *string `json:"tran_id,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
	TryApproverId *int32 `json:"try_approver_id,omitempty"`
	TryUserId *int32 `json:"try_user_id,omitempty"`
}

// NewResponseStampsAdvanceTxnResponse instantiates a new ResponseStampsAdvanceTxnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampsAdvanceTxnResponse() *ResponseStampsAdvanceTxnResponse {
	this := ResponseStampsAdvanceTxnResponse{}
	return &this
}

// NewResponseStampsAdvanceTxnResponseWithDefaults instantiates a new ResponseStampsAdvanceTxnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampsAdvanceTxnResponseWithDefaults() *ResponseStampsAdvanceTxnResponse {
	this := ResponseStampsAdvanceTxnResponse{}
	return &this
}

// GetAdvAmt returns the AdvAmt field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvAmt() float32 {
	if o == nil || IsNil(o.AdvAmt) {
		var ret float32
		return ret
	}
	return *o.AdvAmt
}

// GetAdvAmtOk returns a tuple with the AdvAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.AdvAmt) {
		return nil, false
	}
	return o.AdvAmt, true
}

// HasAdvAmt returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasAdvAmt() bool {
	if o != nil && !IsNil(o.AdvAmt) {
		return true
	}

	return false
}

// SetAdvAmt gets a reference to the given float32 and assigns it to the AdvAmt field.
func (o *ResponseStampsAdvanceTxnResponse) SetAdvAmt(v float32) {
	o.AdvAmt = &v
}

// GetAdvTxnDetails returns the AdvTxnDetails field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvTxnDetails() map[string]int32 {
	if o == nil || IsNil(o.AdvTxnDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.AdvTxnDetails
}

// GetAdvTxnDetailsOk returns a tuple with the AdvTxnDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvTxnDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.AdvTxnDetails) {
		return nil, false
	}
	return o.AdvTxnDetails, true
}

// HasAdvTxnDetails returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasAdvTxnDetails() bool {
	if o != nil && !IsNil(o.AdvTxnDetails) {
		return true
	}

	return false
}

// SetAdvTxnDetails gets a reference to the given map[string]int32 and assigns it to the AdvTxnDetails field.
func (o *ResponseStampsAdvanceTxnResponse) SetAdvTxnDetails(v map[string]int32) {
	o.AdvTxnDetails = &v
}

// GetAdvUserId returns the AdvUserId field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvUserId() int32 {
	if o == nil || IsNil(o.AdvUserId) {
		var ret int32
		return ret
	}
	return *o.AdvUserId
}

// GetAdvUserIdOk returns a tuple with the AdvUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetAdvUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AdvUserId) {
		return nil, false
	}
	return o.AdvUserId, true
}

// HasAdvUserId returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasAdvUserId() bool {
	if o != nil && !IsNil(o.AdvUserId) {
		return true
	}

	return false
}

// SetAdvUserId gets a reference to the given int32 and assigns it to the AdvUserId field.
func (o *ResponseStampsAdvanceTxnResponse) SetAdvUserId(v int32) {
	o.AdvUserId = &v
}

// GetApprovedDate returns the ApprovedDate field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetApprovedDate() string {
	if o == nil || IsNil(o.ApprovedDate) {
		var ret string
		return ret
	}
	return *o.ApprovedDate
}

// GetApprovedDateOk returns a tuple with the ApprovedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetApprovedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedDate) {
		return nil, false
	}
	return o.ApprovedDate, true
}

// HasApprovedDate returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasApprovedDate() bool {
	if o != nil && !IsNil(o.ApprovedDate) {
		return true
	}

	return false
}

// SetApprovedDate gets a reference to the given string and assigns it to the ApprovedDate field.
func (o *ResponseStampsAdvanceTxnResponse) SetApprovedDate(v string) {
	o.ApprovedDate = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *ResponseStampsAdvanceTxnResponse) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseStampsAdvanceTxnResponse) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseStampsAdvanceTxnResponse) SetRemarks(v string) {
	o.Remarks = &v
}

// GetStampDetailsDesc returns the StampDetailsDesc field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetStampDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.StampDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.StampDetailsDesc
}

// GetStampDetailsDescOk returns a tuple with the StampDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetStampDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.StampDetailsDesc) {
		return nil, false
	}
	return o.StampDetailsDesc, true
}

// HasStampDetailsDesc returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasStampDetailsDesc() bool {
	if o != nil && !IsNil(o.StampDetailsDesc) {
		return true
	}

	return false
}

// SetStampDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the StampDetailsDesc field.
func (o *ResponseStampsAdvanceTxnResponse) SetStampDetailsDesc(v []ResponseStampdetails) {
	o.StampDetailsDesc = v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetTranId() string {
	if o == nil || IsNil(o.TranId) {
		var ret string
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given string and assigns it to the TranId field.
func (o *ResponseStampsAdvanceTxnResponse) SetTranId(v string) {
	o.TranId = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseStampsAdvanceTxnResponse) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetTransType() string {
	if o == nil || IsNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetTransTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransType) {
		return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasTransType() bool {
	if o != nil && !IsNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *ResponseStampsAdvanceTxnResponse) SetTransType(v string) {
	o.TransType = &v
}

// GetTryApproverId returns the TryApproverId field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetTryApproverId() int32 {
	if o == nil || IsNil(o.TryApproverId) {
		var ret int32
		return ret
	}
	return *o.TryApproverId
}

// GetTryApproverIdOk returns a tuple with the TryApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetTryApproverIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TryApproverId) {
		return nil, false
	}
	return o.TryApproverId, true
}

// HasTryApproverId returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasTryApproverId() bool {
	if o != nil && !IsNil(o.TryApproverId) {
		return true
	}

	return false
}

// SetTryApproverId gets a reference to the given int32 and assigns it to the TryApproverId field.
func (o *ResponseStampsAdvanceTxnResponse) SetTryApproverId(v int32) {
	o.TryApproverId = &v
}

// GetTryUserId returns the TryUserId field value if set, zero value otherwise.
func (o *ResponseStampsAdvanceTxnResponse) GetTryUserId() int32 {
	if o == nil || IsNil(o.TryUserId) {
		var ret int32
		return ret
	}
	return *o.TryUserId
}

// GetTryUserIdOk returns a tuple with the TryUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsAdvanceTxnResponse) GetTryUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TryUserId) {
		return nil, false
	}
	return o.TryUserId, true
}

// HasTryUserId returns a boolean if a field has been set.
func (o *ResponseStampsAdvanceTxnResponse) HasTryUserId() bool {
	if o != nil && !IsNil(o.TryUserId) {
		return true
	}

	return false
}

// SetTryUserId gets a reference to the given int32 and assigns it to the TryUserId field.
func (o *ResponseStampsAdvanceTxnResponse) SetTryUserId(v int32) {
	o.TryUserId = &v
}

func (o ResponseStampsAdvanceTxnResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampsAdvanceTxnResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvAmt) {
		toSerialize["adv_amt"] = o.AdvAmt
	}
	if !IsNil(o.AdvTxnDetails) {
		toSerialize["adv_txn_details"] = o.AdvTxnDetails
	}
	if !IsNil(o.AdvUserId) {
		toSerialize["adv_user_id"] = o.AdvUserId
	}
	if !IsNil(o.ApprovedDate) {
		toSerialize["approved_date"] = o.ApprovedDate
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.StampDetailsDesc) {
		toSerialize["stampDetailsDesc"] = o.StampDetailsDesc
	}
	if !IsNil(o.TranId) {
		toSerialize["tran_id"] = o.TranId
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	if !IsNil(o.TryApproverId) {
		toSerialize["try_approver_id"] = o.TryApproverId
	}
	if !IsNil(o.TryUserId) {
		toSerialize["try_user_id"] = o.TryUserId
	}
	return toSerialize, nil
}

type NullableResponseStampsAdvanceTxnResponse struct {
	value *ResponseStampsAdvanceTxnResponse
	isSet bool
}

func (v NullableResponseStampsAdvanceTxnResponse) Get() *ResponseStampsAdvanceTxnResponse {
	return v.value
}

func (v *NullableResponseStampsAdvanceTxnResponse) Set(val *ResponseStampsAdvanceTxnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampsAdvanceTxnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampsAdvanceTxnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampsAdvanceTxnResponse(val *ResponseStampsAdvanceTxnResponse) *NullableResponseStampsAdvanceTxnResponse {
	return &NullableResponseStampsAdvanceTxnResponse{value: val, isSet: true}
}

func (v NullableResponseStampsAdvanceTxnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampsAdvanceTxnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


