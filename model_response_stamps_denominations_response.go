/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampsDenominationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampsDenominationsResponse{}

// ResponseStampsDenominationsResponse struct for ResponseStampsDenominationsResponse
type ResponseStampsDenominationsResponse struct {
	CategoryId *string `json:"category_id,omitempty"`
	DenominationDesc *string `json:"denomination_desc,omitempty"`
	DenominationId *string `json:"denomination_id,omitempty"`
	DenominationValue *float32 `json:"denomination_value,omitempty"`
	EnteredBy *string `json:"entered_by,omitempty"`
	EntryDate *string `json:"entry_date,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	UpdateDate *string `json:"update_date,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
	ValidFrom *string `json:"valid_from,omitempty"`
	ValidTo *string `json:"valid_to,omitempty"`
}

// NewResponseStampsDenominationsResponse instantiates a new ResponseStampsDenominationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampsDenominationsResponse() *ResponseStampsDenominationsResponse {
	this := ResponseStampsDenominationsResponse{}
	return &this
}

// NewResponseStampsDenominationsResponseWithDefaults instantiates a new ResponseStampsDenominationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampsDenominationsResponseWithDefaults() *ResponseStampsDenominationsResponse {
	this := ResponseStampsDenominationsResponse{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ResponseStampsDenominationsResponse) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetDenominationDesc returns the DenominationDesc field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetDenominationDesc() string {
	if o == nil || IsNil(o.DenominationDesc) {
		var ret string
		return ret
	}
	return *o.DenominationDesc
}

// GetDenominationDescOk returns a tuple with the DenominationDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetDenominationDescOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationDesc) {
		return nil, false
	}
	return o.DenominationDesc, true
}

// HasDenominationDesc returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasDenominationDesc() bool {
	if o != nil && !IsNil(o.DenominationDesc) {
		return true
	}

	return false
}

// SetDenominationDesc gets a reference to the given string and assigns it to the DenominationDesc field.
func (o *ResponseStampsDenominationsResponse) SetDenominationDesc(v string) {
	o.DenominationDesc = &v
}

// GetDenominationId returns the DenominationId field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetDenominationId() string {
	if o == nil || IsNil(o.DenominationId) {
		var ret string
		return ret
	}
	return *o.DenominationId
}

// GetDenominationIdOk returns a tuple with the DenominationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetDenominationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationId) {
		return nil, false
	}
	return o.DenominationId, true
}

// HasDenominationId returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasDenominationId() bool {
	if o != nil && !IsNil(o.DenominationId) {
		return true
	}

	return false
}

// SetDenominationId gets a reference to the given string and assigns it to the DenominationId field.
func (o *ResponseStampsDenominationsResponse) SetDenominationId(v string) {
	o.DenominationId = &v
}

// GetDenominationValue returns the DenominationValue field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetDenominationValue() float32 {
	if o == nil || IsNil(o.DenominationValue) {
		var ret float32
		return ret
	}
	return *o.DenominationValue
}

// GetDenominationValueOk returns a tuple with the DenominationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetDenominationValueOk() (*float32, bool) {
	if o == nil || IsNil(o.DenominationValue) {
		return nil, false
	}
	return o.DenominationValue, true
}

// HasDenominationValue returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasDenominationValue() bool {
	if o != nil && !IsNil(o.DenominationValue) {
		return true
	}

	return false
}

// SetDenominationValue gets a reference to the given float32 and assigns it to the DenominationValue field.
func (o *ResponseStampsDenominationsResponse) SetDenominationValue(v float32) {
	o.DenominationValue = &v
}

// GetEnteredBy returns the EnteredBy field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetEnteredBy() string {
	if o == nil || IsNil(o.EnteredBy) {
		var ret string
		return ret
	}
	return *o.EnteredBy
}

// GetEnteredByOk returns a tuple with the EnteredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetEnteredByOk() (*string, bool) {
	if o == nil || IsNil(o.EnteredBy) {
		return nil, false
	}
	return o.EnteredBy, true
}

// HasEnteredBy returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasEnteredBy() bool {
	if o != nil && !IsNil(o.EnteredBy) {
		return true
	}

	return false
}

// SetEnteredBy gets a reference to the given string and assigns it to the EnteredBy field.
func (o *ResponseStampsDenominationsResponse) SetEnteredBy(v string) {
	o.EnteredBy = &v
}

// GetEntryDate returns the EntryDate field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetEntryDate() string {
	if o == nil || IsNil(o.EntryDate) {
		var ret string
		return ret
	}
	return *o.EntryDate
}

// GetEntryDateOk returns a tuple with the EntryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetEntryDateOk() (*string, bool) {
	if o == nil || IsNil(o.EntryDate) {
		return nil, false
	}
	return o.EntryDate, true
}

// HasEntryDate returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasEntryDate() bool {
	if o != nil && !IsNil(o.EntryDate) {
		return true
	}

	return false
}

// SetEntryDate gets a reference to the given string and assigns it to the EntryDate field.
func (o *ResponseStampsDenominationsResponse) SetEntryDate(v string) {
	o.EntryDate = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseStampsDenominationsResponse) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetUpdateDate() string {
	if o == nil || IsNil(o.UpdateDate) {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetUpdateDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *ResponseStampsDenominationsResponse) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *ResponseStampsDenominationsResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetValidFrom() string {
	if o == nil || IsNil(o.ValidFrom) {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetValidFromOk() (*string, bool) {
	if o == nil || IsNil(o.ValidFrom) {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasValidFrom() bool {
	if o != nil && !IsNil(o.ValidFrom) {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *ResponseStampsDenominationsResponse) SetValidFrom(v string) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *ResponseStampsDenominationsResponse) GetValidTo() string {
	if o == nil || IsNil(o.ValidTo) {
		var ret string
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsDenominationsResponse) GetValidToOk() (*string, bool) {
	if o == nil || IsNil(o.ValidTo) {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *ResponseStampsDenominationsResponse) HasValidTo() bool {
	if o != nil && !IsNil(o.ValidTo) {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given string and assigns it to the ValidTo field.
func (o *ResponseStampsDenominationsResponse) SetValidTo(v string) {
	o.ValidTo = &v
}

func (o ResponseStampsDenominationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampsDenominationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.DenominationDesc) {
		toSerialize["denomination_desc"] = o.DenominationDesc
	}
	if !IsNil(o.DenominationId) {
		toSerialize["denomination_id"] = o.DenominationId
	}
	if !IsNil(o.DenominationValue) {
		toSerialize["denomination_value"] = o.DenominationValue
	}
	if !IsNil(o.EnteredBy) {
		toSerialize["entered_by"] = o.EnteredBy
	}
	if !IsNil(o.EntryDate) {
		toSerialize["entry_date"] = o.EntryDate
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["update_date"] = o.UpdateDate
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.ValidFrom) {
		toSerialize["valid_from"] = o.ValidFrom
	}
	if !IsNil(o.ValidTo) {
		toSerialize["valid_to"] = o.ValidTo
	}
	return toSerialize, nil
}

type NullableResponseStampsDenominationsResponse struct {
	value *ResponseStampsDenominationsResponse
	isSet bool
}

func (v NullableResponseStampsDenominationsResponse) Get() *ResponseStampsDenominationsResponse {
	return v.value
}

func (v *NullableResponseStampsDenominationsResponse) Set(val *ResponseStampsDenominationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampsDenominationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampsDenominationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampsDenominationsResponse(val *ResponseStampsDenominationsResponse) *NullableResponseStampsDenominationsResponse {
	return &NullableResponseStampsDenominationsResponse{value: val, isSet: true}
}

func (v NullableResponseStampsDenominationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampsDenominationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


