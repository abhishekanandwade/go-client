/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampsError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampsError{}

// ResponseStampsError struct for ResponseStampsError
type ResponseStampsError struct {
	CurrOffice *int32 `json:"curr_office,omitempty"`
	DestAmt *float32 `json:"dest_amt,omitempty"`
	DestDetails *map[string]int32 `json:"dest_details,omitempty"`
	DestDetailsDesc []ResponseStampdetails `json:"dest_details_desc,omitempty"`
	DestOffice *int32 `json:"dest_office,omitempty"`
	DestOfficeName *string `json:"dest_office_name,omitempty"`
	DiffDetails *map[string]int32 `json:"diff_details,omitempty"`
	ErrorId *string `json:"error_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	SrcAmt *float32 `json:"src_amt,omitempty"`
	SrcDetails *map[string]int32 `json:"src_details,omitempty"`
	SrcDetailsDesc []ResponseStampdetails `json:"src_details_desc,omitempty"`
	SrcOffice *int32 `json:"src_office,omitempty"`
	SrcOfficeName *string `json:"src_office_name,omitempty"`
	StampsErrorDetails []ResponseStampsErrorDetails `json:"stamps_error_details,omitempty"`
	Status *string `json:"status,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransId *string `json:"trans_id,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
}

// NewResponseStampsError instantiates a new ResponseStampsError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampsError() *ResponseStampsError {
	this := ResponseStampsError{}
	return &this
}

// NewResponseStampsErrorWithDefaults instantiates a new ResponseStampsError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampsErrorWithDefaults() *ResponseStampsError {
	this := ResponseStampsError{}
	return &this
}

// GetCurrOffice returns the CurrOffice field value if set, zero value otherwise.
func (o *ResponseStampsError) GetCurrOffice() int32 {
	if o == nil || IsNil(o.CurrOffice) {
		var ret int32
		return ret
	}
	return *o.CurrOffice
}

// GetCurrOfficeOk returns a tuple with the CurrOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetCurrOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrOffice) {
		return nil, false
	}
	return o.CurrOffice, true
}

// HasCurrOffice returns a boolean if a field has been set.
func (o *ResponseStampsError) HasCurrOffice() bool {
	if o != nil && !IsNil(o.CurrOffice) {
		return true
	}

	return false
}

// SetCurrOffice gets a reference to the given int32 and assigns it to the CurrOffice field.
func (o *ResponseStampsError) SetCurrOffice(v int32) {
	o.CurrOffice = &v
}

// GetDestAmt returns the DestAmt field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDestAmt() float32 {
	if o == nil || IsNil(o.DestAmt) {
		var ret float32
		return ret
	}
	return *o.DestAmt
}

// GetDestAmtOk returns a tuple with the DestAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDestAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.DestAmt) {
		return nil, false
	}
	return o.DestAmt, true
}

// HasDestAmt returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDestAmt() bool {
	if o != nil && !IsNil(o.DestAmt) {
		return true
	}

	return false
}

// SetDestAmt gets a reference to the given float32 and assigns it to the DestAmt field.
func (o *ResponseStampsError) SetDestAmt(v float32) {
	o.DestAmt = &v
}

// GetDestDetails returns the DestDetails field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDestDetails() map[string]int32 {
	if o == nil || IsNil(o.DestDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.DestDetails
}

// GetDestDetailsOk returns a tuple with the DestDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDestDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.DestDetails) {
		return nil, false
	}
	return o.DestDetails, true
}

// HasDestDetails returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDestDetails() bool {
	if o != nil && !IsNil(o.DestDetails) {
		return true
	}

	return false
}

// SetDestDetails gets a reference to the given map[string]int32 and assigns it to the DestDetails field.
func (o *ResponseStampsError) SetDestDetails(v map[string]int32) {
	o.DestDetails = &v
}

// GetDestDetailsDesc returns the DestDetailsDesc field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDestDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.DestDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.DestDetailsDesc
}

// GetDestDetailsDescOk returns a tuple with the DestDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDestDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.DestDetailsDesc) {
		return nil, false
	}
	return o.DestDetailsDesc, true
}

// HasDestDetailsDesc returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDestDetailsDesc() bool {
	if o != nil && !IsNil(o.DestDetailsDesc) {
		return true
	}

	return false
}

// SetDestDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the DestDetailsDesc field.
func (o *ResponseStampsError) SetDestDetailsDesc(v []ResponseStampdetails) {
	o.DestDetailsDesc = v
}

// GetDestOffice returns the DestOffice field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDestOffice() int32 {
	if o == nil || IsNil(o.DestOffice) {
		var ret int32
		return ret
	}
	return *o.DestOffice
}

// GetDestOfficeOk returns a tuple with the DestOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDestOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.DestOffice) {
		return nil, false
	}
	return o.DestOffice, true
}

// HasDestOffice returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDestOffice() bool {
	if o != nil && !IsNil(o.DestOffice) {
		return true
	}

	return false
}

// SetDestOffice gets a reference to the given int32 and assigns it to the DestOffice field.
func (o *ResponseStampsError) SetDestOffice(v int32) {
	o.DestOffice = &v
}

// GetDestOfficeName returns the DestOfficeName field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDestOfficeName() string {
	if o == nil || IsNil(o.DestOfficeName) {
		var ret string
		return ret
	}
	return *o.DestOfficeName
}

// GetDestOfficeNameOk returns a tuple with the DestOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDestOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestOfficeName) {
		return nil, false
	}
	return o.DestOfficeName, true
}

// HasDestOfficeName returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDestOfficeName() bool {
	if o != nil && !IsNil(o.DestOfficeName) {
		return true
	}

	return false
}

// SetDestOfficeName gets a reference to the given string and assigns it to the DestOfficeName field.
func (o *ResponseStampsError) SetDestOfficeName(v string) {
	o.DestOfficeName = &v
}

// GetDiffDetails returns the DiffDetails field value if set, zero value otherwise.
func (o *ResponseStampsError) GetDiffDetails() map[string]int32 {
	if o == nil || IsNil(o.DiffDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.DiffDetails
}

// GetDiffDetailsOk returns a tuple with the DiffDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetDiffDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.DiffDetails) {
		return nil, false
	}
	return o.DiffDetails, true
}

// HasDiffDetails returns a boolean if a field has been set.
func (o *ResponseStampsError) HasDiffDetails() bool {
	if o != nil && !IsNil(o.DiffDetails) {
		return true
	}

	return false
}

// SetDiffDetails gets a reference to the given map[string]int32 and assigns it to the DiffDetails field.
func (o *ResponseStampsError) SetDiffDetails(v map[string]int32) {
	o.DiffDetails = &v
}

// GetErrorId returns the ErrorId field value if set, zero value otherwise.
func (o *ResponseStampsError) GetErrorId() string {
	if o == nil || IsNil(o.ErrorId) {
		var ret string
		return ret
	}
	return *o.ErrorId
}

// GetErrorIdOk returns a tuple with the ErrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetErrorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorId) {
		return nil, false
	}
	return o.ErrorId, true
}

// HasErrorId returns a boolean if a field has been set.
func (o *ResponseStampsError) HasErrorId() bool {
	if o != nil && !IsNil(o.ErrorId) {
		return true
	}

	return false
}

// SetErrorId gets a reference to the given string and assigns it to the ErrorId field.
func (o *ResponseStampsError) SetErrorId(v string) {
	o.ErrorId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseStampsError) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseStampsError) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseStampsError) SetRemarks(v string) {
	o.Remarks = &v
}

// GetSrcAmt returns the SrcAmt field value if set, zero value otherwise.
func (o *ResponseStampsError) GetSrcAmt() float32 {
	if o == nil || IsNil(o.SrcAmt) {
		var ret float32
		return ret
	}
	return *o.SrcAmt
}

// GetSrcAmtOk returns a tuple with the SrcAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetSrcAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.SrcAmt) {
		return nil, false
	}
	return o.SrcAmt, true
}

// HasSrcAmt returns a boolean if a field has been set.
func (o *ResponseStampsError) HasSrcAmt() bool {
	if o != nil && !IsNil(o.SrcAmt) {
		return true
	}

	return false
}

// SetSrcAmt gets a reference to the given float32 and assigns it to the SrcAmt field.
func (o *ResponseStampsError) SetSrcAmt(v float32) {
	o.SrcAmt = &v
}

// GetSrcDetails returns the SrcDetails field value if set, zero value otherwise.
func (o *ResponseStampsError) GetSrcDetails() map[string]int32 {
	if o == nil || IsNil(o.SrcDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.SrcDetails
}

// GetSrcDetailsOk returns a tuple with the SrcDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetSrcDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.SrcDetails) {
		return nil, false
	}
	return o.SrcDetails, true
}

// HasSrcDetails returns a boolean if a field has been set.
func (o *ResponseStampsError) HasSrcDetails() bool {
	if o != nil && !IsNil(o.SrcDetails) {
		return true
	}

	return false
}

// SetSrcDetails gets a reference to the given map[string]int32 and assigns it to the SrcDetails field.
func (o *ResponseStampsError) SetSrcDetails(v map[string]int32) {
	o.SrcDetails = &v
}

// GetSrcDetailsDesc returns the SrcDetailsDesc field value if set, zero value otherwise.
func (o *ResponseStampsError) GetSrcDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.SrcDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.SrcDetailsDesc
}

// GetSrcDetailsDescOk returns a tuple with the SrcDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetSrcDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.SrcDetailsDesc) {
		return nil, false
	}
	return o.SrcDetailsDesc, true
}

// HasSrcDetailsDesc returns a boolean if a field has been set.
func (o *ResponseStampsError) HasSrcDetailsDesc() bool {
	if o != nil && !IsNil(o.SrcDetailsDesc) {
		return true
	}

	return false
}

// SetSrcDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the SrcDetailsDesc field.
func (o *ResponseStampsError) SetSrcDetailsDesc(v []ResponseStampdetails) {
	o.SrcDetailsDesc = v
}

// GetSrcOffice returns the SrcOffice field value if set, zero value otherwise.
func (o *ResponseStampsError) GetSrcOffice() int32 {
	if o == nil || IsNil(o.SrcOffice) {
		var ret int32
		return ret
	}
	return *o.SrcOffice
}

// GetSrcOfficeOk returns a tuple with the SrcOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetSrcOfficeOk() (*int32, bool) {
	if o == nil || IsNil(o.SrcOffice) {
		return nil, false
	}
	return o.SrcOffice, true
}

// HasSrcOffice returns a boolean if a field has been set.
func (o *ResponseStampsError) HasSrcOffice() bool {
	if o != nil && !IsNil(o.SrcOffice) {
		return true
	}

	return false
}

// SetSrcOffice gets a reference to the given int32 and assigns it to the SrcOffice field.
func (o *ResponseStampsError) SetSrcOffice(v int32) {
	o.SrcOffice = &v
}

// GetSrcOfficeName returns the SrcOfficeName field value if set, zero value otherwise.
func (o *ResponseStampsError) GetSrcOfficeName() string {
	if o == nil || IsNil(o.SrcOfficeName) {
		var ret string
		return ret
	}
	return *o.SrcOfficeName
}

// GetSrcOfficeNameOk returns a tuple with the SrcOfficeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetSrcOfficeNameOk() (*string, bool) {
	if o == nil || IsNil(o.SrcOfficeName) {
		return nil, false
	}
	return o.SrcOfficeName, true
}

// HasSrcOfficeName returns a boolean if a field has been set.
func (o *ResponseStampsError) HasSrcOfficeName() bool {
	if o != nil && !IsNil(o.SrcOfficeName) {
		return true
	}

	return false
}

// SetSrcOfficeName gets a reference to the given string and assigns it to the SrcOfficeName field.
func (o *ResponseStampsError) SetSrcOfficeName(v string) {
	o.SrcOfficeName = &v
}

// GetStampsErrorDetails returns the StampsErrorDetails field value if set, zero value otherwise.
func (o *ResponseStampsError) GetStampsErrorDetails() []ResponseStampsErrorDetails {
	if o == nil || IsNil(o.StampsErrorDetails) {
		var ret []ResponseStampsErrorDetails
		return ret
	}
	return o.StampsErrorDetails
}

// GetStampsErrorDetailsOk returns a tuple with the StampsErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetStampsErrorDetailsOk() ([]ResponseStampsErrorDetails, bool) {
	if o == nil || IsNil(o.StampsErrorDetails) {
		return nil, false
	}
	return o.StampsErrorDetails, true
}

// HasStampsErrorDetails returns a boolean if a field has been set.
func (o *ResponseStampsError) HasStampsErrorDetails() bool {
	if o != nil && !IsNil(o.StampsErrorDetails) {
		return true
	}

	return false
}

// SetStampsErrorDetails gets a reference to the given []ResponseStampsErrorDetails and assigns it to the StampsErrorDetails field.
func (o *ResponseStampsError) SetStampsErrorDetails(v []ResponseStampsErrorDetails) {
	o.StampsErrorDetails = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponseStampsError) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponseStampsError) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ResponseStampsError) SetStatus(v string) {
	o.Status = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseStampsError) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseStampsError) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseStampsError) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *ResponseStampsError) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *ResponseStampsError) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *ResponseStampsError) SetTransId(v string) {
	o.TransId = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *ResponseStampsError) GetTransType() string {
	if o == nil || IsNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetTransTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransType) {
		return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *ResponseStampsError) HasTransType() bool {
	if o != nil && !IsNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *ResponseStampsError) SetTransType(v string) {
	o.TransType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseStampsError) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsError) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseStampsError) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ResponseStampsError) SetUserId(v int32) {
	o.UserId = &v
}

func (o ResponseStampsError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampsError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrOffice) {
		toSerialize["curr_office"] = o.CurrOffice
	}
	if !IsNil(o.DestAmt) {
		toSerialize["dest_amt"] = o.DestAmt
	}
	if !IsNil(o.DestDetails) {
		toSerialize["dest_details"] = o.DestDetails
	}
	if !IsNil(o.DestDetailsDesc) {
		toSerialize["dest_details_desc"] = o.DestDetailsDesc
	}
	if !IsNil(o.DestOffice) {
		toSerialize["dest_office"] = o.DestOffice
	}
	if !IsNil(o.DestOfficeName) {
		toSerialize["dest_office_name"] = o.DestOfficeName
	}
	if !IsNil(o.DiffDetails) {
		toSerialize["diff_details"] = o.DiffDetails
	}
	if !IsNil(o.ErrorId) {
		toSerialize["error_id"] = o.ErrorId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.SrcAmt) {
		toSerialize["src_amt"] = o.SrcAmt
	}
	if !IsNil(o.SrcDetails) {
		toSerialize["src_details"] = o.SrcDetails
	}
	if !IsNil(o.SrcDetailsDesc) {
		toSerialize["src_details_desc"] = o.SrcDetailsDesc
	}
	if !IsNil(o.SrcOffice) {
		toSerialize["src_office"] = o.SrcOffice
	}
	if !IsNil(o.SrcOfficeName) {
		toSerialize["src_office_name"] = o.SrcOfficeName
	}
	if !IsNil(o.StampsErrorDetails) {
		toSerialize["stamps_error_details"] = o.StampsErrorDetails
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransId) {
		toSerialize["trans_id"] = o.TransId
	}
	if !IsNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableResponseStampsError struct {
	value *ResponseStampsError
	isSet bool
}

func (v NullableResponseStampsError) Get() *ResponseStampsError {
	return v.value
}

func (v *NullableResponseStampsError) Set(val *ResponseStampsError) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampsError) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampsError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampsError(val *ResponseStampsError) *NullableResponseStampsError {
	return &NullableResponseStampsError{value: val, isSet: true}
}

func (v NullableResponseStampsError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampsError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


