/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampsSoiledResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampsSoiledResponse{}

// ResponseStampsSoiledResponse struct for ResponseStampsSoiledResponse
type ResponseStampsSoiledResponse struct {
	Amount *float32 `json:"amount,omitempty"`
	ApproverDate *string `json:"approver_date,omitempty"`
	ApproverId *int32 `json:"approver_id,omitempty"`
	DisposalDetails *string `json:"disposal_details,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	OfficeId *int32 `json:"office_id,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	SoiledDetails *map[string]int32 `json:"soiled_details,omitempty"`
	StampDetailsDesc []ResponseStampdetails `json:"stampDetailsDesc,omitempty"`
	TranId *string `json:"tran_id,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
}

// NewResponseStampsSoiledResponse instantiates a new ResponseStampsSoiledResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampsSoiledResponse() *ResponseStampsSoiledResponse {
	this := ResponseStampsSoiledResponse{}
	return &this
}

// NewResponseStampsSoiledResponseWithDefaults instantiates a new ResponseStampsSoiledResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampsSoiledResponseWithDefaults() *ResponseStampsSoiledResponse {
	this := ResponseStampsSoiledResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *ResponseStampsSoiledResponse) SetAmount(v float32) {
	o.Amount = &v
}

// GetApproverDate returns the ApproverDate field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetApproverDate() string {
	if o == nil || IsNil(o.ApproverDate) {
		var ret string
		return ret
	}
	return *o.ApproverDate
}

// GetApproverDateOk returns a tuple with the ApproverDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetApproverDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApproverDate) {
		return nil, false
	}
	return o.ApproverDate, true
}

// HasApproverDate returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasApproverDate() bool {
	if o != nil && !IsNil(o.ApproverDate) {
		return true
	}

	return false
}

// SetApproverDate gets a reference to the given string and assigns it to the ApproverDate field.
func (o *ResponseStampsSoiledResponse) SetApproverDate(v string) {
	o.ApproverDate = &v
}

// GetApproverId returns the ApproverId field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetApproverId() int32 {
	if o == nil || IsNil(o.ApproverId) {
		var ret int32
		return ret
	}
	return *o.ApproverId
}

// GetApproverIdOk returns a tuple with the ApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetApproverIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApproverId) {
		return nil, false
	}
	return o.ApproverId, true
}

// HasApproverId returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasApproverId() bool {
	if o != nil && !IsNil(o.ApproverId) {
		return true
	}

	return false
}

// SetApproverId gets a reference to the given int32 and assigns it to the ApproverId field.
func (o *ResponseStampsSoiledResponse) SetApproverId(v int32) {
	o.ApproverId = &v
}

// GetDisposalDetails returns the DisposalDetails field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetDisposalDetails() string {
	if o == nil || IsNil(o.DisposalDetails) {
		var ret string
		return ret
	}
	return *o.DisposalDetails
}

// GetDisposalDetailsOk returns a tuple with the DisposalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetDisposalDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.DisposalDetails) {
		return nil, false
	}
	return o.DisposalDetails, true
}

// HasDisposalDetails returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasDisposalDetails() bool {
	if o != nil && !IsNil(o.DisposalDetails) {
		return true
	}

	return false
}

// SetDisposalDetails gets a reference to the given string and assigns it to the DisposalDetails field.
func (o *ResponseStampsSoiledResponse) SetDisposalDetails(v string) {
	o.DisposalDetails = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *ResponseStampsSoiledResponse) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetOfficeId returns the OfficeId field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetOfficeId() int32 {
	if o == nil || IsNil(o.OfficeId) {
		var ret int32
		return ret
	}
	return *o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OfficeId) {
		return nil, false
	}
	return o.OfficeId, true
}

// HasOfficeId returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasOfficeId() bool {
	if o != nil && !IsNil(o.OfficeId) {
		return true
	}

	return false
}

// SetOfficeId gets a reference to the given int32 and assigns it to the OfficeId field.
func (o *ResponseStampsSoiledResponse) SetOfficeId(v int32) {
	o.OfficeId = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseStampsSoiledResponse) SetRemarks(v string) {
	o.Remarks = &v
}

// GetSoiledDetails returns the SoiledDetails field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetSoiledDetails() map[string]int32 {
	if o == nil || IsNil(o.SoiledDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.SoiledDetails
}

// GetSoiledDetailsOk returns a tuple with the SoiledDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetSoiledDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.SoiledDetails) {
		return nil, false
	}
	return o.SoiledDetails, true
}

// HasSoiledDetails returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasSoiledDetails() bool {
	if o != nil && !IsNil(o.SoiledDetails) {
		return true
	}

	return false
}

// SetSoiledDetails gets a reference to the given map[string]int32 and assigns it to the SoiledDetails field.
func (o *ResponseStampsSoiledResponse) SetSoiledDetails(v map[string]int32) {
	o.SoiledDetails = &v
}

// GetStampDetailsDesc returns the StampDetailsDesc field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetStampDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.StampDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.StampDetailsDesc
}

// GetStampDetailsDescOk returns a tuple with the StampDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetStampDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.StampDetailsDesc) {
		return nil, false
	}
	return o.StampDetailsDesc, true
}

// HasStampDetailsDesc returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasStampDetailsDesc() bool {
	if o != nil && !IsNil(o.StampDetailsDesc) {
		return true
	}

	return false
}

// SetStampDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the StampDetailsDesc field.
func (o *ResponseStampsSoiledResponse) SetStampDetailsDesc(v []ResponseStampdetails) {
	o.StampDetailsDesc = v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetTranId() string {
	if o == nil || IsNil(o.TranId) {
		var ret string
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given string and assigns it to the TranId field.
func (o *ResponseStampsSoiledResponse) SetTranId(v string) {
	o.TranId = &v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseStampsSoiledResponse) SetTransDate(v string) {
	o.TransDate = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ResponseStampsSoiledResponse) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsSoiledResponse) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ResponseStampsSoiledResponse) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ResponseStampsSoiledResponse) SetUserId(v int32) {
	o.UserId = &v
}

func (o ResponseStampsSoiledResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampsSoiledResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ApproverDate) {
		toSerialize["approver_date"] = o.ApproverDate
	}
	if !IsNil(o.ApproverId) {
		toSerialize["approver_id"] = o.ApproverId
	}
	if !IsNil(o.DisposalDetails) {
		toSerialize["disposal_details"] = o.DisposalDetails
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.OfficeId) {
		toSerialize["office_id"] = o.OfficeId
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.SoiledDetails) {
		toSerialize["soiled_details"] = o.SoiledDetails
	}
	if !IsNil(o.StampDetailsDesc) {
		toSerialize["stampDetailsDesc"] = o.StampDetailsDesc
	}
	if !IsNil(o.TranId) {
		toSerialize["tran_id"] = o.TranId
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableResponseStampsSoiledResponse struct {
	value *ResponseStampsSoiledResponse
	isSet bool
}

func (v NullableResponseStampsSoiledResponse) Get() *ResponseStampsSoiledResponse {
	return v.value
}

func (v *NullableResponseStampsSoiledResponse) Set(val *ResponseStampsSoiledResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampsSoiledResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampsSoiledResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampsSoiledResponse(val *ResponseStampsSoiledResponse) *NullableResponseStampsSoiledResponse {
	return &NullableResponseStampsSoiledResponse{value: val, isSet: true}
}

func (v NullableResponseStampsSoiledResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampsSoiledResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


