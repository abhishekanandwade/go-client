/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseStampsTxnsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStampsTxnsResponse{}

// ResponseStampsTxnsResponse struct for ResponseStampsTxnsResponse
type ResponseStampsTxnsResponse struct {
	AckAmount *float32 `json:"ack_amount,omitempty"`
	AckApproverRemarks *string `json:"ack_approver_remarks,omitempty"`
	AckDate *string `json:"ack_date,omitempty"`
	AckUserId *int32 `json:"ack_user_id,omitempty"`
	ApprovedAmount *float32 `json:"approved_amount,omitempty"`
	ApprovedDetails *map[string]int32 `json:"approved_details,omitempty"`
	IsSpecialRemittance *bool `json:"is_special_remittance,omitempty"`
	IssApproverDate *string `json:"iss_approver_date,omitempty"`
	IssApproverId *int32 `json:"iss_approver_id,omitempty"`
	IssApproverRemarks *string `json:"iss_approver_remarks,omitempty"`
	IssOfficeId *int32 `json:"iss_office_id,omitempty"`
	IssUserId *int32 `json:"iss_user_id,omitempty"`
	IssUserProcessedDate *string `json:"iss_user_processed_date,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	ReqAmount *float32 `json:"req_amount,omitempty"`
	ReqApproverAmt *float32 `json:"req_approver_amt,omitempty"`
	ReqApproverDate *string `json:"req_approver_date,omitempty"`
	ReqApproverId *int32 `json:"req_approver_id,omitempty"`
	ReqApproverRemarks *string `json:"req_approver_remarks,omitempty"`
	ReqDetails *map[string]int32 `json:"req_details,omitempty"`
	ReqOfficeId *int32 `json:"req_office_id,omitempty"`
	ReqUserId *int32 `json:"req_user_id,omitempty"`
	RequestId *string `json:"request_id,omitempty"`
	RequestSource *string `json:"request_source,omitempty"`
	RequestType *string `json:"request_type,omitempty"`
	StampDetailsDesc []ResponseStampdetails `json:"stampDetailsDesc,omitempty"`
	TransDate *string `json:"trans_date,omitempty"`
	TransactionId *string `json:"transaction_id,omitempty"`
}

// NewResponseStampsTxnsResponse instantiates a new ResponseStampsTxnsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStampsTxnsResponse() *ResponseStampsTxnsResponse {
	this := ResponseStampsTxnsResponse{}
	return &this
}

// NewResponseStampsTxnsResponseWithDefaults instantiates a new ResponseStampsTxnsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStampsTxnsResponseWithDefaults() *ResponseStampsTxnsResponse {
	this := ResponseStampsTxnsResponse{}
	return &this
}

// GetAckAmount returns the AckAmount field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetAckAmount() float32 {
	if o == nil || IsNil(o.AckAmount) {
		var ret float32
		return ret
	}
	return *o.AckAmount
}

// GetAckAmountOk returns a tuple with the AckAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetAckAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.AckAmount) {
		return nil, false
	}
	return o.AckAmount, true
}

// HasAckAmount returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasAckAmount() bool {
	if o != nil && !IsNil(o.AckAmount) {
		return true
	}

	return false
}

// SetAckAmount gets a reference to the given float32 and assigns it to the AckAmount field.
func (o *ResponseStampsTxnsResponse) SetAckAmount(v float32) {
	o.AckAmount = &v
}

// GetAckApproverRemarks returns the AckApproverRemarks field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetAckApproverRemarks() string {
	if o == nil || IsNil(o.AckApproverRemarks) {
		var ret string
		return ret
	}
	return *o.AckApproverRemarks
}

// GetAckApproverRemarksOk returns a tuple with the AckApproverRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetAckApproverRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.AckApproverRemarks) {
		return nil, false
	}
	return o.AckApproverRemarks, true
}

// HasAckApproverRemarks returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasAckApproverRemarks() bool {
	if o != nil && !IsNil(o.AckApproverRemarks) {
		return true
	}

	return false
}

// SetAckApproverRemarks gets a reference to the given string and assigns it to the AckApproverRemarks field.
func (o *ResponseStampsTxnsResponse) SetAckApproverRemarks(v string) {
	o.AckApproverRemarks = &v
}

// GetAckDate returns the AckDate field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetAckDate() string {
	if o == nil || IsNil(o.AckDate) {
		var ret string
		return ret
	}
	return *o.AckDate
}

// GetAckDateOk returns a tuple with the AckDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetAckDateOk() (*string, bool) {
	if o == nil || IsNil(o.AckDate) {
		return nil, false
	}
	return o.AckDate, true
}

// HasAckDate returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasAckDate() bool {
	if o != nil && !IsNil(o.AckDate) {
		return true
	}

	return false
}

// SetAckDate gets a reference to the given string and assigns it to the AckDate field.
func (o *ResponseStampsTxnsResponse) SetAckDate(v string) {
	o.AckDate = &v
}

// GetAckUserId returns the AckUserId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetAckUserId() int32 {
	if o == nil || IsNil(o.AckUserId) {
		var ret int32
		return ret
	}
	return *o.AckUserId
}

// GetAckUserIdOk returns a tuple with the AckUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetAckUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AckUserId) {
		return nil, false
	}
	return o.AckUserId, true
}

// HasAckUserId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasAckUserId() bool {
	if o != nil && !IsNil(o.AckUserId) {
		return true
	}

	return false
}

// SetAckUserId gets a reference to the given int32 and assigns it to the AckUserId field.
func (o *ResponseStampsTxnsResponse) SetAckUserId(v int32) {
	o.AckUserId = &v
}

// GetApprovedAmount returns the ApprovedAmount field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetApprovedAmount() float32 {
	if o == nil || IsNil(o.ApprovedAmount) {
		var ret float32
		return ret
	}
	return *o.ApprovedAmount
}

// GetApprovedAmountOk returns a tuple with the ApprovedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetApprovedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ApprovedAmount) {
		return nil, false
	}
	return o.ApprovedAmount, true
}

// HasApprovedAmount returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasApprovedAmount() bool {
	if o != nil && !IsNil(o.ApprovedAmount) {
		return true
	}

	return false
}

// SetApprovedAmount gets a reference to the given float32 and assigns it to the ApprovedAmount field.
func (o *ResponseStampsTxnsResponse) SetApprovedAmount(v float32) {
	o.ApprovedAmount = &v
}

// GetApprovedDetails returns the ApprovedDetails field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetApprovedDetails() map[string]int32 {
	if o == nil || IsNil(o.ApprovedDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.ApprovedDetails
}

// GetApprovedDetailsOk returns a tuple with the ApprovedDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetApprovedDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.ApprovedDetails) {
		return nil, false
	}
	return o.ApprovedDetails, true
}

// HasApprovedDetails returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasApprovedDetails() bool {
	if o != nil && !IsNil(o.ApprovedDetails) {
		return true
	}

	return false
}

// SetApprovedDetails gets a reference to the given map[string]int32 and assigns it to the ApprovedDetails field.
func (o *ResponseStampsTxnsResponse) SetApprovedDetails(v map[string]int32) {
	o.ApprovedDetails = &v
}

// GetIsSpecialRemittance returns the IsSpecialRemittance field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIsSpecialRemittance() bool {
	if o == nil || IsNil(o.IsSpecialRemittance) {
		var ret bool
		return ret
	}
	return *o.IsSpecialRemittance
}

// GetIsSpecialRemittanceOk returns a tuple with the IsSpecialRemittance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIsSpecialRemittanceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpecialRemittance) {
		return nil, false
	}
	return o.IsSpecialRemittance, true
}

// HasIsSpecialRemittance returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIsSpecialRemittance() bool {
	if o != nil && !IsNil(o.IsSpecialRemittance) {
		return true
	}

	return false
}

// SetIsSpecialRemittance gets a reference to the given bool and assigns it to the IsSpecialRemittance field.
func (o *ResponseStampsTxnsResponse) SetIsSpecialRemittance(v bool) {
	o.IsSpecialRemittance = &v
}

// GetIssApproverDate returns the IssApproverDate field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssApproverDate() string {
	if o == nil || IsNil(o.IssApproverDate) {
		var ret string
		return ret
	}
	return *o.IssApproverDate
}

// GetIssApproverDateOk returns a tuple with the IssApproverDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssApproverDateOk() (*string, bool) {
	if o == nil || IsNil(o.IssApproverDate) {
		return nil, false
	}
	return o.IssApproverDate, true
}

// HasIssApproverDate returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssApproverDate() bool {
	if o != nil && !IsNil(o.IssApproverDate) {
		return true
	}

	return false
}

// SetIssApproverDate gets a reference to the given string and assigns it to the IssApproverDate field.
func (o *ResponseStampsTxnsResponse) SetIssApproverDate(v string) {
	o.IssApproverDate = &v
}

// GetIssApproverId returns the IssApproverId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssApproverId() int32 {
	if o == nil || IsNil(o.IssApproverId) {
		var ret int32
		return ret
	}
	return *o.IssApproverId
}

// GetIssApproverIdOk returns a tuple with the IssApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssApproverIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssApproverId) {
		return nil, false
	}
	return o.IssApproverId, true
}

// HasIssApproverId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssApproverId() bool {
	if o != nil && !IsNil(o.IssApproverId) {
		return true
	}

	return false
}

// SetIssApproverId gets a reference to the given int32 and assigns it to the IssApproverId field.
func (o *ResponseStampsTxnsResponse) SetIssApproverId(v int32) {
	o.IssApproverId = &v
}

// GetIssApproverRemarks returns the IssApproverRemarks field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssApproverRemarks() string {
	if o == nil || IsNil(o.IssApproverRemarks) {
		var ret string
		return ret
	}
	return *o.IssApproverRemarks
}

// GetIssApproverRemarksOk returns a tuple with the IssApproverRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssApproverRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.IssApproverRemarks) {
		return nil, false
	}
	return o.IssApproverRemarks, true
}

// HasIssApproverRemarks returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssApproverRemarks() bool {
	if o != nil && !IsNil(o.IssApproverRemarks) {
		return true
	}

	return false
}

// SetIssApproverRemarks gets a reference to the given string and assigns it to the IssApproverRemarks field.
func (o *ResponseStampsTxnsResponse) SetIssApproverRemarks(v string) {
	o.IssApproverRemarks = &v
}

// GetIssOfficeId returns the IssOfficeId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssOfficeId() int32 {
	if o == nil || IsNil(o.IssOfficeId) {
		var ret int32
		return ret
	}
	return *o.IssOfficeId
}

// GetIssOfficeIdOk returns a tuple with the IssOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssOfficeId) {
		return nil, false
	}
	return o.IssOfficeId, true
}

// HasIssOfficeId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssOfficeId() bool {
	if o != nil && !IsNil(o.IssOfficeId) {
		return true
	}

	return false
}

// SetIssOfficeId gets a reference to the given int32 and assigns it to the IssOfficeId field.
func (o *ResponseStampsTxnsResponse) SetIssOfficeId(v int32) {
	o.IssOfficeId = &v
}

// GetIssUserId returns the IssUserId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssUserId() int32 {
	if o == nil || IsNil(o.IssUserId) {
		var ret int32
		return ret
	}
	return *o.IssUserId
}

// GetIssUserIdOk returns a tuple with the IssUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssUserId) {
		return nil, false
	}
	return o.IssUserId, true
}

// HasIssUserId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssUserId() bool {
	if o != nil && !IsNil(o.IssUserId) {
		return true
	}

	return false
}

// SetIssUserId gets a reference to the given int32 and assigns it to the IssUserId field.
func (o *ResponseStampsTxnsResponse) SetIssUserId(v int32) {
	o.IssUserId = &v
}

// GetIssUserProcessedDate returns the IssUserProcessedDate field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetIssUserProcessedDate() string {
	if o == nil || IsNil(o.IssUserProcessedDate) {
		var ret string
		return ret
	}
	return *o.IssUserProcessedDate
}

// GetIssUserProcessedDateOk returns a tuple with the IssUserProcessedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetIssUserProcessedDateOk() (*string, bool) {
	if o == nil || IsNil(o.IssUserProcessedDate) {
		return nil, false
	}
	return o.IssUserProcessedDate, true
}

// HasIssUserProcessedDate returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasIssUserProcessedDate() bool {
	if o != nil && !IsNil(o.IssUserProcessedDate) {
		return true
	}

	return false
}

// SetIssUserProcessedDate gets a reference to the given string and assigns it to the IssUserProcessedDate field.
func (o *ResponseStampsTxnsResponse) SetIssUserProcessedDate(v string) {
	o.IssUserProcessedDate = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *ResponseStampsTxnsResponse) SetRemarks(v string) {
	o.Remarks = &v
}

// GetReqAmount returns the ReqAmount field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqAmount() float32 {
	if o == nil || IsNil(o.ReqAmount) {
		var ret float32
		return ret
	}
	return *o.ReqAmount
}

// GetReqAmountOk returns a tuple with the ReqAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ReqAmount) {
		return nil, false
	}
	return o.ReqAmount, true
}

// HasReqAmount returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqAmount() bool {
	if o != nil && !IsNil(o.ReqAmount) {
		return true
	}

	return false
}

// SetReqAmount gets a reference to the given float32 and assigns it to the ReqAmount field.
func (o *ResponseStampsTxnsResponse) SetReqAmount(v float32) {
	o.ReqAmount = &v
}

// GetReqApproverAmt returns the ReqApproverAmt field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqApproverAmt() float32 {
	if o == nil || IsNil(o.ReqApproverAmt) {
		var ret float32
		return ret
	}
	return *o.ReqApproverAmt
}

// GetReqApproverAmtOk returns a tuple with the ReqApproverAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqApproverAmtOk() (*float32, bool) {
	if o == nil || IsNil(o.ReqApproverAmt) {
		return nil, false
	}
	return o.ReqApproverAmt, true
}

// HasReqApproverAmt returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqApproverAmt() bool {
	if o != nil && !IsNil(o.ReqApproverAmt) {
		return true
	}

	return false
}

// SetReqApproverAmt gets a reference to the given float32 and assigns it to the ReqApproverAmt field.
func (o *ResponseStampsTxnsResponse) SetReqApproverAmt(v float32) {
	o.ReqApproverAmt = &v
}

// GetReqApproverDate returns the ReqApproverDate field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqApproverDate() string {
	if o == nil || IsNil(o.ReqApproverDate) {
		var ret string
		return ret
	}
	return *o.ReqApproverDate
}

// GetReqApproverDateOk returns a tuple with the ReqApproverDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqApproverDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReqApproverDate) {
		return nil, false
	}
	return o.ReqApproverDate, true
}

// HasReqApproverDate returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqApproverDate() bool {
	if o != nil && !IsNil(o.ReqApproverDate) {
		return true
	}

	return false
}

// SetReqApproverDate gets a reference to the given string and assigns it to the ReqApproverDate field.
func (o *ResponseStampsTxnsResponse) SetReqApproverDate(v string) {
	o.ReqApproverDate = &v
}

// GetReqApproverId returns the ReqApproverId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqApproverId() int32 {
	if o == nil || IsNil(o.ReqApproverId) {
		var ret int32
		return ret
	}
	return *o.ReqApproverId
}

// GetReqApproverIdOk returns a tuple with the ReqApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqApproverIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReqApproverId) {
		return nil, false
	}
	return o.ReqApproverId, true
}

// HasReqApproverId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqApproverId() bool {
	if o != nil && !IsNil(o.ReqApproverId) {
		return true
	}

	return false
}

// SetReqApproverId gets a reference to the given int32 and assigns it to the ReqApproverId field.
func (o *ResponseStampsTxnsResponse) SetReqApproverId(v int32) {
	o.ReqApproverId = &v
}

// GetReqApproverRemarks returns the ReqApproverRemarks field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqApproverRemarks() string {
	if o == nil || IsNil(o.ReqApproverRemarks) {
		var ret string
		return ret
	}
	return *o.ReqApproverRemarks
}

// GetReqApproverRemarksOk returns a tuple with the ReqApproverRemarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqApproverRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.ReqApproverRemarks) {
		return nil, false
	}
	return o.ReqApproverRemarks, true
}

// HasReqApproverRemarks returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqApproverRemarks() bool {
	if o != nil && !IsNil(o.ReqApproverRemarks) {
		return true
	}

	return false
}

// SetReqApproverRemarks gets a reference to the given string and assigns it to the ReqApproverRemarks field.
func (o *ResponseStampsTxnsResponse) SetReqApproverRemarks(v string) {
	o.ReqApproverRemarks = &v
}

// GetReqDetails returns the ReqDetails field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqDetails() map[string]int32 {
	if o == nil || IsNil(o.ReqDetails) {
		var ret map[string]int32
		return ret
	}
	return *o.ReqDetails
}

// GetReqDetailsOk returns a tuple with the ReqDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqDetailsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.ReqDetails) {
		return nil, false
	}
	return o.ReqDetails, true
}

// HasReqDetails returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqDetails() bool {
	if o != nil && !IsNil(o.ReqDetails) {
		return true
	}

	return false
}

// SetReqDetails gets a reference to the given map[string]int32 and assigns it to the ReqDetails field.
func (o *ResponseStampsTxnsResponse) SetReqDetails(v map[string]int32) {
	o.ReqDetails = &v
}

// GetReqOfficeId returns the ReqOfficeId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqOfficeId() int32 {
	if o == nil || IsNil(o.ReqOfficeId) {
		var ret int32
		return ret
	}
	return *o.ReqOfficeId
}

// GetReqOfficeIdOk returns a tuple with the ReqOfficeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqOfficeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReqOfficeId) {
		return nil, false
	}
	return o.ReqOfficeId, true
}

// HasReqOfficeId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqOfficeId() bool {
	if o != nil && !IsNil(o.ReqOfficeId) {
		return true
	}

	return false
}

// SetReqOfficeId gets a reference to the given int32 and assigns it to the ReqOfficeId field.
func (o *ResponseStampsTxnsResponse) SetReqOfficeId(v int32) {
	o.ReqOfficeId = &v
}

// GetReqUserId returns the ReqUserId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetReqUserId() int32 {
	if o == nil || IsNil(o.ReqUserId) {
		var ret int32
		return ret
	}
	return *o.ReqUserId
}

// GetReqUserIdOk returns a tuple with the ReqUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetReqUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReqUserId) {
		return nil, false
	}
	return o.ReqUserId, true
}

// HasReqUserId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasReqUserId() bool {
	if o != nil && !IsNil(o.ReqUserId) {
		return true
	}

	return false
}

// SetReqUserId gets a reference to the given int32 and assigns it to the ReqUserId field.
func (o *ResponseStampsTxnsResponse) SetReqUserId(v int32) {
	o.ReqUserId = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ResponseStampsTxnsResponse) SetRequestId(v string) {
	o.RequestId = &v
}

// GetRequestSource returns the RequestSource field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetRequestSource() string {
	if o == nil || IsNil(o.RequestSource) {
		var ret string
		return ret
	}
	return *o.RequestSource
}

// GetRequestSourceOk returns a tuple with the RequestSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetRequestSourceOk() (*string, bool) {
	if o == nil || IsNil(o.RequestSource) {
		return nil, false
	}
	return o.RequestSource, true
}

// HasRequestSource returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasRequestSource() bool {
	if o != nil && !IsNil(o.RequestSource) {
		return true
	}

	return false
}

// SetRequestSource gets a reference to the given string and assigns it to the RequestSource field.
func (o *ResponseStampsTxnsResponse) SetRequestSource(v string) {
	o.RequestSource = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *ResponseStampsTxnsResponse) SetRequestType(v string) {
	o.RequestType = &v
}

// GetStampDetailsDesc returns the StampDetailsDesc field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetStampDetailsDesc() []ResponseStampdetails {
	if o == nil || IsNil(o.StampDetailsDesc) {
		var ret []ResponseStampdetails
		return ret
	}
	return o.StampDetailsDesc
}

// GetStampDetailsDescOk returns a tuple with the StampDetailsDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetStampDetailsDescOk() ([]ResponseStampdetails, bool) {
	if o == nil || IsNil(o.StampDetailsDesc) {
		return nil, false
	}
	return o.StampDetailsDesc, true
}

// HasStampDetailsDesc returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasStampDetailsDesc() bool {
	if o != nil && !IsNil(o.StampDetailsDesc) {
		return true
	}

	return false
}

// SetStampDetailsDesc gets a reference to the given []ResponseStampdetails and assigns it to the StampDetailsDesc field.
func (o *ResponseStampsTxnsResponse) SetStampDetailsDesc(v []ResponseStampdetails) {
	o.StampDetailsDesc = v
}

// GetTransDate returns the TransDate field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetTransDate() string {
	if o == nil || IsNil(o.TransDate) {
		var ret string
		return ret
	}
	return *o.TransDate
}

// GetTransDateOk returns a tuple with the TransDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetTransDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransDate) {
		return nil, false
	}
	return o.TransDate, true
}

// HasTransDate returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasTransDate() bool {
	if o != nil && !IsNil(o.TransDate) {
		return true
	}

	return false
}

// SetTransDate gets a reference to the given string and assigns it to the TransDate field.
func (o *ResponseStampsTxnsResponse) SetTransDate(v string) {
	o.TransDate = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ResponseStampsTxnsResponse) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStampsTxnsResponse) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ResponseStampsTxnsResponse) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ResponseStampsTxnsResponse) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o ResponseStampsTxnsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStampsTxnsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AckAmount) {
		toSerialize["ack_amount"] = o.AckAmount
	}
	if !IsNil(o.AckApproverRemarks) {
		toSerialize["ack_approver_remarks"] = o.AckApproverRemarks
	}
	if !IsNil(o.AckDate) {
		toSerialize["ack_date"] = o.AckDate
	}
	if !IsNil(o.AckUserId) {
		toSerialize["ack_user_id"] = o.AckUserId
	}
	if !IsNil(o.ApprovedAmount) {
		toSerialize["approved_amount"] = o.ApprovedAmount
	}
	if !IsNil(o.ApprovedDetails) {
		toSerialize["approved_details"] = o.ApprovedDetails
	}
	if !IsNil(o.IsSpecialRemittance) {
		toSerialize["is_special_remittance"] = o.IsSpecialRemittance
	}
	if !IsNil(o.IssApproverDate) {
		toSerialize["iss_approver_date"] = o.IssApproverDate
	}
	if !IsNil(o.IssApproverId) {
		toSerialize["iss_approver_id"] = o.IssApproverId
	}
	if !IsNil(o.IssApproverRemarks) {
		toSerialize["iss_approver_remarks"] = o.IssApproverRemarks
	}
	if !IsNil(o.IssOfficeId) {
		toSerialize["iss_office_id"] = o.IssOfficeId
	}
	if !IsNil(o.IssUserId) {
		toSerialize["iss_user_id"] = o.IssUserId
	}
	if !IsNil(o.IssUserProcessedDate) {
		toSerialize["iss_user_processed_date"] = o.IssUserProcessedDate
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.ReqAmount) {
		toSerialize["req_amount"] = o.ReqAmount
	}
	if !IsNil(o.ReqApproverAmt) {
		toSerialize["req_approver_amt"] = o.ReqApproverAmt
	}
	if !IsNil(o.ReqApproverDate) {
		toSerialize["req_approver_date"] = o.ReqApproverDate
	}
	if !IsNil(o.ReqApproverId) {
		toSerialize["req_approver_id"] = o.ReqApproverId
	}
	if !IsNil(o.ReqApproverRemarks) {
		toSerialize["req_approver_remarks"] = o.ReqApproverRemarks
	}
	if !IsNil(o.ReqDetails) {
		toSerialize["req_details"] = o.ReqDetails
	}
	if !IsNil(o.ReqOfficeId) {
		toSerialize["req_office_id"] = o.ReqOfficeId
	}
	if !IsNil(o.ReqUserId) {
		toSerialize["req_user_id"] = o.ReqUserId
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !IsNil(o.RequestSource) {
		toSerialize["request_source"] = o.RequestSource
	}
	if !IsNil(o.RequestType) {
		toSerialize["request_type"] = o.RequestType
	}
	if !IsNil(o.StampDetailsDesc) {
		toSerialize["stampDetailsDesc"] = o.StampDetailsDesc
	}
	if !IsNil(o.TransDate) {
		toSerialize["trans_date"] = o.TransDate
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	return toSerialize, nil
}

type NullableResponseStampsTxnsResponse struct {
	value *ResponseStampsTxnsResponse
	isSet bool
}

func (v NullableResponseStampsTxnsResponse) Get() *ResponseStampsTxnsResponse {
	return v.value
}

func (v *NullableResponseStampsTxnsResponse) Set(val *ResponseStampsTxnsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStampsTxnsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStampsTxnsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStampsTxnsResponse(val *ResponseStampsTxnsResponse) *NullableResponseStampsTxnsResponse {
	return &NullableResponseStampsTxnsResponse{value: val, isSet: true}
}

func (v NullableResponseStampsTxnsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStampsTxnsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


