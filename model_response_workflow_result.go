/*
Treasury Management API

A comprehensive API for managing addresses, offering endpoints for creation, update, deletion, and retrieval of address data.

API version: 1.0
Contact: support_cept@indiapost.gov.in
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseWorkflowResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseWorkflowResult{}

// ResponseWorkflowResult struct for ResponseWorkflowResult
type ResponseWorkflowResult struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
	SuccessfulResponses []map[string]interface{} `json:"successful_responses,omitempty"`
}

// NewResponseWorkflowResult instantiates a new ResponseWorkflowResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseWorkflowResult() *ResponseWorkflowResult {
	this := ResponseWorkflowResult{}
	return &this
}

// NewResponseWorkflowResultWithDefaults instantiates a new ResponseWorkflowResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseWorkflowResultWithDefaults() *ResponseWorkflowResult {
	this := ResponseWorkflowResult{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ResponseWorkflowResult) GetErrors() []map[string]interface{} {
	if o == nil || IsNil(o.Errors) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseWorkflowResult) GetErrorsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ResponseWorkflowResult) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []map[string]interface{} and assigns it to the Errors field.
func (o *ResponseWorkflowResult) SetErrors(v []map[string]interface{}) {
	o.Errors = v
}

// GetSuccessfulResponses returns the SuccessfulResponses field value if set, zero value otherwise.
func (o *ResponseWorkflowResult) GetSuccessfulResponses() []map[string]interface{} {
	if o == nil || IsNil(o.SuccessfulResponses) {
		var ret []map[string]interface{}
		return ret
	}
	return o.SuccessfulResponses
}

// GetSuccessfulResponsesOk returns a tuple with the SuccessfulResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseWorkflowResult) GetSuccessfulResponsesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.SuccessfulResponses) {
		return nil, false
	}
	return o.SuccessfulResponses, true
}

// HasSuccessfulResponses returns a boolean if a field has been set.
func (o *ResponseWorkflowResult) HasSuccessfulResponses() bool {
	if o != nil && !IsNil(o.SuccessfulResponses) {
		return true
	}

	return false
}

// SetSuccessfulResponses gets a reference to the given []map[string]interface{} and assigns it to the SuccessfulResponses field.
func (o *ResponseWorkflowResult) SetSuccessfulResponses(v []map[string]interface{}) {
	o.SuccessfulResponses = v
}

func (o ResponseWorkflowResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseWorkflowResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.SuccessfulResponses) {
		toSerialize["successful_responses"] = o.SuccessfulResponses
	}
	return toSerialize, nil
}

type NullableResponseWorkflowResult struct {
	value *ResponseWorkflowResult
	isSet bool
}

func (v NullableResponseWorkflowResult) Get() *ResponseWorkflowResult {
	return v.value
}

func (v *NullableResponseWorkflowResult) Set(val *ResponseWorkflowResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseWorkflowResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseWorkflowResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseWorkflowResult(val *ResponseWorkflowResult) *NullableResponseWorkflowResult {
	return &NullableResponseWorkflowResult{value: val, isSet: true}
}

func (v NullableResponseWorkflowResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseWorkflowResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


