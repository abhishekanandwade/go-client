basePath: /v1
definitions:
  apierrors.APIErrorResponse:
    properties:
      error:
        $ref: '#/definitions/apierrors.AppError'
      message:
        description: Descriptive message providing details about the error.
        type: string
      status_code:
        description: HTTP status code representing the error type (e.g., 404 for Not
          Found).
        type: integer
    type: object
  apierrors.AppError:
    properties:
      code:
        type: string
      field_errors:
        items:
          $ref: '#/definitions/apierrors.FieldError'
        type: array
      id:
        type: string
      message:
        type: string
    type: object
  apierrors.FieldError:
    properties:
      field:
        type: string
      message:
        type: string
      value: {}
    type: object
  handler.IPODetail:
    properties:
      curr_qty:
        example: 20
        type: integer
      curr_serial:
        example: "000281"
        type: string
      denomination_Desc:
        example: IPO Rupees 10
        type: string
      denomination_Value:
        example: 10,20 etc
        type: string
      denomination_id:
        example: IPO0001
        type: string
      end_serial:
        example: "000300"
        type: string
      prefix_id:
        example: SBE
        type: string
      start_serial:
        example: "000281"
        type: string
      tot_quantity:
        example: 20
        type: integer
    required:
    - denomination_id
    - end_serial
    - prefix_id
    - start_serial
    - tot_quantity
    type: object
  handler.UpdateChequesDisposalRequest:
    properties:
      cheque_amount:
        example: 5000.9
        type: number
      disposed_by:
        example: 10112222
        type: integer
      is_bank_drawl:
        example: true
        type: boolean
      transaction_id:
        example: TX00000933455
        type: string
    required:
    - cheque_amount
    - disposed_by
    - transaction_id
    type: object
  handler.UpdateIPOsErrorTransactionsRequest:
    properties:
      diff_details:
        example: '[{"diff":"diff1"},{"diff":"diff2"}]'
        type: string
      office_id:
        example: 9000001
        type: integer
      remarks:
        example: remarks of error
        type: string
      status:
        enum:
        - "2"
        - "3"
        example: 2/3
        type: string
      user_id:
        example: 10145824
        type: integer
    required:
    - office_id
    - remarks
    - user_id
    type: object
  handler.approveCustomerTransactionsApproveRequest:
    properties:
      approver-id:
        example: "10121212"
        type: string
      is-approved:
        example: true
        type: boolean
    required:
    - approver-id
    type: object
  handler.articleDetail:
    properties:
      article_number:
        type: string
      article_type:
        type: string
    type: object
  handler.articleInfo:
    properties:
      approved_status:
        type: string
      art_status:
        type: string
      article_number:
        type: string
      article_type:
        type: string
      insured_flag:
        type: boolean
    type: object
  handler.boBagContent:
    properties:
      approved_status:
        type: string
      article_number:
        type: string
      article_type:
        type: string
      article_weight:
        type: number
      booking_datetime:
        type: string
      booking_office_id:
        type: integer
      booking_office_name:
        type: string
      destn_office_pin:
        type: integer
      insured_flag:
        type: boolean
      office_id:
        type: integer
      user_id:
        type: string
    type: object
  handler.cashDenomination:
    properties:
      count:
        type: integer
      currency_id:
        type: string
      currency_type:
        type: string
      denomination:
        type: integer
    type: object
  handler.chequeDetail:
    properties:
      trans_amount:
        type: number
      trans_details:
        type: string
    type: object
  handler.createBankAddlCreditRequest:
    properties:
      addl_credit:
        example: 200009.35
        type: number
      office_id:
        example: "21280551"
        type: string
      remarks:
        example: For payments
        type: string
      user_id:
        example: "10122222"
        type: string
    required:
    - addl_credit
    - office_id
    - remarks
    - user_id
    type: object
  handler.createCashBagsIssuesChequesRequest:
    properties:
      from-office-id:
        example: 90000003
        type: integer
      remarks:
        example: Remarks
        type: string
      to-office-id:
        example: 90000003
        type: integer
      trans-amount:
        example: 2234.5
        type: number
      trans-details:
        example: Cheque No. 112223 dtd. 21.07.24
        type: string
      trans-id:
        example: TX00001
        type: string
    required:
    - from-office-id
    - remarks
    - to-office-id
    - trans-amount
    - trans-details
    - trans-id
    type: object
  handler.createCashBagsRequest:
    properties:
      bag_weight:
        example: 18.9
        type: number
      from_office_id:
        example: 9000001
        type: integer
      from_user_id:
        example: 10123333
        type: integer
      to_office_id:
        example: 9000003
        type: integer
      trans_ids:
        example: TX0001, SX00003, IPOTX00004
        type: string
    required:
    - bag_weight
    - from_office_id
    - from_user_id
    - to_office_id
    - trans_ids
    type: object
  handler.createCashTransferLineLimitsRequest:
    properties:
      entered_by_userid:
        example: "10139999"
        type: string
      limit_amt:
        example: 10000
        type: number
      limit_description:
        example: Loose cash through departmental employee
        type: string
      valid_from:
        example: "9999-12-31T00:00:00Z"
        type: string
    required:
    - entered_by_userid
    - limit_amt
    - limit_description
    - valid_from
    type: object
  handler.createCurrenciesRequest:
    properties:
      currency_type:
        enum:
        - Note
        - Coin
        example: Note/ Coin
        type: string
      denomination:
        example: 10
        type: number
      entered_by_user:
        example: "10130000"
        type: string
      valid_from:
        example: "9999-12-31T00:00:00Z"
        type: string
    required:
    - denomination
    - entered_by_user
    - valid_from
    type: object
  handler.createCustomerTransactionsRequest:
    properties:
      bill_amount:
        example: 1000.5
        type: number
      bill_date:
        example: "9999-12-31T00:00:00Z"
        type: string
      bill_id:
        example: BILL123456
        type: string
      bill_remarks:
        example: Monthly bill
        type: string
      cheque_date:
        example: "9999-12-31T00:00:00Z"
        type: string
      cheque_no:
        example: CHQ123456
        type: string
      customer_id:
        example: "12345"
        type: string
      customer_name:
        example: John Doe
        type: string
      customer_type_id:
        example: "01"
        type: string
      customer_type_name:
        example: Regular
        type: string
      is_advance_customer:
        example: true
        type: boolean
      is_receipt_payment:
        enum:
        - Receipt
        - Payment
        example: Receipt
        type: string
      iss_office_id:
        example: 9000015
        type: integer
      office_id:
        example: 9000015
        type: integer
      remarks:
        example: Payment for December
        type: string
      tx_amount:
        example: 500.75
        type: number
      tx_mode:
        example: Cash
        type: string
      user_id:
        example: "10998889"
        type: string
    required:
    - bill_amount
    - bill_date
    - bill_id
    - bill_remarks
    - customer_id
    - customer_name
    - customer_type_name
    - office_id
    - remarks
    - tx_amount
    - tx_mode
    - user_id
    type: object
  handler.createExceptionalWkorkingDaysRequest:
    properties:
      approver_id:
        example: 10130000
        minimum: 10000000
        type: integer
      exceptional_wkg_day_date:
        example: "2023-11-30T00:00:00Z"
        type: string
      remarks:
        example: Exam material booking
        type: string
    required:
    - approver_id
    - exceptional_wkg_day_date
    - remarks
    type: object
  handler.createIPOSalesRequest:
    properties:
      is_single_hand:
        example: true
        type: boolean
      office_id:
        example: 9000003
        type: integer
      sale_amount:
        example: 300.65
        type: number
      sale_commission:
        example: 300.65
        type: number
      sale_details:
        items:
          type: integer
        type: array
      sold_to:
        example: XXX
        type: string
      user_id:
        example: 10130000
        type: integer
    required:
    - office_id
    - sale_amount
    - sale_commission
    - sale_details
    - sold_to
    - user_id
    type: object
  handler.createIPOsTransactionsRequest:
    properties:
      is_single_hand:
        example: true
        type: boolean
      is_special_remittance:
        example: true
        type: boolean
      iss_office_id:
        example: 9000003
        type: integer
      remarks:
        example: Misc. Receipts
        type: string
      req_amount:
        example: 25000.55
        type: number
      req_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      req_office_id:
        example: 9000003
        type: integer
      req_user_id:
        example: 10130000
        type: integer
      request_id:
        example: POS78967
        type: string
      request_source:
        example: Treasury/PoS/DARPAN
        type: string
      request_type:
        example: Request/ Remittance
        type: string
    required:
    - iss_office_id
    - req_amount
    - req_office_id
    - req_user_id
    - request_source
    - request_type
    type: object
  handler.createMiscTransactionsRequest:
    properties:
      cheque_date:
        example: "2024-09-02"
        type: string
      cheque_no:
        example: "000987"
        type: string
      office_id:
        example: 112256
        type: integer
      payee_name:
        example: M/s XYZ
        type: string
      remarks:
        example: this is some reamrks
        type: string
      trans_amount:
        type: number
      trans_details:
        additionalProperties:
          type: number
        type: object
      trans_type:
        example: Receipt/Payment
        type: string
      txn_mode:
        example: cash
        type: string
      user_id:
        example: 10145826
        type: integer
    required:
    - office_id
    - remarks
    - trans_amount
    - trans_details
    - trans_type
    - txn_mode
    - user_id
    type: object
  handler.createOfficesAccountingDetailsRequest:
    properties:
      credit_or_debit:
        enum:
        - R
        - P
        example: R
        type: string
      digital_txns_amount:
        example: 25000.55
        type: number
      digital_txns_count:
        example: 121
        type: integer
      gl_code:
        example: 4867100010, 4867100011
        type: string
      non_digital_txns_amount:
        example: 123.11
        type: number
      non_digital_txns_count:
        example: 11
        type: integer
      receipt_source:
        example: Treasury/PoS/DARPAN
        type: string
      remarks:
        example: Remarks any
        type: string
      src_tran_id:
        example: POS78967
        type: string
      src_trans_date:
        example: "2024-01-11"
        type: string
    required:
    - receipt_source
    - src_tran_id
    - src_trans_date
    type: object
  handler.createOfficesIPOsOBReceiptsRequest:
    properties:
      invoice_date:
        example: "2023-12-07T00:00:00Z"
        type: string
      ipo_details:
        items:
          $ref: '#/definitions/handler.IPODetail'
        type: array
      recd_user_id:
        example: 10130000
        type: integer
      receipt_invoice:
        example: CSDH/2-3/DLGS
        type: string
      receipt_source:
        example: OPENING BALANCE/ CSD
        type: string
      remarks:
        example: FROM CSD
        type: string
    required:
    - invoice_date
    - recd_user_id
    - receipt_invoice
    - receipt_source
    type: object
  handler.createOfficesPerformDayBeginRequest:
    properties:
      day_begin_userid:
        example: 10130000
        minimum: 10000000
        type: integer
    required:
    - day_begin_userid
    type: object
  handler.createOfficesRequest:
    properties:
      bank_credit_limit:
        example: 10000
        type: number
      bank_id:
        example: SBIN000000
        type: string
      cash_office_id:
        example: 9000003
        type: integer
      cashoffice_name:
        example: Mysuru HO
        type: string
      counter_cash_tfr_limit:
        example: 10000
        type: number
      entered_by:
        example: "10130000"
        type: string
      max_amt:
        example: 100000
        minimum: 1
        type: number
      min_amt:
        example: 5000
        minimum: 1
        type: number
      office_id:
        example: 9000003
        type: integer
      office_name:
        example: Mysuru HO
        type: string
      postage_stamps_limit:
        example: 1000
        type: number
      revenue_stamps_limit:
        example: 10
        type: number
      transit_duration:
        example: 1
        type: integer
      valid_from:
        example: "2023-12-08T00:00:00Z"
        type: string
    required:
    - entered_by
    - max_amt
    - min_amt
    - office_id
    - office_name
    - valid_from
    type: object
  handler.createStampBulkSalesRequest:
    properties:
      bank_branch:
        example: SBI Mysuru
        type: string
      instrument_date:
        example: "2023-12-15"
        type: string
      instrument_no:
        example: AFR0009878
        type: string
      is_single_hand:
        example: true
        type: boolean
      office_id:
        example: 9000003
        type: integer
      payment_mode:
        example: Cash/Cheque
        type: string
      remarks:
        example: Bulk Sale
        type: string
      sale_amt:
        example: 300.65
        type: number
      sale_details:
        additionalProperties:
          type: integer
        type: object
      sold_to:
        example: XXX
        type: string
      user_id:
        example: 10130000
        type: integer
    required:
    - office_id
    - payment_mode
    - sale_amt
    - sale_details
    - sold_to
    - user_id
    type: object
  handler.createStampObCsdReceiptsRequest:
    type: object
  handler.createStampsAdvanceTxnsRequest:
    type: object
  handler.createStampsSoiledWriteOffLimitsRequest:
    properties:
      entered_by_userid:
        example: "10130000"
        type: string
      limit_per_annum:
        example: 10000
        type: integer
      limit_per_time:
        example: 5000
        minimum: 1
        type: integer
      valid_from:
        example: "2023-12-08T00:00:00Z"
        type: string
    required:
    - entered_by_userid
    - limit_per_time
    - valid_from
    type: object
  handler.createStampsTransactionsRequest:
    properties:
      is_single_hand:
        example: true
        type: boolean
      is_special_remittance:
        example: false
        type: boolean
      iss_office_id:
        example: 9000003
        type: integer
      remarks:
        example: Misc. Receipts
        type: string
      req_amount:
        example: 25000.55
        type: number
      req_details:
        additionalProperties:
          type: integer
        type: object
      req_office_id:
        example: 9000003
        type: integer
      req_user_id:
        example: 10130000
        type: integer
      request_id:
        example: POS78967
        type: string
      request_source:
        example: Treasury/PoS/DARPAN
        type: string
      request_type:
        example: Request/ Remittance
        type: string
    required:
    - iss_office_id
    - req_amount
    - req_details
    - req_office_id
    - req_user_id
    - request_source
    - request_type
    type: object
  handler.createTransactionsBankRemittancesRequest:
    properties:
      bag_weight:
        example: 18.9
        type: number
      cheque_date:
        example: "2023-12-27"
        type: string
      cheque_no:
        example: ACQ 598445
        type: string
      currency_details:
        additionalProperties:
          type: integer
        type: object
      employee_id1:
        example: 10130000
        type: integer
      employee_id2:
        example: 10130000
        type: integer
      is_single_hand:
        example: true
        type: boolean
      is_special_remittance:
        example: true
        type: boolean
      iss_office_id:
        example: 9000003
        type: integer
      liability_details:
        example: PLI Payment
        type: string
      limit_id:
        example: LID001
        type: string
      payee_name:
        example: POSTMASTER
        type: string
      remarks:
        example: Misc. Receipts
        type: string
      req_amount:
        example: 25000.55
        type: number
      req_office_id:
        example: 9000003
        type: integer
      req_user_id:
        example: 10130000
        type: integer
      request_id:
        example: POS78967
        type: string
      request_source:
        example: Treasury/PoS/DARPAN
        type: string
      request_type:
        enum:
        - Request
        - Remittance
        - Cheque Request
        - Cheque Remittance
        - Bank Drawl
        - Bank Remittance
        example: Cash/ Cheque Request
        type: string
      txn_mode:
        example: Cash/ Cheque/ DD
        type: string
    required:
    - iss_office_id
    - req_amount
    - req_office_id
    - req_user_id
    - request_source
    - txn_mode
    type: object
  handler.emoDetail:
    properties:
      addresse:
        type: string
      emo_no:
        type: string
      value:
        type: string
    type: object
  handler.sendChequesToBankOrAORequest:
    properties:
      bo_sent_date:
        example: "2024-03-01"
        type: string
      bo_user_id:
        example: 10132222
        type: integer
      cheque_amount:
        example: 15434.75
        type: number
      cheque_date:
        example: 01-03-2024
        type: string
      cheque_no:
        example: "345654"
        type: string
      clearing_sent_date:
        example: "2024-03-01"
        type: string
      curr_office_id:
        example: 21280551
        type: integer
      ddo_user_id:
        example: 10132222
        type: integer
      ncddo_sent_date:
        example: "2024-03-01"
        type: string
      ncddo_user_id:
        example: 10132222
        type: integer
      so_sent_date:
        example: "2024-03-01"
        type: string
      so_user_id:
        example: 10132222
        type: integer
      src_office_id:
        example: 21260551
        type: integer
    required:
    - cheque_amount
    - cheque_date
    - cheque_no
    - curr_office_id
    - src_office_id
    type: object
  handler.stampDetail:
    properties:
      category_desc:
        type: string
      category_id:
        type: string
      denomination_count:
        type: integer
      denomination_desc:
        type: string
      denomination_id:
        type: string
      denomination_value:
        type: number
    type: object
  handler.stampStatus:
    enum:
    - all
    - by-id
    - remittance
    - linked
    - configured
    - pending
    - approve
    - process
    - acct-code
    - errors
    - transfer
    - cash-transfer
    - disposal
    type: string
    x-enum-varnames:
    - all
    - byID
    - remittance
    - linked
    - configured
    - pending
    - approve
    - process
    - acctcode
    - errs
    - transfer
    - cashTransfer
    - disposal
  handler.stationeryDetail:
    properties:
      name:
        type: string
      quantity:
        type: string
      value:
        type: string
    type: object
  handler.temporalBagOpenGetRequest:
    properties:
      bagnumber:
        type: string
      officeid:
        type: integer
    type: object
  handler.temporalCombinedRequestbagopenRequest:
    properties:
      ac_bag_id:
        type: string
      article_count:
        type: integer
      article_weight:
        type: number
      bag_count:
        type: integer
      bag_number:
        type: string
      bag_open_art:
        items:
          $ref: '#/definitions/handler.articleInfo'
        type: array
      bag_type:
        type: string
      bag_uuid:
        type: string
      bag_weight:
        type: number
      delivery_type:
        type: string
      event_type:
        type: string
      from_office_id:
        type: integer
      insured_flag:
        type: boolean
      is_received:
        type: boolean
      received_by:
        type: integer
      schedule_id:
        type: integer
      set_date:
        type: string
      set_number:
        type: string
      to_office_id:
        type: integer
      user_id:
        type: integer
    type: object
  handler.temporalDayBeginCombinedRequest:
    properties:
      counterno:
        type: integer
      createdby:
        type: string
      day_begin_userid:
        type: integer
      employeeid:
        type: integer
      employeename:
        type: string
      id:
        type: integer
      office_id:
        type: integer
      officeid:
        type: integer
      officename:
        type: string
      remarks:
        type: string
      revertedby:
        type: string
      shiftbegin:
        type: boolean
      shiftbeginchanneltype:
        type: string
      shiftbeginipaddress:
        type: string
      shiftbeginusertype:
        type: string
      shiftend:
        type: boolean
      shiftno:
        type: integer
      submitaccountstatus:
        type: boolean
      submitaccountvfnstatus:
        type: boolean
      transdate:
        type: string
    type: object
  handler.temporalDayEndCombinedRequest:
    properties:
      counterno:
        type: integer
      day_end_userid:
        type: integer
      employeeid:
        type: integer
      employeename:
        type: string
      id:
        type: integer
      office_id:
        type: integer
      officeid:
        type: integer
      officename:
        type: string
      remarks:
        type: string
      revertedby:
        type: string
      shiftbegin:
        type: boolean
      shiftend:
        type: boolean
      shiftendchanneltype:
        type: string
      shiftenddoneby:
        type: integer
      shiftendipaddress:
        type: string
      shiftendremarks:
        type: string
      shiftendusertype:
        type: string
      shiftno:
        type: integer
      trans_date:
        type: string
      transdate:
        type: string
    type: object
  handler.temporalcombinedCashbagcloseRequest:
    properties:
      ac_bag_id:
        type: string
      ac_bag_weight:
        type: number
      article_count:
        type: integer
      article_detail:
        items:
          $ref: '#/definitions/handler.articleDetail'
        type: array
      article_weight:
        type: number
      bag_count:
        type: integer
      bag_number:
        type: string
      bag_type:
        type: string
      bag_weight:
        type: number
      bo_bag_content:
        items:
          $ref: '#/definitions/handler.boBagContent'
        type: array
      cash_bag_weight:
        type: number
      cash_denomination:
        items:
          $ref: '#/definitions/handler.cashDenomination'
        type: array
      cash_total_amount:
        type: number
      cashbag_id:
        type: string
      cheque_details:
        items:
          $ref: '#/definitions/handler.chequeDetail'
        type: array
      created_by:
        type: string
      created_date:
        type: string
      delivery_type:
        type: string
      document_list:
        type: string
      emo_list:
        items:
          $ref: '#/definitions/handler.emoDetail'
        type: array
      emo_total_amount:
        type: number
      event_type:
        type: string
      from_office_id:
        type: integer
      insured_flag:
        type: boolean
      ipo_detail:
        items:
          $ref: '#/definitions/handler.IPODetail'
        type: array
      receiver_office_id:
        type: integer
      remark:
        type: string
      sender_office_id:
        type: integer
      set_date:
        type: string
      set_number:
        type: string
      stamp_detail:
        items:
          $ref: '#/definitions/handler.stampDetail'
        type: array
      stationery_detail:
        items:
          $ref: '#/definitions/handler.stationeryDetail'
        type: array
      to_office_id:
        type: integer
      user_id:
        type: integer
    type: object
  handler.updateBankAddlCreditRequest:
    properties:
      approved_addl_credit:
        example: 200009.35
        type: number
      approver_id:
        example: "10122222"
        type: string
      approver_remarks:
        example: Approved
        type: string
      is_approved:
        example: true
        type: boolean
    required:
    - approved_addl_credit
    - approver_id
    type: object
  handler.updateCashErrorsRequest:
    properties:
      office_id:
        example: 9000001
        type: integer
      remarks:
        example: remarks of error
        type: string
      status:
        enum:
        - "2"
        - "3"
        example: 2/3
        type: string
      user_id:
        example: 10145824
        type: integer
    required:
    - office_id
    - remarks
    - user_id
    type: object
  handler.updateClosingBalancesAssignToTransferRequest:
    properties:
      user_id:
        example: 10012323
        type: integer
    required:
    - user_id
    type: object
  handler.updateClosingBalancesTransferRequest:
    properties:
      approver_id:
        example: 1001234
        type: integer
      cash_bal:
        example: 2000.5
        type: number
      from_user_id:
        example: 1001232
        type: integer
      remarks:
        example: Proceeding on leave
        type: string
      to_user_id:
        example: 10012323
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/handler.stampStatus'
        enum:
        - transfer
        - cash-transfer
        example: transfer
    required:
    - approver_id
    - from_user_id
    - remarks
    - to_user_id
    - type
    type: object
  handler.updateIPOSaleRequest:
    properties:
      approver_id:
        example: 10121212
        type: integer
      approver_remarks:
        example: Approved
        type: string
      is_approved:
        example: true
        type: boolean
    required:
    - approver_id
    - approver_remarks
    type: object
  handler.updateIPOsOBCSDReceiptsApproveRequest:
    properties:
      appr_user_id:
        example: 10130000
        type: integer
      approver_remarks:
        example: Approved/ Rejected etc
        type: string
      is_approved:
        example: true
        type: boolean
    required:
    - appr_user_id
    type: object
  handler.updateIPOsTransactionsStatusRequest:
    properties:
      approved_amt:
        example: 25000.75
        type: number
      approved_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      is_approved:
        example: true
        type: boolean
      is_not_approved:
        example: true
        type: boolean
      is_single_hand:
        example: true
        type: boolean
      iss_approver_remarks:
        example: Approved/ Rejected
        type: string
      iss_user_id:
        example: 10130000
        type: integer
      request_type:
        example: Request/ Remittance
        type: string
    required:
    - iss_user_id
    type: object
  handler.updateMiscTransactionsRequest:
    properties:
      approver_id:
        example: 10130000
        type: integer
      approver_remarks:
        example: Txn Approved
        type: string
      is_approved:
        example: true
        type: boolean
      transactionID:
        example: TX00000001
        type: string
    required:
    - approver_id
    - approver_remarks
    - transactionID
    type: object
  handler.updateOfficeTransactionsBankCreditLimitsRequest:
    properties:
      bank_credit_limit:
        example: 10000
        type: number
    required:
    - bank_credit_limit
    type: object
  handler.updateOfficesPerformDayEndRequest:
    properties:
      day_end_userid:
        example: 10130000
        minimum: 10000000
        type: integer
      is_admin_unit:
        example: true
        type: boolean
      trans_date:
        example: "2024-01-01"
        type: string
    required:
    - day_end_userid
    - trans_date
    type: object
  handler.updateStampAdvanceTxnRequest:
    properties:
      is_approved:
        example: true
        type: boolean
      try_approver_id:
        example: 10145826
        type: integer
    required:
    - try_approver_id
    type: object
  handler.updateStampBulkSalesRequest:
    properties:
      approver_id:
        example: 10121212
        type: integer
      is_approved:
        example: true
        type: boolean
    required:
    - approver_id
    type: object
  handler.updateStampErrorTransactionsRequest:
    properties:
      diff_details:
        additionalProperties:
          type: integer
        type: object
      office_id:
        example: 9000001
        type: integer
      remarks:
        example: remarks of error
        type: string
      status:
        enum:
        - "2"
        - "3"
        example: 2/3
        type: string
      user_id:
        example: 10145824
        type: integer
    required:
    - office_id
    - remarks
    - user_id
    type: object
  handler.updateStampObCsdReceiptsRequest:
    properties:
      appr_user_id:
        example: 10123232
        type: integer
      is_approved:
        example: true
        type: boolean
      remarks:
        example: approved
        type: string
    required:
    - appr_user_id
    type: object
  handler.updateStampSoiledRequest:
    properties:
      approver_id:
        example: 10145824
        type: integer
      disposal_details:
        example: Disposal made vide Sr/SPO's L.NO ..
        type: string
      is_approved:
        example: true
        type: boolean
    required:
    - approver_id
    type: object
  handler.updateStampsInventoryRequest:
    properties:
      sub_request_id:
        example: 21
        type: integer
      user_id:
        example: 9000003
        type: integer
    required:
    - sub_request_id
    - user_id
    type: object
  handler.updateStampsTransactionsStatusRequest:
    properties:
      amount:
        example: 25000.75
        type: number
      details:
        additionalProperties:
          type: integer
        type: object
      is_approved:
        example: true
        type: boolean
      is_not_approved:
        example: true
        type: boolean
      is_single_hand:
        example: true
        type: boolean
      iss_approver_remarks:
        example: Approved/ Rejected
        type: string
      req_type:
        example: process-pdg-issue
        type: string
      user_id:
        example: 10130000
        type: integer
    required:
    - user_id
    type: object
  handler.updateTransactionsStatusRequest:
    properties:
      amount:
        example: 25000.75
        type: number
      details:
        additionalProperties:
          type: integer
        type: object
      employee_id1:
        example: 10130000
        type: integer
      employee_id2:
        example: 10130000
        type: integer
      is_approved:
        example: true
        type: boolean
      is_not_approved:
        example: true
        type: boolean
      is_single_hand:
        example: true
        type: boolean
      remarks:
        example: Approved/ Rejected
        type: string
      request_type:
        example: Request/ Remittance
        type: string
      user_id:
        example: 10130000
        type: integer
    required:
    - request_type
    - user_id
    type: object
  handler.updateTransactionsWalletBalanceRequest:
    properties:
      amount:
        example: 25000.55
        type: number
      office-id:
        example: 9000003
        type: integer
      receipt-or-payment:
        enum:
        - R
        - P
        example: R/P
        type: string
      user-id:
        example: 10130000
        type: integer
    required:
    - amount
    - office-id
    - user-id
    type: object
  response.AccountingDetails:
    properties:
      account_code_description:
        type: string
      credit_or_debit:
        type: string
      digital_txns_amount:
        type: number
      digital_txns_count:
        type: integer
      gl_code:
        type: string
      hoa:
        type: string
      non_digital_txns_amount:
        type: number
      non_digital_txns_count:
        type: integer
      office_id:
        type: integer
      part:
        type: string
      positive_or_negative:
        type: string
      receipt_or_payment:
        type: string
      receipt_source:
        type: string
      remarks:
        type: string
      src_tran_id:
        type: string
      src_trans_date:
        type: string
      tot_amount:
        type: number
      tot_txns:
        type: integer
      treasury_tran_id:
        type: string
      try_posting_date:
        type: string
    type: object
  response.CashBalanceAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.cashBalance'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CashError:
    properties:
      cashErrorDetails:
        items:
          $ref: '#/definitions/response.cashErrorDetails'
        type: array
      curr_office:
        type: integer
      dest_amt:
        type: number
      dest_details:
        additionalProperties:
          type: integer
        type: object
      dest_office:
        type: integer
      dest_office_name:
        type: string
      error_id:
        type: string
      remarks:
        type: string
      src_amt:
        type: number
      src_details:
        additionalProperties:
          type: integer
        type: object
      src_office:
        type: integer
      src_office_name:
        type: string
      status:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      trans_type:
        type: string
      user_id:
        type: integer
    type: object
  response.CashInTransitAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.cashInTransit'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CashTransferLineLimitsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.cashTransferLineLimitsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ChequeRequest:
    properties:
      cheque_amount:
        type: number
      cheque_date:
        type: string
      cheque_no:
        type: string
      disposed_by:
        type: string
      disposed_date:
        type: string
      is_bank_drawl:
        type: boolean
      payee_name:
        type: string
      remarks:
        type: string
      request_id:
        type: string
      request_source:
        type: string
      transaction_date:
        type: string
      transaction_id:
        type: string
    type: object
  response.ChequesInTransitAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.chequesInTransit'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateAccountingTxnAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createAccountingDetails'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateBankAddlCreditApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.bankAddlCredit'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateCashBagApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.cashBag'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateCashBagsIssuesChequesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.cashBagTransactions'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateCashTransferLineLimitsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createCashTransferLineLimitsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateCurrenciesAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.CreateCurrenciesResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateCurrenciesResponse:
    properties:
      currency_id:
        example: CD001
        type: string
    type: object
  response.CreateCustomerTransactionAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createCustomerTransaction'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateDayBeginEndAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createDayBeginEnd'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateExceptionalWkgDayResponseAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createExceptionalWkgDayResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateIPOSaleApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createIPOSales'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateIPOsOBReceiptsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createIPOsOBReceipts'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateIPOsTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createIpoTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateMiscTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.CreateTreasuryMiscTransactionResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateOfficesResponseApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createOfficesResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampBulkSalesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createStampBulkSaleResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampObCsdReceiptsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createStampObReceiptsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampsAdvanceTxnsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createStampsAdvanceTxnResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampsSoiledApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.stampsSoiledResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampsSoiledWriteOffLimitsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.createStampsSoiledWriteOffResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateStampsTransactionsApiReaponse:
    properties:
      data:
        $ref: '#/definitions/response.createStampsTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateTransactionsBankRemittancesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.createTreasuryTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CreateTreasuryMiscTransactionResponse:
    properties:
      transaction_id:
        type: string
    type: object
  response.CurrenciesAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.currenciesResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.CustomerTransactionAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.customerTransaction'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.DayBeginEndAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.dayBeginEnd'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.DayBeginEndListAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.dayBeginEnd'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.DeleteCashTransferLineLimitsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.cashTransferLineLimitsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.DeleteExceptionalWkgDayAPIResponse:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.DeleteSoiledWriteOffLimitsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.stampsSoiledWriteOffResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ExceptionalWkgDayResponse:
    properties:
      approver_date:
        type: string
      approver_id:
        type: integer
      exceptional_wkg_day_date:
        type: string
      office_id:
        type: integer
      office_name:
        type: string
      remarks:
        type: string
    type: object
  response.FetchBODADataApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.bodaData'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchBankDrawlCheckApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.bankDrawlCheck'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchClosingBalancesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.closingBalanceResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchDayBeginEndStatusAPIResponse:
    properties:
      data:
        type: integer
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchOfficesDayEndStatusResponse:
    properties:
      data:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchReportsStampBalanceLastSupplyResponse:
    properties:
      data:
        $ref: '#/definitions/response.StampBal'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchStampsTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.StampsTransactionsIssued'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.FetchSummaryDetailsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.summaryData'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.IPOBalanceAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.iPOBalance'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.IPOsDenominationsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.iPOsDenominationsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.IPOsInTransitAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.iPOsInTransit'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.IPOsOBReceiptsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.iposOBReceipts'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.IpoTxnsResponse:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      ipodetailsDesc:
        items:
          $ref: '#/definitions/response.iPOdetails'
        type: array
      is_approved:
        type: boolean
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_office_name:
        type: string
      iss_user_id:
        type: integer
      iss_user_processed_date:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      req_office_id:
        type: integer
      req_office_name:
        type: string
      req_user_id:
        type: integer
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      trans_date:
        type: string
      transaction_id:
        type: string
      txn_status:
        type: string
    type: object
  response.IposError:
    properties:
      curr_office:
        type: integer
      dest_amt:
        type: number
      dest_details:
        example: '[{"detail":"detail1"},{"detail":"detail2"}]'
        type: string
      dest_office:
        type: integer
      dest_office_name:
        type: string
      diff_details:
        example: '[{"diff":"diff1"},{"diff":"diff2"}]'
        type: string
      error_id:
        type: string
      iposErrorDetails:
        items:
          $ref: '#/definitions/response.iposErrorDetails'
        type: array
      remarks:
        type: string
      src_amt:
        type: number
      src_details:
        example: '[{"detail":"detail1"},{"detail":"detail2"}]'
        type: string
      src_office:
        type: integer
      src_office_name:
        type: string
      status:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      trans_type:
        type: string
      user_id:
        type: integer
    type: object
  response.KafkaOfficeDetails:
    properties:
      office_id:
        type: integer
      office_name:
        type: string
      office_type_code:
        type: string
    type: object
  response.ListAccountCodesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.accountsMaster'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListAdvanceTxnApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampsAdvanceTxnResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListBankAddlCreditTxnsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.bankAddlCredit'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListBankCreditLimitAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.bankCreditLimit'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListBankRemittancesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.bankRemittances'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListCashBagsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.cashBagTransactions'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListCashErrorsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.CashError'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListCashTransferLineLimitsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.cashTransferLineLimitsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListChequesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ChequeRequest'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListCurrenciesAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.currenciesResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListCustomerTransactionAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.customerTransaction'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListDetailsByAccountCodeApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.AccountingDetails'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListExceptionalWkgDayResponseAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ExceptionalWkgDayResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListIPOErrorTransactionsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.IposError'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListIPOOBApprovalPdgApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.iposOBReceipts'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListIPOSalesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ipoSale'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListIPOTransactionsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.IpoTxnsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListIPOsDenominationsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.iPOsDenominationsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListMiscTransactionsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.treasuryMiscTransactionResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListOfficeIPOsObcsdReceiptsStockApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.iPOdetails'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListOfficesConfigAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.KafkaOfficeDetails'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListOfficesResponseAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.OfficesResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListPaymentDetailsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.PaymentDetails'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ListPdgChequesToBankOrAOApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.chequeRemittance'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListReportsTCBDataResponse:
    properties:
      data:
        $ref: '#/definitions/response.tcbBalance'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ListStampAdvanceBalanceApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.listStampAdvanceBalance'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampBalanceAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampBalance'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ListStampBulkSalesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampBulkSaleResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampObCsdReceiptsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsObReceipts'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampTransactionsApiResonse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsTransactionsIssued'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsCategoriesAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampscategoriesResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsDenominationsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsDenominationsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsErrorTransactionsApiRespnse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsError'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsInventoryAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsObReceiptsInventory'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsSoiledApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampsSoiledResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStampsSoiledWriteOffAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampsSoiledWriteOffResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListStamspTransactionsProcessOrAckApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.StampsTransactions'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListTcbBalanceAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.tcbBalance'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ListTransactionPendingApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.transactionStatus'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListTransactionsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.treasuryTransactions'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListTransactionsPdgProcessOrAckApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.TreasuryTxnsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListTransactionsPendingProcessApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.TreasuryTxnsResponse'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.ListTransactionsSpecialRemittanceSlipApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.SpecialRemittanceSlip'
        type: array
      limit:
        default: 5000
        type: integer
      message:
        type: string
      order_by:
        type: string
      returned_records_count:
        type: integer
      skip:
        default: 0
        type: integer
      sort_type:
        type: string
      status_code:
        type: integer
      total_records_count:
        type: integer
    type: object
  response.MiscTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.treasuryMiscTransactionResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.OfficeAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.OfficesResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.OfficesResponse:
    properties:
      bank_credit_limit:
        type: number
      bank_id:
        type: string
      cash_office_id:
        type: integer
      cash_office_name:
        type: string
      counter_cash_tfr_limit:
        type: number
      entered_by:
        type: string
      entry_date:
        type: string
      max_amt:
        type: number
      min_amt:
        type: number
      office_id:
        type: integer
      office_name:
        type: string
      postage_stamps_limit:
        type: number
      revenue_stamps_limit:
        type: number
      tran_id:
        type: string
      transit_duration:
        type: integer
      update_date:
        type: string
      updated_by:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  response.OutOfStockInventory:
    properties:
      category_desc:
        type: string
      denomination_desc:
        type: string
      denomination_value:
        type: string
    type: object
  response.OutOfStockInventoryAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.OutOfStockInventory'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.PaymentDetails:
    properties:
      remarks:
        type: string
      trans_amount:
        type: number
      trans_date:
        type: string
      trans_mode:
        type: string
      transdate:
        type: string
    type: object
  response.PostmanTransactions:
    properties:
      iss_approver:
        type: string
      iss_user:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_user:
        type: string
      request_type:
        type: string
      trans_date:
        type: string
    type: object
  response.PostmanTransactionsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.PostmanTransactions'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.SendChequesToBankOrAOApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.chequeRemittance'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.SpecialRemittanceSlip:
    properties:
      currency_details:
        items:
          $ref: '#/definitions/response.currencyDetails'
        type: array
      employee_name1:
        type: string
      employee_name2:
        type: string
      remarks:
        type: string
      remittance_id:
        type: string
      req_approver_amt:
        type: number
      to_office:
        type: string
      trans_date:
        type: string
    type: object
  response.StampBal:
    properties:
      last_stamp_transaction:
        $ref: '#/definitions/response.StampsTransactionsIssued'
      stampbalance:
        items:
          $ref: '#/definitions/response.stampBalance'
        type: array
    type: object
  response.StampBulkSalesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.stampBulkSaleResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.StampObCsdReceiptsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.StampsObReceipts'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.Stampdetails:
    properties:
      category_desc:
        type: string
      category_id:
        type: string
      denomination_count:
        type: integer
      denomination_desc:
        type: string
      denomination_id:
        type: string
      denomination_value:
        type: number
    type: object
  response.StampsAdvanceTxnsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.stampsAdvanceTxnResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.StampsDenominationsAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.StampsDenominationsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.StampsDenominationsResponse:
    properties:
      category_desc:
        type: string
      category_id:
        type: string
      denomination_desc:
        type: string
      denomination_id:
        type: string
      denomination_value:
        type: number
      entered_by:
        type: string
      entry_date:
        type: string
      office_id:
        type: integer
      product_category:
        type: string
      update_date:
        type: string
      updated_by:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  response.StampsError:
    properties:
      curr_office:
        type: integer
      dest_amt:
        type: number
      dest_details:
        additionalProperties:
          type: integer
        type: object
      dest_details_desc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      dest_office:
        type: integer
      dest_office_name:
        type: string
      diff_details:
        additionalProperties:
          type: integer
        type: object
      error_id:
        type: string
      remarks:
        type: string
      src_amt:
        type: number
      src_details:
        additionalProperties:
          type: integer
        type: object
      src_details_desc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      src_office:
        type: integer
      src_office_name:
        type: string
      stamps_error_details:
        items:
          $ref: '#/definitions/response.stampsErrorDetails'
        type: array
      status:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      trans_type:
        type: string
      user_id:
        type: integer
    type: object
  response.StampsInTransitAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.stampsInTransit'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.StampsObReceipts:
    properties:
      appr_user_id:
        type: integer
      approved_date:
        type: string
      invoice_date:
        type: string
      is_approved:
        type: boolean
      ob_transaction_id:
        type: string
      office_id:
        type: integer
      recd_user_id:
        type: integer
      receipt_amt:
        type: number
      receipt_details:
        additionalProperties:
          type: integer
        type: object
      receipt_details_desc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      receipt_invoice:
        type: string
      receipt_source:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
    type: object
  response.StampsObReceiptsInventory:
    properties:
      invoice_date:
        type: string
      office_id:
        type: integer
      recd_user_id:
        type: integer
      receipt_amt:
        type: number
      receipt_details:
        additionalProperties:
          type: integer
        type: object
      receipt_invoice:
        type: string
      receipt_source:
        type: string
      remarks:
        type: string
      request_id:
        type: string
      sub_request_id:
        type: integer
    type: object
  response.StampsTransactions:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_details:
        additionalProperties:
          type: integer
        type: object
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        additionalProperties:
          type: integer
        type: object
      is_approved:
        type: boolean
      is_single_hand:
        type: boolean
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_office_name:
        type: string
      iss_user_id:
        type: integer
      iss_user_name:
        type: string
      iss_user_processed_date:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_details:
        additionalProperties:
          type: integer
        type: object
      req_office_id:
        type: integer
      req_office_name:
        type: string
      req_user_id:
        type: integer
      req_user_name:
        type: string
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      stamp_details:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      stamp_issued_details:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      trans_date:
        type: string
      transaction_id:
        type: string
      txn_status:
        type: string
    type: object
  response.StampsTransactionsApiReaponse:
    properties:
      data:
        $ref: '#/definitions/response.StampsTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.StampsTransactionsIssued:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_details:
        additionalProperties:
          type: integer
        type: object
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        additionalProperties:
          type: integer
        type: object
      is_approved:
        type: boolean
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_office_name:
        type: string
      iss_user_id:
        type: integer
      iss_user_name:
        type: string
      iss_user_processed_date:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_details:
        additionalProperties:
          type: integer
        type: object
      req_office_id:
        type: integer
      req_office_name:
        type: string
      req_user_id:
        type: integer
      req_user_name:
        type: string
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      stamp_details:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      stamp_issued_details:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      trans_date:
        type: string
      transaction_id:
        type: string
      txn_status:
        type: string
    type: object
  response.StampsTxnsResponse:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        additionalProperties:
          type: integer
        type: object
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_user_id:
        type: integer
      iss_user_processed_date:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_details:
        additionalProperties:
          type: integer
        type: object
      req_office_id:
        type: integer
      req_user_id:
        type: integer
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      stampDetailsDesc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      trans_date:
        type: string
      transaction_id:
        type: string
    type: object
  response.StampscategoriesAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.stampscategoriesResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.TCBData:
    properties:
      amount:
        type: number
      purpose:
        type: string
      rct_or_pmt:
        type: string
      remarks:
        type: string
      tc_serial:
        type: string
      to_name:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      user_id:
        type: string
    type: object
  response.TcbBalTransferResponse:
    properties:
      approver_id:
        type: integer
      from_user_id:
        type: integer
      remarks:
        type: string
      to_user_id:
        type: integer
      trans_date:
        type: string
      trans_id:
        type: string
    type: object
  response.TcbBalanceAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.tcbBalance'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.TemporalApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.workflowResult'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.TransactionsBankRemittancesApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.TreasuryTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.TransitDetails:
    properties:
      trans_amount:
        type: number
      trans_count:
        type: integer
      trans_type:
        type: string
    type: object
  response.TransitDetailsAPIResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.TransitDetails'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.TreasuryTxnsResponse:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        additionalProperties:
          type: integer
        type: object
      cheque_date:
        type: string
      cheque_no:
        type: string
      currency_details:
        additionalProperties:
          type: integer
        type: object
      employee_id1:
        type: integer
      employee_id2:
        type: integer
      is_approved:
        type: boolean
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_office_name:
        type: string
      iss_user_id:
        type: integer
      iss_user_processed_date:
        type: string
      liability_details:
        type: string
      limit_id:
        type: string
      payee_name:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_office_id:
        type: integer
      req_office_name:
        type: string
      req_user_id:
        type: integer
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      trans_date:
        type: string
      transaction_id:
        type: string
      txn_mode:
        type: string
      txn_status:
        type: string
    type: object
  response.UpdateBankAddlCreditTxnApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.bankAddlCredit'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateBankCreditLimitAPIResponse:
    properties:
      data:
        $ref: '#/definitions/response.bankCreditLimit'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateCashErrorsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.CashError'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateChequesDisposalApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ChequeRequest'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateClosingBalancesTransferApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.TcbBalTransferResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateIPOSaleApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.ipoSale'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateIPOsErrorTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.IposError'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateIPOsTransactionsApiResonse:
    properties:
      data:
        $ref: '#/definitions/response.IpoTxnsResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateReportsTCBDenomDetailsApiResponse:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateStampSoiledApiResponse:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateStampsErrorTransactionsApiResponse:
    properties:
      data:
        $ref: '#/definitions/response.StampsError'
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.UpdateStampsInventoryAPIResponse:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.accountDescdetails:
    properties:
      account_code:
        type: string
      account_code_description:
        type: string
      amount:
        type: number
      hoa:
        type: string
      part:
        type: string
      positive_or_negative:
        type: string
      receipt_or_payment:
        type: string
    type: object
  response.accountsMaster:
    properties:
      account_code:
        type: string
      account_code_description:
        type: string
      hoa:
        type: string
      part:
        type: string
      positive_or_negative:
        type: string
      receipt_or_payment:
        type: string
    type: object
  response.bankAddlCredit:
    properties:
      addl_credit:
        type: number
      approved_addl_credit:
        type: number
      approver_date:
        type: string
      approver_id:
        type: string
      approver_name:
        type: string
      approver_remarks:
        type: string
      is_approved:
        type: boolean
      office_id:
        type: string
      office_name:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  response.bankCreditLimit:
    properties:
      bank_credit_limit:
        type: number
      office_name:
        type: string
      tran_id:
        type: string
    type: object
  response.bankDrawlCheck:
    properties:
      addl_credit:
        type: number
      bal_credit:
        type: number
      bank_credit_limit:
        type: number
      drawn_amt:
        type: number
      office_id:
        type: string
    type: object
  response.bankRemittances:
    properties:
      acg_id:
        type: string
      amount:
        type: number
      currency_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      employee_id1:
        type: integer
      employee_id2:
        type: integer
      office_id:
        type: integer
      remarks:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
    type: object
  response.bodaData:
    properties:
      accountingDetail:
        items:
          $ref: '#/definitions/response.AccountingDetails'
        type: array
      cashBagDetail:
        items:
          $ref: '#/definitions/response.cashBagDetail'
        type: array
      closing_bal:
        type: number
      dayend_status:
        type: integer
      ipobalance:
        items:
          $ref: '#/definitions/response.iPOBal'
        type: array
      max_bal:
        type: number
      min_bal:
        type: number
      office_id:
        type: integer
      opening_bal:
        type: number
      payments:
        type: number
      receipts:
        type: number
      stampBalance:
        items:
          $ref: '#/definitions/response.stampCatBal'
        type: array
      trans_date:
        type: string
      transit_cash:
        type: number
      transit_stamps:
        type: number
    type: object
  response.cashBag:
    properties:
      bag_weight:
        type: number
      cash_bag_id:
        type: string
      from_office_id:
        type: integer
      from_user_id:
        type: integer
      to_office_id:
        type: integer
      trans_date:
        type: string
      trans_ids:
        type: string
    type: object
  response.cashBagDetail:
    properties:
      bag_weight:
        type: string
      cash_bag_id:
        type: string
      remarks:
        type: string
      trans_details:
        type: string
      trans_type:
        type: string
    type: object
  response.cashBagTransactions:
    properties:
      cash_bag_id:
        type: string
      from_office_id:
        type: integer
      remarks:
        type: string
      to_office_id:
        type: integer
      trans_amount:
        type: number
      trans_date:
        type: string
      trans_details:
        type: string
      trans_id:
        type: string
      trans_type:
        type: string
    type: object
  response.cashBalance:
    properties:
      closing_bal:
        type: number
      excess_amt:
        type: number
      max_amt:
        type: number
      office_name:
        type: string
      opening_bal:
        type: number
      payments:
        type: number
      receipts:
        type: number
      trans_date:
        type: string
    type: object
  response.cashErrorDetails:
    properties:
      error_id:
        type: string
      office_id:
        type: integer
      office_name:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.cashInTransit:
    properties:
      amount_sent:
        type: number
      from_office:
        type: string
      from_unit_id:
        type: integer
      is_rsao:
        type: boolean
      to_office:
        type: string
      to_unit_id:
        type: integer
      trans_date:
        type: string
      trans_id:
        type: string
      transaction_date:
        type: string
    type: object
  response.cashTransferLineLimitsResponse:
    properties:
      entered_by_userid:
        type: string
      entry_date:
        type: string
      limit_amt:
        type: number
      limit_description:
        type: string
      limit_id:
        type: string
      update_date:
        type: string
      updated_by_userid:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  response.chequeDetails:
    properties:
      cheque_amount:
        type: number
      cheque_date:
        type: string
      cheque_no:
        type: string
    type: object
  response.chequeRemittance:
    properties:
      bo_sent_date:
        type: string
      bo_user_id:
        type: integer
      cheque_amount:
        type: number
      cheque_date:
        type: string
      cheque_no:
        type: string
      clearing_sent_date:
        type: string
      curr_office_id:
        type: integer
      ddo_user_id:
        type: integer
      ncddo_sent_date:
        type: string
      ncddo_user_id:
        type: integer
      remarks:
        type: string
      request_source:
        type: string
      so_sent_date:
        type: string
      so_user_id:
        type: integer
      src_office_id:
        type: integer
      trans_date:
        type: string
      transaction_id:
        type: string
      transdate:
        type: string
    type: object
  response.chequesInTransit:
    properties:
      cheque_amount:
        type: number
      cheque_date:
        type: string
      cheque_no:
        type: string
      from_office:
        type: string
      from_unit_id:
        type: integer
      is_rsao:
        type: boolean
      to_office:
        type: string
      to_unit_id:
        type: integer
      trans_date:
        type: string
      trans_id:
        type: string
      transaction_date:
        type: string
    type: object
  response.closingBalanceResponse:
    properties:
      ipobal:
        type: number
      stampbal:
        type: number
      tcbbal:
        type: number
    type: object
  response.createAccountingDetails:
    properties:
      treasury_tran_id:
        type: string
    type: object
  response.createCashTransferLineLimitsResponse:
    properties:
      limit_id:
        type: string
    type: object
  response.createCustomerTransaction:
    properties:
      trans_id:
        type: string
    type: object
  response.createDayBeginEnd:
    properties:
      office_id:
        type: integer
    type: object
  response.createExceptionalWkgDayResponse:
    properties:
      office_id:
        type: integer
    type: object
  response.createIPOSales:
    properties:
      transaction_id:
        type: string
    type: object
  response.createIPOsOBReceipts:
    properties:
      ob_transaction_id:
        type: string
    type: object
  response.createIpoTxnsResponse:
    properties:
      transaction_id:
        type: string
    type: object
  response.createOfficesResponse:
    properties:
      tran_id:
        type: string
    type: object
  response.createStampBulkSaleResponse:
    properties:
      tran_id:
        type: string
    type: object
  response.createStampObReceiptsResponse:
    properties:
      ob_transaction_id:
        type: string
    type: object
  response.createStampsAdvanceTxnResponse:
    properties:
      tran_id:
        type: string
    type: object
  response.createStampsSoiledWriteOffResponse:
    properties:
      limit_id:
        type: string
    type: object
  response.createStampsTxnsResponse:
    properties:
      transaction_id:
        type: string
    type: object
  response.createTreasuryTxnsResponse:
    properties:
      transaction_id:
        type: string
    type: object
  response.currenciesResponse:
    properties:
      currency_id:
        example: CD001
        type: string
      currency_type:
        example: Notes, Coins etc
        type: string
      denomination:
        example: 10
        type: number
      entered_by_user:
        example: "10130000"
        type: string
      entry_date:
        example: "1970-01-01T00:00:00Z"
        type: string
      update_date:
        example: "1970-01-01T00:00:00Z"
        type: string
      updated_by_user:
        example: "10130000"
        type: string
      valid_from:
        example: "1970-01-01T00:00:00Z"
        type: string
      valid_to:
        example: "1970-01-01T00:00:00Z"
        type: string
    type: object
  response.currencyDetails:
    properties:
      count:
        type: integer
      currency_id:
        type: string
      currency_type:
        type: string
      denomination:
        type: number
    type: object
  response.customerTransaction:
    properties:
      approver_date:
        type: string
      approver_id:
        type: string
      bill_amount:
        type: number
      bill_date:
        type: string
      bill_id:
        type: string
      bill_remarks:
        type: string
      cheque_date:
        type: string
      cheque_no:
        type: string
      customer_id:
        type: string
      customer_name:
        type: string
      customer_type_id:
        type: string
      customer_type_name:
        type: string
      is_advance_customer:
        type: boolean
      is_approved:
        type: boolean
      is_realized:
        type: boolean
      is_receipt_payment:
        type: string
      iss_office_id:
        type: integer
      office_id:
        type: integer
      realization_date:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
      trans_id:
        type: string
      tx_amount:
        type: number
      tx_mode:
        type: string
      user_id:
        type: string
    type: object
  response.dayBeginEnd:
    properties:
      day_begin_user:
        type: string
      day_begin_userid:
        type: integer
      day_end_time:
        type: string
      day_end_user:
        type: string
      day_end_userid:
        type: integer
      is_admin_unit:
        type: boolean
      office_id:
        type: integer
      transaction_date:
        type: string
    type: object
  response.iPOBal:
    properties:
      balance:
        type: integer
      denomination:
        type: string
    type: object
  response.iPOBalance:
    properties:
      closing_bal:
        type: integer
      denomination_id:
        type: string
      ipo_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      issues:
        type: integer
      office_id:
        type: integer
      opening_bal:
        type: integer
      receipts:
        type: integer
      trans_date:
        type: string
    type: object
  response.iPOdetails:
    properties:
      curr_qty:
        type: integer
      curr_serial:
        type: string
      denomination_Desc:
        type: string
      denomination_Value:
        type: string
      denomination_id:
        type: string
      end_serial:
        type: string
      prefix_id:
        type: string
      start_serial:
        type: string
      tot_quantity:
        type: integer
    type: object
  response.iPOsDenominationsResponse:
    properties:
      commission:
        type: string
      denomination_desc:
        example: IPO 10 Rupees, IPO 20 Rupees etc
        type: string
      denomination_id:
        example: IPO0001
        type: string
      denomination_value:
        example: 50
        type: number
      entered_by_user:
        example: "10130000"
        type: string
      entry_date:
        example: "1970-01-01T00:00:00Z"
        type: string
      ipo_tariff_id:
        type: string
      product_code:
        type: string
      product_id:
        type: string
      update_date:
        example: "1970-01-01T00:00:00Z"
        type: string
      updated_by_user:
        example: "10130000"
        type: string
      valid_from:
        example: "1970-01-01T00:00:00Z"
        type: string
      valid_to:
        example: "1970-01-01T00:00:00Z"
        type: string
      value_code:
        type: string
    type: object
  response.iPOsInTransit:
    properties:
      amount_sent:
        type: number
      from_office:
        type: string
      from_unit_id:
        type: integer
      sent_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      to_office:
        type: string
      to_unit_id:
        type: integer
      trans_date:
        type: string
      trans_id:
        type: string
      transaction_date:
        type: string
    type: object
  response.ipoSale:
    properties:
      approved_date:
        type: string
      approver_id:
        type: integer
      approver_name:
        type: string
      approver_remarks:
        type: string
      is_approved:
        type: boolean
      office_id:
        type: integer
      office_name:
        type: string
      sale_amount:
        type: number
      sale_commission:
        type: number
      sale_details:
        items:
          type: integer
        type: array
      sold_to:
        type: string
      trans_date:
        type: string
      transaction_id:
        type: string
      transdate:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.iposErrorDetails:
    properties:
      error_id:
        type: string
      office_id:
        type: integer
      remarks:
        type: string
      trans_date:
        type: string
      user_id:
        type: integer
    type: object
  response.iposOBReceipts:
    properties:
      appr_user_id:
        type: integer
      approved_date:
        type: string
      approver_remarks:
        type: string
      invoice_date:
        type: string
      ipo_details:
        items:
          $ref: '#/definitions/response.iPOdetails'
        type: array
      is_approved:
        type: boolean
      ob_transaction_id:
        type: string
      office_id:
        type: integer
      recd_user_id:
        type: integer
      receipt_invoice:
        type: string
      receipt_source:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
    type: object
  response.listStampAdvanceBalance:
    properties:
      advance_issued:
        type: number
      amount_realized:
        type: number
      balance_details:
        additionalProperties:
          type: integer
        type: object
      closing_balance:
        type: number
      office_id:
        type: integer
      opening_balance:
        type: number
      remarks:
        type: string
      stampDetailsDesc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      trans_date:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.stampBalance:
    properties:
      category_desc:
        type: string
      category_id:
        type: string
      closing_bal:
        type: integer
      denomination_desc:
        type: string
      denomination_id:
        type: string
      denomination_value:
        type: number
      issues:
        type: integer
      office_id:
        type: integer
      opening_bal:
        type: integer
      product_category:
        type: string
      receipts:
        type: integer
      trans_date:
        type: string
    type: object
  response.stampBulkSaleResponse:
    properties:
      approved_date:
        type: string
      approver_id:
        type: integer
      bank_branch:
        type: string
      chq_realise_date:
        type: string
      instrument_date:
        type: string
      instrument_no:
        type: string
      is_approved:
        type: boolean
      is_realized:
        type: boolean
      office_id:
        type: integer
      payment_mode:
        type: string
      remarks:
        type: string
      sale_amt:
        type: number
      sale_details:
        additionalProperties:
          type: integer
        type: object
      sold_to:
        type: string
      stampDetailsDesc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      tran_id:
        type: string
      trans_date:
        type: string
      user_id:
        type: integer
    type: object
  response.stampCatBal:
    properties:
      balance:
        type: number
      category:
        type: string
    type: object
  response.stampsAdvanceTxnResponse:
    properties:
      adv_amt:
        type: number
      adv_txn_details:
        additionalProperties:
          type: integer
        type: object
      adv_user_id:
        type: integer
      approved_date:
        type: string
      is_approved:
        type: boolean
      office_id:
        type: integer
      remarks:
        type: string
      stampDetailsDesc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      tran_id:
        type: string
      trans_date:
        type: string
      trans_type:
        type: string
      try_approver_id:
        type: integer
      try_user_id:
        type: integer
    type: object
  response.stampsErrorDetails:
    properties:
      error_id:
        type: string
      office_id:
        type: integer
      office_name:
        type: string
      remarks:
        type: string
      trans_date:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.stampsInTransit:
    properties:
      amount_sent:
        type: number
      from_office:
        type: string
      from_unit_id:
        type: integer
      sentDetails:
        additionalProperties:
          type: integer
        type: object
      stamp_details:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      to_office:
        type: string
      to_unit_id:
        type: integer
      trans_date:
        type: string
      trans_id:
        type: string
      transaction_date:
        type: string
    type: object
  response.stampsSoiledResponse:
    properties:
      amount:
        type: number
      approver_date:
        type: string
      approver_id:
        type: integer
      disposal_details:
        type: string
      is_approved:
        type: boolean
      office_id:
        type: integer
      remarks:
        type: string
      soiled_details:
        additionalProperties:
          type: integer
        type: object
      stampDetailsDesc:
        items:
          $ref: '#/definitions/response.Stampdetails'
        type: array
      tran_id:
        type: string
      trans_date:
        type: string
      user_id:
        type: integer
    type: object
  response.stampsSoiledWriteOffResponse:
    properties:
      entered_by_userid:
        type: string
      entry_date:
        type: string
      limit_id:
        type: string
      limit_per_annum:
        type: string
      limit_per_time:
        type: string
      update_date:
        type: string
      updated_by_userid:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  response.stampscategoriesResponse:
    properties:
      category_desc:
        type: string
      category_id:
        type: string
      entered_by_userid:
        type: string
      entry_date:
        type: string
      gl_code:
        type: string
      update_date:
        type: string
      updated_by_userid:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  response.subOrdinateOfficeSummarydetails:
    properties:
      closing_balance:
        type: number
      office_date:
        type: string
      opening_balance:
        type: number
      subordinate_office_id:
        type: string
    type: object
  response.summaryData:
    properties:
      accountingDetails:
        items:
          $ref: '#/definitions/response.AccountingDetails'
        type: array
      cheque_issue_details:
        items:
          $ref: '#/definitions/response.chequeDetails'
        type: array
      cheque_remittance_details:
        items:
          $ref: '#/definitions/response.chequeDetails'
        type: array
      closing_bal:
        type: number
      dayend_status:
        type: integer
      ipobalance:
        items:
          $ref: '#/definitions/response.iPOBal'
        type: array
      max_bal:
        type: number
      min_bal:
        type: number
      office_id:
        type: integer
      opening_bal:
        type: number
      payments:
        type: number
      receipts:
        type: number
      stampBalance:
        items:
          $ref: '#/definitions/response.stampCatBal'
        type: array
      subOrdinateOfficeSummarydetails:
        items:
          $ref: '#/definitions/response.subOrdinateOfficeSummarydetails'
        type: array
      trans_date:
        type: string
      transit_cash:
        type: number
      transit_ipos:
        type: number
      transit_stamps:
        type: number
    type: object
  response.tcbBalance:
    properties:
      cheque_issue_details:
        items:
          $ref: '#/definitions/response.chequeDetails'
        type: array
      cheque_remittance_details:
        items:
          $ref: '#/definitions/response.chequeDetails'
        type: array
      closing_bal:
        type: number
      currency_details:
        example: '[{"keyname":"key1","keyvalue":"keyvalue1"},{"keyname":"key2","keyvalue":"keyvalue2"}]'
        type: string
      currency_id_count:
        additionalProperties:
          type: integer
        type: object
      dayend_status:
        type: integer
      office_id:
        type: integer
      opening_bal:
        type: number
      payments:
        type: number
      receipts:
        type: number
      tcb_data:
        items:
          $ref: '#/definitions/response.TCBData'
        type: array
      trans_date:
        type: string
      trans_id:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.transactionStatus:
    properties:
      status:
        type: string
      transaction_count:
        type: integer
      transaction_type:
        type: string
    type: object
  response.treasuryMiscTransactionResponse:
    properties:
      accountDescdetails:
        items:
          $ref: '#/definitions/response.accountDescdetails'
        type: array
      approver_date:
        type: string
      approver_id:
        type: integer
      approver_remarks:
        type: string
      is_approved:
        type: boolean
      office_id:
        type: integer
      remarks:
        type: string
      req_amount:
        type: number
      req_details:
        additionalProperties:
          type: number
        type: object
      request_type:
        type: string
      trans_date:
        type: string
      transaction_id:
        type: string
      txn_mode:
        type: string
      user_id:
        type: integer
    type: object
  response.treasuryTransactions:
    properties:
      ack_amount:
        type: number
      ack_approver_remarks:
        type: string
      ack_date:
        type: string
      ack_details:
        additionalProperties:
          type: integer
        type: object
      ack_user_id:
        type: integer
      approved_amount:
        type: number
      approved_details:
        additionalProperties:
          type: integer
        type: object
      cheque_date:
        type: string
      cheque_no:
        type: string
      currency_details:
        additionalProperties:
          type: integer
        type: object
      employee_id1:
        type: integer
      employee_id2:
        type: integer
      is_approved:
        type: boolean
      is_single_hand:
        type: boolean
      is_special_remittance:
        type: boolean
      iss_approver_date:
        type: string
      iss_approver_id:
        type: integer
      iss_approver_remarks:
        type: string
      iss_office_id:
        type: integer
      iss_office_name:
        type: string
      iss_user_id:
        type: integer
      iss_user_name:
        type: string
      iss_user_processed_date:
        type: string
      liability_details:
        type: string
      limit_id:
        type: string
      payee_name:
        type: string
      remarks:
        type: string
      req_amount:
        type: number
      req_approver_amt:
        type: number
      req_approver_date:
        type: string
      req_approver_id:
        type: integer
      req_approver_remarks:
        type: string
      req_office_id:
        type: integer
      req_office_name:
        type: string
      req_user_id:
        type: integer
      req_user_name:
        type: string
      request_id:
        type: string
      request_source:
        type: string
      request_type:
        type: string
      trans_date:
        type: string
      transaction_id:
        type: string
      transdate:
        type: string
      txn_mode:
        type: string
      txn_status:
        type: string
    type: object
  response.workflowResult:
    properties:
      errors:
        items:
          additionalProperties: true
          type: object
        type: array
      successful_responses:
        items:
          additionalProperties: true
          type: object
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support_cept@indiapost.gov.in
    name: API Support Team
    url: http://cept.gov.in/support
  description: A comprehensive API for managing addresses, offering endpoints for
    creation, update, deletion, and retrieval of address data.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://cept.gov.in/terms
  title: Treasury Management API
  version: "1.0"
paths:
  /cash-bags:
    get:
      description: List pending Cash Bag Transactions of an office
      parameters:
      - description: From Office ID
        in: query
        name: from-office-id
        required: true
        type: string
      - description: To Office ID
        in: query
        name: to-office-id
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of pending cash bag transactions of the specified office
          schema:
            $ref: '#/definitions/response.ListCashBagsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Pending Cash Bag Transaction
      tags:
      - Cash/ Cheque - Transactions
    post:
      description: Create a new Cash Bag
      parameters:
      - description: Information about the new cash bag transaction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createCashBagsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created cash bag transaction
          schema:
            $ref: '#/definitions/response.CreateCashBagApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Cash Bag
      tags:
      - Cash/ Cheque - Transactions
  /cash-bags/issued-cheques:
    post:
      description: To include issued cheques in cash bag
      parameters:
      - description: Include cheque issue in cash bag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createCashBagsIssuesChequesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Include cheque in cash bag
          schema:
            $ref: '#/definitions/response.CreateCashBagsIssuesChequesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Include issued cheques in cash bag
      tags:
      - Tools - Cash bag
  /cash-errors:
    get:
      description: Fetch Cash Error Transactions
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Is Raising Office
        in: query
        name: is-raising-office
        type: boolean
      - description: Type
        enum:
        - all
        - by-id
        - remittance
        - linked
        - configured
        - pending
        - approve
        - process
        - acct-code
        - errors
        - transfer
        - cash-transfer
        - disposal
        in: query
        name: type
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Fetch Cash Error transactions
          schema:
            $ref: '#/definitions/response.ListCashErrorsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch Cash error Transactions
      tags:
      - Cash - Error Transactions
  /cash-errors/{error-id}:
    put:
      description: Update Cash Error Transactions
      parameters:
      - description: Update Cash Error transactions
        in: path
        name: error-id
        required: true
        type: string
      - description: Status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateCashErrorsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update Cash Error transaction
          schema:
            $ref: '#/definitions/response.UpdateCashErrorsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Cash error Transactions
      tags:
      - Cash - Error Transactions
  /cash-transfer-line-limits:
    get:
      description: Retrieve a list of all cash limits of employees.
      parameters:
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 5000
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - description: Order by field
        in: query
        name: orderBy
        type: string
      - description: Sort type
        in: query
        name: sortType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all cash limits with their details
          schema:
            $ref: '#/definitions/response.ListCashTransferLineLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Cash Transfer Line Limits Handled
      tags:
      - Configure Cash Conveyance Limit
    post:
      consumes:
      - application/json
      description: create a new cash conveyance limit with description
      parameters:
      - description: Create Cash conveyance limit request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createCashTransferLineLimitsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Cash Conveyance Limit created
          schema:
            $ref: '#/definitions/response.CreateCashTransferLineLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a new cash conveyance limit
      tags:
      - Configure Cash Conveyance Limit
  /cash-transfer-line-limits/{limit-id}:
    delete:
      description: Update (soft delete) a specific Cash Transfer limit.
      parameters:
      - description: limit-id
        in: path
        name: limit-id
        required: true
        type: string
      - description: updated-by-userid
        in: query
        name: updated-by-userid
        required: true
        type: string
      - description: valid-to
        in: query
        name: valid-to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified currency denomination updated or soft
            deleted
          schema:
            $ref: '#/definitions/response.DeleteCashTransferLineLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Cash Transfer Line Limit
      tags:
      - Configure Cash Conveyance Limit
    get:
      description: Retrieve information about a specific Cash Transfer limit.
      parameters:
      - description: Fetch Cash Transfer Line Limit Request
        in: path
        name: limit-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of a specific cash limit with its details
          schema:
            $ref: '#/definitions/response.CashTransferLineLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Cash Transfer Line Limit by ID
      tags:
      - Configure Cash Conveyance Limit
  /currencies:
    get:
      description: Retrieve a list of all currency denominations.
      parameters:
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - default: '"currency_id"'
        description: Order by field
        in: query
        name: orderBy
        type: string
      - default: '"asc"'
        description: Sort type
        in: query
        name: sortType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all currency denominations with their details
          schema:
            $ref: '#/definitions/response.ListCurrenciesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Currency Denominations
      tags:
      - Configure Currency Denomination
    post:
      description: Create a new currency denomination.
      parameters:
      - description: Information about adding a currency denomination
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createCurrenciesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created currency denomination details
          schema:
            $ref: '#/definitions/response.CreateCurrenciesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Currency Denomination
      tags:
      - Configure Currency Denomination
  /currencies/{currency-id}:
    delete:
      description: Update a specific currency denomination details.
      parameters:
      - description: Details identified by currencyId
        in: path
        name: currency-id
        required: true
        type: string
      - description: User who updated the currency denomination
        in: query
        name: user-id
        required: true
        type: string
      - description: Valid to date
        in: query
        name: valid-to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified currency denomination updated
          schema:
            $ref: '#/definitions/response.CurrenciesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Currency Denomination
      tags:
      - Configure Currency Denomination
    get:
      description: Retrieve information about a specific currency denomination.
      parameters:
      - description: Get currencey denomination by ID
        in: path
        name: currency-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified currency denomination
          schema:
            $ref: '#/definitions/response.CurrenciesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Currency Denomination
      tags:
      - Configure Currency Denomination
  /customer-transactions:
    get:
      description: Retrieve information about all customer transactions
      parameters:
      - description: 'Office ID (example: 90000003)'
        in: query
        name: office-id
        required: true
        type: integer
      - description: 'From Date (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'To Date (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: Is PDG
        in: query
        name: is-pdg
        type: boolean
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get Details of all customer transactions
          schema:
            $ref: '#/definitions/response.ListCustomerTransactionAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Customer Transactions
      tags:
      - Customer - Transactions
    post:
      description: Create Customer Transactions
      parameters:
      - description: Create customer transaction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createCustomerTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Create customer transactions
          schema:
            $ref: '#/definitions/response.CreateCustomerTransactionAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Customer Transactions
      tags:
      - Customer - Transactions
  /customer-transactions/{transaction-id}/approve:
    put:
      description: Approve Customer Transactions
      parameters:
      - description: Information about approval of customer transactions
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Approver ID
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.approveCustomerTransactionsApproveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of approved customer transactions
          schema:
            $ref: '#/definitions/response.CustomerTransactionAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve Customer Transactions
      tags:
      - Customer - Transactions
  /ipos-denominations:
    get:
      description: Retrieve a list of all IPO denominations.
      parameters:
      - description: Number of IPO denominations to be skipped.
        in: query
        name: skip
        type: integer
      - description: Limit of the number of IPO denominations to be fetched.
        in: query
        name: limit
        type: integer
      - description: Order by which the IPO denominations are to be sorted.
        in: query
        name: orderBy
        type: string
      - description: Sort type of the IPO denominations.
        in: query
        name: sortType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all IPO denominations with their details.
          schema:
            $ref: '#/definitions/response.ListIPOsDenominationsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All IPO Denominations
      tags:
      - Configure IPOs Denomination
  /ipos-denominations/{denomination-id}:
    get:
      description: Retrieve information about a specific IPO denomination.
      parameters:
      - description: Get IPO Denomination by ID
        in: path
        name: denomination-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of the specified IPO denomination.            '
          schema:
            $ref: '#/definitions/response.IPOsDenominationsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific IPO Denominations
      tags:
      - Configure IPOs Denomination
  /ipos-error-transactions:
    get:
      description: Fetch IPO Error Transactions
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Type
        enum:
        - errors
        - pending
        in: query
        name: type
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Fetch IPO Error transactions
          schema:
            $ref: '#/definitions/response.ListIPOErrorTransactionsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch IPO error Transactions
      tags:
      - IPO - Error Transactions
  /ipos-error-transactions/{error-id}:
    put:
      description: Update IPO Error Transactions
      parameters:
      - description: Error ID
        in: path
        name: error-id
        required: true
        type: string
      - description: Update IPO Error transactions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateIPOsErrorTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update IPO Error transactions
          schema:
            $ref: '#/definitions/response.UpdateIPOsErrorTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update IPO error Transactions
      tags:
      - IPO - Error Transactions
  /ipos-ob-csd-receipts/{ob-transaction-id}/approve:
    put:
      description: Approving the IPO transaction request.
      parameters:
      - description: Transaction ID
        in: path
        name: ob-transaction-id
        required: true
        type: string
      - description: Approver Remarks
        in: body
        name: body
        schema:
          $ref: '#/definitions/handler.updateIPOsOBCSDReceiptsApproveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Approved IPO transaction request details
          schema:
            $ref: '#/definitions/response.IPOsOBReceiptsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve IPO Transaction Request
      tags:
      - IPO - OB/ CSD Receipt
  /ipos-sales:
    get:
      description: Retrieve information about all IPO sales.
      parameters:
      - description: Office ID
        in: query
        name: office_id
        required: true
        type: string
      - description: From Date
        in: query
        name: from_date
        type: string
      - description: To Date
        in: query
        name: to_date
        type: string
      - description: Is PDG
        in: query
        name: is_pdg
        type: boolean
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get Details of all stamp bulk sales
          schema:
            $ref: '#/definitions/response.ListIPOSalesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get IPO Sales List
      tags:
      - IPO - Sales
    post:
      description: Create information about IPO sales.
      parameters:
      - description: ' None                                                  '
        in: body
        name: createIPOSalesRequest
        required: true
        schema:
          $ref: '#/definitions/handler.createIPOSalesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of created IPO sale
          schema:
            $ref: '#/definitions/response.CreateIPOSaleApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create IPO sales
      tags:
      - IPOs - Sales
  /ipos-sales/{transaction-id}/approve:
    put:
      description: Approve IPO sale.
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Information about approving IPO sales
        in: body
        name: updateIPOSaleRequest
        required: true
        schema:
          $ref: '#/definitions/handler.updateIPOSaleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of approved IPO sale
          schema:
            $ref: '#/definitions/response.UpdateIPOSaleApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve IPO sale
      tags:
      - IPOs - Approve Sale
  /ipos-transactions:
    get:
      description: List IPO Transaction requests along with current status
      parameters:
      - description: Office ID of the user
        in: query
        name: office-id
        required: true
        type: string
      - description: From date of IPO transactions
        in: query
        name: from-date
        type: string
      - description: To date of IPO transactions
        in: query
        name: to-date
        type: string
      - description: Status of IPO transactions
        in: query
        name: txn-status
        type: string
      - description: type
        enum:
        - all
        - pending
        - remittance
        in: query
        name: type
        required: true
        type: string
      - description: Skip records
        in: query
        name: skip
        type: integer
      - description: Limit records
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Detailed list of pending IPO transaction requests
          schema:
            $ref: '#/definitions/response.ListIPOTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: IPO Transaction requests
      tags:
      - IPO - Transactions
    post:
      description: Create a new IPO Transaction request
      parameters:
      - description: Information about the new IPO transaction request
        in: body
        name: createIPOsTransactionsRequest
        required: true
        schema:
          $ref: '#/definitions/handler.createIPOsTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created IPO transaction
          schema:
            $ref: '#/definitions/response.CreateIPOsTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New IPO Transaction Requests
      tags:
      - IPO - Transactions
  /ipos-transactions/{transaction-id}/change-status:
    put:
      description: Information of IPO Transaction issue request to be processed  (e.g.,
        iss_user_id,approved_details,approved_amt,status, e.t.c.,)
      parameters:
      - description: Process IPO txn at Dest Office
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Type of transaction to be processed
        enum:
        - process-pdg-issue
        - approve-pdg-source
        - approve-pdg-issue
        - process-pdg-ack
        in: query
        name: type
        required: true
        type: string
      - description: Process IPO txn at Dest Office
        in: body
        name: updateIPOsTransactionsStatusRequest
        required: true
        schema:
          $ref: '#/definitions/handler.updateIPOsTransactionsStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of IPO transaction issue request processed
          schema:
            $ref: '#/definitions/response.UpdateIPOsTransactionsApiResonse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Process IPO  Transaction Issue Request
      tags:
      - IPO - Transactions
  /misc-transactions:
    get:
      description: List miscellaneous Treasury Transaction
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Is PDG
        in: query
        name: is-pdg
        type: boolean
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of miscellaneous treasury transactions
          schema:
            $ref: '#/definitions/response.ListMiscTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Misc Treasury Transaction
      tags:
      - Misc_transactions
    post:
      description: Create a new miscellaneous Treasury Transaction
      parameters:
      - description: Information about the new miscellaneous treasury transaction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createMiscTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created miscellaneous treasury transaction
          schema:
            $ref: '#/definitions/response.CreateMiscTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Misc Treasury Transaction
      tags:
      - Misc_transactions
  /misc-transactions/{transaction-id}:
    get:
      description: List miscellaneous Treasury Transaction by ID
      parameters:
      - description: transaction-id
        in: path
        name: transaction-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of miscellaneous treasury transaction of the specified
            ID
          schema:
            $ref: '#/definitions/response.MiscTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Misc Treasury Transaction by ID
      tags:
      - Misc_transactions
  /misc-transactions/{transaction-id}/approve:
    put:
      description: Approve a new miscellaneous Treasury Transaction
      parameters:
      - description: Transaction-id
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Is Approved
        in: body
        name: body
        schema:
          $ref: '#/definitions/handler.updateMiscTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the approved miscellaneous treasury transaction
          schema:
            $ref: '#/definitions/response.MiscTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve Misc Treasury Transaction
      tags:
      - Misc_transactions
  /misc-transactions/account-codes:
    get:
      description: List account codes
      parameters:
      - description: List account codes for receipt or pmt
        in: query
        name: receipt-or-pmt
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List accounts master details
          schema:
            $ref: '#/definitions/response.ListAccountCodesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List account codes
      tags:
      - Misc_transactions
  /office-transactions/{transaction-id}:
    delete:
      description: Update a specific office.
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: User who updated the office
        in: query
        name: updated-by
        required: true
        type: string
      - description: Date when the office details are valid till
        in: query
        name: valid-to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified office updated
          schema:
            $ref: '#/definitions/response.OfficeAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Office
      tags:
      - Configure Offices
  /office-transactions/{transaction-id}/bank-credit-limits:
    put:
      description: Update Bank credit limit of an office.
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Bank Credit Limit
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateOfficeTransactionsBankCreditLimitsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified office updated
          schema:
            $ref: '#/definitions/response.UpdateBankCreditLimitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Office
      tags:
      - Configure Offices
  /offices:
    get:
      description: Retrieve a list of all offices.
      parameters:
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - default: '"office_id"'
        description: Order by field
        in: query
        name: orderby
        type: string
      - default: '"asc"'
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all offices with their details
          schema:
            $ref: '#/definitions/response.ListOfficesResponseAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Offices List
      tags:
      - Configure Offices
    post:
      description: Create a new office configuration
      parameters:
      - description: Information about adding office details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createOfficesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created office details
          schema:
            $ref: '#/definitions/response.CreateOfficesResponseApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Office configuration
      tags:
      - Configure Offices
  /offices/{office-id}:
    get:
      description: Retrieve config information about a specific office.
      parameters:
      - description: Get config details of specific office
        in: path
        name: office-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified office
          schema:
            $ref: '#/definitions/response.OfficeAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Office Data
      tags:
      - Configure Offices
  /offices/{office-id}/accounting-details:
    get:
      description: Information about listing of transactions per request inputs (e.g.,office_id,src_trans_date
        etc.,)
      parameters:
      - description: 'Office Id (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Account-code (example: 8671000500)'
        in: query
        name: account-code
        type: string
      - description: 'From-date  (example: 2024-01-01)'
        in: query
        name: from-date
        type: string
      - description: 'To-date  (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Report-date (example: 2024-01-31)'
        in: query
        name: report-date
        type: string
      - description: 'Type (example: list)'
        enum:
        - all
        - acct-code
        in: query
        name: type
        required: true
        type: string
      - description: 'skip (example: 1)'
        in: query
        name: skip
        type: integer
      - description: 'Limit (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of accounted transaction as per the request
          schema:
            $ref: '#/definitions/response.ListDetailsByAccountCodeApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Accounting Details by account code
      tags:
      - Accountingdetails
    post:
      description: Create a new accounting Transaction
      parameters:
      - description: 'Office ID (example: 9000003)'
        in: path
        name: office-id
        required: true
        type: integer
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createOfficesAccountingDetailsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.CreateAccountingTxnAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Accounting transaction
      tags:
      - Accountingdetails
  /offices/{office-id}/accounting-details/boda:
    get:
      description: Fetch BODA transactions on various inputs (e.g.,office_id,src_trans_date
        etc.,)
      parameters:
      - description: 'Fetch accounting details of an office for a day godoc (example:
          90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch accounting details of an office for a day godoc (example:
          2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of BODA transactions
          schema:
            $ref: '#/definitions/response.FetchBODADataApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List BODA Details
      tags:
      - BODAdetails
  /offices/{office-id}/accounting-details/summary:
    get:
      description: Fetch summary transactions on various inputs (e.g.,office_id,src_trans_date
        etc.,)
      parameters:
      - description: 'Fetch accounting details of an office for a day godoc (example:
          90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch accounting details of an office for a day godoc (example:
          2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of accounted transaction as per the request
          schema:
            $ref: '#/definitions/response.FetchSummaryDetailsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Summary Details
      tags:
      - Accountingdetails
  /offices/{office-id}/bank-credit-lmits:
    get:
      consumes:
      - application/json
      description: Fetch offices under a Division for bank credit limit configuration
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - default: '"office_id"'
        description: Order by field
        in: query
        name: orderby
        type: string
      - default: '"asc"'
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all offices with their details
          schema:
            $ref: '#/definitions/response.ListBankCreditLimitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Offices for bank credit limit configuration by Division ID
      tags:
      - Configure Offices
  /offices/{office-id}/cheques:
    get:
      description: Fetch cheques for disposal
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Report Date
        in: query
        name: report-date
        type: string
      - description: Type
        enum:
        - disposal
        - pending
        in: query
        name: type
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of cheques for diposal
          schema:
            $ref: '#/definitions/response.ListChequesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch cheques for disposal
      tags:
      - Cheques - For disposal
  /offices/{office-id}/cheques-disposal:
    put:
      description: Update cheque disposal particulars
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: Disposed By
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateChequesDisposalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update cheque disposal particulars
          schema:
            $ref: '#/definitions/response.UpdateChequesDisposalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update cheque disposal particulars
      tags:
      - Cheques - Update disposal particulars
  /offices/{office-id}/closing-balances:
    get:
      description: Fetch treasury balances of an employee for current date
      parameters:
      - description: Fetch closing balances
        in: path
        name: office-id
        required: true
        type: integer
      - description: Fetch closing balances of an employee
        in: query
        name: user-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Fetch details of treasury balances of an employee
          schema:
            $ref: '#/definitions/response.FetchClosingBalancesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch treasury balances of an employee
      tags:
      - Closing Balances - Fetch
  /offices/{office-id}/closing-balances-assign-to-treasurer:
    put:
      description: Assiging of Office cash balance to Treasurer during roll out
      parameters:
      - description: 'Assign Office Cash balance to Treasurer (example: 900001)'
        in: path
        name: office-id
        required: true
        type: integer
      - description: 'Assign Office Cash balance to Treasurer (example: 10012323)'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateClosingBalancesAssignToTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Assign Office cash balance to treasurer
          schema:
            $ref: '#/definitions/response.UpdateClosingBalancesTransferApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Assigning of Office cash balance to Treasurer
      tags:
      - Closing Balances - Assign Cash Balance to Treasurer
  /offices/{office-id}/closing-balances-transfer:
    put:
      description: Transfer closing balances from one employee to another during leave/
        transfer etc
      parameters:
      - description: Transfer closing balances
        in: path
        name: office-id
        required: true
        type: integer
      - description: Transfer closing balances from one employee to another
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateClosingBalancesTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transfer closing balances from one employee to another
          schema:
            $ref: '#/definitions/response.UpdateClosingBalancesTransferApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Transfer closing balances from one employee to another
      tags:
      - Closing Balances - Transfer
  /offices/{office-id}/configs:
    get:
      consumes:
      - application/json
      description: Fetch offices under a Division from Kafka Master
      parameters:
      - description: Get config details of specific office
        in: path
        name: office-id
        required: true
        type: integer
      - description: Get linked or configured offices
        enum:
        - pending
        - configured
        in: query
        name: type
        required: true
        type: string
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - default: '"office_id"'
        description: Order by field
        in: query
        name: orderby
        type: string
      - default: '"asc"'
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all offices with their details
          schema:
            $ref: '#/definitions/response.ListOfficesConfigAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Offices for Config by Division ID
      tags:
      - Configure Offices
  /offices/{office-id}/day-begin-end-status:
    get:
      description: Checks the dayend status of an office.
      parameters:
      - description: 'Office ID (example: 9000003)'
        in: path
        name: office-id
        required: true
        type: integer
      - description: transaction date
        in: query
        name: trans-date
        type: string
      - description: Information about status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Day end status details of an office specified by office-id"
            example:"Begin
          schema:
            $ref: '#/definitions/response.FetchDayBeginEndStatusAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Check Office Day End Status
      tags:
      - Tools - Day End
  /offices/{office-id}/day-end-status:
    get:
      description: Checks the dayend status of an office.
      parameters:
      - description: Information about day end status details of an office specified
          by office-id
        in: path
        name: office-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Day end status details of an office specified by office-id
          schema:
            $ref: '#/definitions/response.FetchOfficesDayEndStatusResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Check Office Day End Status
      tags:
      - Tools - Check Day End
  /offices/{office-id}/exceptional-working-days:
    delete:
      description: Delete a specific Exceptional working day of an Office.
      parameters:
      - description: Delete exceptional working day (example:900003)
        in: path
        name: office-id
        required: true
        type: string
      - description: Delete exceptional working day (example:2023-11-30T00:00:00Z)
        in: query
        name: exceptional-wkg-day-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified office Exceptional working day updated/soft
            deleted
          schema:
            $ref: '#/definitions/response.DeleteExceptionalWkgDayAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Delete Office Exceptional Working
      tags:
      - Configure Exceptional Working Day
    get:
      description: Retrieve a list of all exceptional working day.
      parameters:
      - description: Information about adding new exceptional working day details
          (example:900003)
        in: path
        name: office-id
        required: true
        type: string
      - description: Information about adding new exceptional working day details
          (example:2024-01-01)
        in: query
        name: from-date
        type: string
      - description: Information about adding new exceptional working day details
          (example:2024-01-31)
        in: query
        name: to-date
        type: string
      - description: Information about adding new exceptional working day details
          (example:0)
        in: query
        name: skip
        type: integer
      - description: Information about adding new exceptional working day details
          (example:10)
        in: query
        name: limit
        type: integer
      - description: Information about adding new exceptional working day details
          (example:office)
        enum:
        - office
        - division
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all exceptional working days with their details
          schema:
            $ref: '#/definitions/response.ListExceptionalWkgDayResponseAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Exceptional Working Days
      tags:
      - Configure Exceptional Working Day
    post:
      description: Create a new exceptional working day.
      parameters:
      - description: Information about adding new exceptional working day details
          (example:900003)
        in: path
        name: office-id
        required: true
        type: integer
      - description: Information about adding new exceptional working day details
          (example:900003)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createExceptionalWkorkingDaysRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created exceptional working day details
          schema:
            $ref: '#/definitions/response.CreateExceptionalWkgDayResponseAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Exceptional Working Day
      tags:
      - Configure Exceptional Working Day
  /offices/{office-id}/ipos-ob-csd-receipts:
    get:
      description: Retrieve list of all pending IPO transactions.
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: Is Approval
        in: query
        name: is-approval
        type: boolean
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists all pending IPO transaction details
          schema:
            $ref: '#/definitions/response.ListIPOOBApprovalPdgApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Pending IPO Transaction Request
      tags:
      - IPO - OB/ CSD Receipt
    post:
      description: Create a new IPO OB/ CSD Receipt transaction
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: IPO Details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createOfficesIPOsOBReceiptsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created IPO transaction details
          schema:
            $ref: '#/definitions/response.CreateIPOsOBReceiptsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New IPO OB/ CSD Receipt Transaction Request
      tags:
      - IPO - OB/ CSD Receipt
  /offices/{office-id}/ipos-ob-csd-receipts/stock:
    get:
      description: Retrieve list of IPO stock of requested office.
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists IPO stock details of specified office
          schema:
            $ref: '#/definitions/response.ListOfficeIPOsObcsdReceiptsStockApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get IPO Stock Of Office
      tags:
      - IPO - OB/ CSD Receipt
  /offices/{office-id}/linked-configured:
    get:
      description: Retrieve attached offices linked to a specific cash office.
      parameters:
      - description: Get config details of specific office
        in: path
        name: office-id
        required: true
        type: integer
      - description: Get linked or configured offices
        enum:
        - linked
        - configured
        in: query
        name: type
        required: true
        type: string
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - default: '"office_id"'
        description: Order by field
        in: query
        name: orderby
        type: string
      - default: '"asc"'
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of attached offices linked to a cash office
          schema:
            $ref: '#/definitions/response.ListOfficesResponseAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Offices linked to Cash Office
      tags:
      - Configure Offices
  /offices/{office-id}/perform-day-begin:
    post:
      description: Perform day Begin at an Office
      parameters:
      - description: Information about office id
        in: path
        name: office-id
        required: true
        type: integer
      - description: Information about creating new day begin details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createOfficesPerformDayBeginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created day Begin details
          schema:
            $ref: '#/definitions/response.CreateDayBeginEndAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Perform Day Begin
      tags:
      - Tools - Day Begin
  /offices/{office-id}/perform-day-end:
    put:
      description: Perform day End in an Office
      parameters:
      - description: Information about update day end details
        in: path
        name: office-id
        required: true
        type: integer
      - description: Information about update day end details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateOfficesPerformDayEndRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update day End details
          schema:
            $ref: '#/definitions/response.DayBeginEndAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Perform Day End
      tags:
      - Tools - Day End
  /offices/{office-id}/reports/account-balances:
    get:
      description: Retrieve information of account balances of an office for requested
        date range
      parameters:
      - description: 'office ID (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'from date (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'to date (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of account balances of an office with their details
          schema:
            $ref: '#/definitions/response.CashBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get account Balances Report
      tags:
      - Reports
  /offices/{office-id}/reports/cash-balances:
    get:
      description: Retrieve information of cash balances of an office for requested
        date range
      parameters:
      - description: 'Fetch cash balances Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of cash balances of an office with their details
          schema:
            $ref: '#/definitions/response.CashBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Cash Balances Report
      tags:
      - Reports
  /offices/{office-id}/reports/cash-in-transit:
    get:
      description: Retrieve information of all cash balances in transit of an office
        for requested report date
      parameters:
      - description: 'Fetch Cash in Tranist transactions (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch Cash in Tranist transactions (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all cash balances in transit of an office with their
            details
          schema:
            $ref: '#/definitions/response.CashInTransitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Cash in Transit Report
      tags:
      - Reports
  /offices/{office-id}/reports/cheques-in-transit:
    get:
      description: Retrieve information of all Cheques in transit of an office for
        requested report date
      parameters:
      - description: 'Fetch Cash in Tranist transactions (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch Cash in Tranist transactions (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all cheques in transit of an office with their details
          schema:
            $ref: '#/definitions/response.ChequesInTransitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Cheques in Transit Report
      tags:
      - Reports
  /offices/{office-id}/reports/day-begin-end:
    get:
      description: Retrieve information of Day Begin and Day End details of an office
        for requested date range
      parameters:
      - description: Fetch Day Begin End Data
        in: path
        name: office-id
        required: true
        type: string
      - description: Fetch Day Begin End Data
        in: query
        name: from-date
        required: true
        type: string
      - description: Fetch Day Begin End Data
        in: query
        name: to-date
        required: true
        type: string
      - description: Skip records
        in: query
        name: skip
        type: integer
      - description: Limit records
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of day begin end details of an office
          schema:
            $ref: '#/definitions/response.DayBeginEndListAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Day Begin End Report
      tags:
      - Reports
  /offices/{office-id}/reports/ipo-balances:
    get:
      description: Retrieve information of IPO balances of an office for requested
        date range
      parameters:
      - description: 'Fetch cash balances Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of IPO balances of an office with their details
          schema:
            $ref: '#/definitions/response.IPOBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get IPO Balances Report
      tags:
      - Reports
  /offices/{office-id}/reports/ipos-in-transit:
    get:
      description: Retrieve information of all transit IPO balances of an office for
        requested report date
      parameters:
      - description: 'Fetch Cash in Tranist transactions (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch Cash in Tranist transactions (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all transit IPO balances of an office with their details
          schema:
            $ref: '#/definitions/response.IPOsInTransitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get IPOs in Transit Report
      tags:
      - Reports
  /offices/{office-id}/reports/out-of-stock:
    get:
      consumes:
      - application/json
      description: Retrieve information of out-of-stock inventory in an office
      parameters:
      - description: 'Office ID (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of out-of-stock inventory in an office with their details
          schema:
            $ref: '#/definitions/response.OutOfStockInventoryAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Out-Of-Stock Inventory by Office ID
      tags:
      - Reports
  /offices/{office-id}/reports/payment-details:
    get:
      description: Retrieve information of payment details of an office for requested
        date range
      parameters:
      - description: 'Office ID (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'From date (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'To date (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of payment details of an office with their details
          schema:
            $ref: '#/definitions/response.ListPaymentDetailsResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Payment Details Report
      tags:
      - Reports
  /offices/{office-id}/reports/postman-transactions:
    get:
      description: Retrieve information of Postman transactions in an office for requested
        date range
      parameters:
      - description: 'Fetch cash balances Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Postman Transactions in an office with their details
          schema:
            $ref: '#/definitions/response.PostmanTransactionsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Postman Transactions Report
      tags:
      - Reports
  /offices/{office-id}/reports/stamp-balances:
    get:
      description: Retrieve information of stamp balances of an office for requested
        date range
      parameters:
      - description: 'Fetch cash balances Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of stamp balances of an office with their details
          schema:
            $ref: '#/definitions/response.ListStampBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Stamp Balances Report
      tags:
      - Reports
  /offices/{office-id}/reports/stamp-balances-last-supply:
    get:
      description: Retrieve information of stamp balances of an office for requested
        date range with last supply
      parameters:
      - description: 'Fetch cash balances Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: from-date
        type: string
      - description: 'Fetch cash balances Data (example: 2024-01-31)'
        in: query
        name: to-date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of stamp balances of an office with their details
          schema:
            $ref: '#/definitions/response.FetchReportsStampBalanceLastSupplyResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Stamp Balances Report with last supply
      tags:
      - Reports
  /offices/{office-id}/reports/stamps-in-transit:
    get:
      description: Retrieve information of all transit stamp balances of an office
        for requested report date
      parameters:
      - description: 'Fetch Cash in Tranist transactions (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch Cash in Tranist transactions (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all transit stamp balances of an office with their
            details
          schema:
            $ref: '#/definitions/response.StampsInTransitAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Stamps in Transit Report
      tags:
      - Reports
  /offices/{office-id}/reports/tcb:
    get:
      description: Retrieve information of TCB data of an office for requested userid
        and report date
      parameters:
      - description: 'Fetch TCB Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch TCB Data (example: 10132232)'
        in: query
        name: user-id
        required: true
        type: string
      - description: 'Fetch TCB Data (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of TCB data along with their details
          schema:
            $ref: '#/definitions/response.TcbBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get TCB Data Report
      tags:
      - Reports
  /offices/{office-id}/reports/tcb-all:
    get:
      description: Retrieve information of TCB data of an office for a given date
      parameters:
      - description: 'Fetch TCB Data of all users (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch TCB Data of all users (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of TCB data along with their details
          schema:
            $ref: '#/definitions/response.ListTcbBalanceAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get TCB Data Report of all users
      tags:
      - Reports
  /offices/{office-id}/reports/tcb-denom-details:
    put:
      description: Update TCB denomination details of an office for the respective
        date
      parameters:
      - description: 'Update TCB denomination details to be given (example: 112256)'
        in: path
        name: office-id
        required: true
        type: integer
      - description: 'Update TCB denomination details to be given (example: 2024-12-23)'
        in: body
        name: trans_date
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: TCB denomination with their details
          schema:
            $ref: '#/definitions/response.UpdateReportsTCBDenomDetailsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update TCB Denomination Details
      tags:
      - Reports
  /offices/{office-id}/reports/tcb-new:
    get:
      description: Retrieve information of TCB data of an office for requested userid
        and report date
      parameters:
      - description: 'Fetch TCB Data (example: 90000003)'
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Fetch TCB Data (example: 10132232)'
        in: query
        name: user-id
        required: true
        type: string
      - description: 'Fetch TCB Data (example: 2024-01-31)'
        in: query
        name: report-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of TCB data along with their details
          schema:
            $ref: '#/definitions/response.ListReportsTCBDataResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get TCB Data Report
      tags:
      - Reports
  /offices/{office-id}/reports/transit-dashboard:
    get:
      description: Retrieve information of all transit data of an office
      parameters:
      - description: Fetch Tranist Dashboard Data
        in: path
        name: office-id
        required: true
        type: string
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of all transit details of an office
          schema:
            $ref: '#/definitions/response.TransitDetailsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Transit dashboard Report
      tags:
      - Reports
  /offices/{office-id}/stamps-advance-txn:
    get:
      description: Retrieve information about list of pending/approved stamp advance
        transactions
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: From date
        in: query
        name: from-date
        type: string
      - description: To date
        in: query
        name: to-date
        type: string
      - description: Is pdg
        in: query
        name: is-pdg
        type: boolean
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of pending/approved stamp advance transactions
          schema:
            $ref: '#/definitions/response.ListAdvanceTxnApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get List of Stamp Advance Transactions
      tags:
      - Stamps - Advance Transaction
    post:
      description: Create a new stamp advance transaction request
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: Request body for creating a new stamp advance transaction
        in: body
        name: body
        schema:
          $ref: '#/definitions/handler.createStampsAdvanceTxnsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created stamp advance transaction request
          schema:
            $ref: '#/definitions/response.CreateStampsAdvanceTxnsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Stamp Advance Transaction
      tags:
      - Stamps - Advance Transaction
  /offices/{office-id}/stamps-advance-txn/balances:
    get:
      description: Retrieve list of all stamp advance balances
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: From date
        in: query
        name: from-date
        type: string
      - description: To date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of all stamp advance balances with their details
          schema:
            $ref: '#/definitions/response.ListStampAdvanceBalanceApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get List of All Advance Balances
      tags:
      - Stamps - Advance Transaction
  /offices/{office-id}/stamps-write-off:
    get:
      description: Retrieves information about list of pending/approved transactions
        for a specific date range (e.g.,fromdate,todate , etc.)
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: string
      - description: Is PDG
        in: query
        name: is-pdg
        type: boolean
      - description: Checker or Approval
        in: query
        name: checker-or-approval
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending/approved transactions requested
          schema:
            $ref: '#/definitions/response.ListStampsSoiledApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending WriteOff Transactions List
      tags:
      - Stamps - Write-Off
    post:
      description: Information about creating a new write off Transaction (e.g., office_id,user_id,soiled_details,amount,etc.)
      parameters:
      - description: Office ID
        in: path
        name: office-id
        required: true
        type: integer
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of newly created write off transaction
          schema:
            $ref: '#/definitions/response.CreateStampsSoiledApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Stamp WriteOff Transaction
      tags:
      - Stamps - Write-Off
  /soiled-write-off-limits:
    get:
      description: Retrieve a list of all soiled write off limits.
      parameters:
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of all soiled write off limits with their details.
          schema:
            $ref: '#/definitions/response.ListStampsSoiledWriteOffAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Soiled Write Off List
      tags:
      - Configure Stamps Write Off Limits
    post:
      description: Create a new soiled write off limit.
      parameters:
      - description: Information about soiled write off limit
        in: body
        name: createStampsSoiledWriteOffLimitsRequest
        required: true
        schema:
          $ref: '#/definitions/handler.createStampsSoiledWriteOffLimitsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Newly created soiled write off limit details
          schema:
            $ref: '#/definitions/response.CreateStampsSoiledWriteOffLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Soiled Write Off
      tags:
      - Configure Stamps Write Off Limits
  /soiled-write-off-limits/{limit-id}:
    delete:
      description: Update (soft delete) a specific soiled write off limit.
      parameters:
      - description: Details identified by limit Id
        in: path
        name: limit-id
        required: true
        type: string
      - description: Details identified by updated by user Id
        in: query
        name: updated-by-userid
        required: true
        type: string
      - description: Details identified by valid to
        in: query
        name: valid-to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified soiled write off limit updated or
            soft deleted
          schema:
            $ref: '#/definitions/response.DeleteSoiledWriteOffLimitsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Soiled Write Off Limit
      tags:
      - Configure Stamps Write Off Limits
  /stamp-bulk-sales:
    get:
      description: Retrieve information about all stamps bulk sales.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Is PDG
        in: query
        name: is-pdg
        type: boolean
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get Details of all stamp bulk sales
          schema:
            $ref: '#/definitions/response.ListStampBulkSalesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Stamps Bulk Sales List
      tags:
      - Stamps - Bulk Sales
    post:
      description: Create information about stamp bulk sales.
      parameters:
      - description: Create stamp bulk sales
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createStampBulkSalesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of created stamp bulk sales
          schema:
            $ref: '#/definitions/response.CreateStampBulkSalesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create Stamp Bulk sales
      tags:
      - Stamps - Bulk Sales
  /stamp-bulk-sales/{transaction-id}:
    get:
      description: Retrieve information about stamp bulk sales by tran_id.
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of stamp bulk sales of requested tran_id
          schema:
            $ref: '#/definitions/response.StampBulkSalesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Stamp Bulk Sales by ID
      tags:
      - Stamps - Bulk Sales
  /stamp-bulk-sales/{transaction-id}/approve:
    put:
      description: Approve stamp bulk sales.
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Approve stamp bulk sales
        in: body
        name: body
        schema:
          $ref: '#/definitions/handler.updateStampBulkSalesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of approved stamp bulk sales.                '
          schema:
            $ref: '#/definitions/response.StampBulkSalesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve Stamp Bulk sales
      tags:
      - Stamps - Bulk Sales
  /stamp-ob-csd-receipts:
    get:
      description: Retrieve information about stamps opening balances received from
        CSD.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: integer
      - description: Is PDG
        in: query
        name: is-pdg
        type: boolean
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of stamps opening balances received from CSD. '
          schema:
            $ref: '#/definitions/response.ListStampObCsdReceiptsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get CSD Opening Balance Receipts
      tags:
      - Stamps - OB/ CSD Receipt
    post:
      description: Create information about stamp opening balances received from CSD.
      parameters:
      - description: Information about creating stamp opening balances received from
          CSD
        in: body
        name: createStampObCsdReceiptsRequest
        required: true
        schema:
          $ref: '#/definitions/handler.createStampObCsdReceiptsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Details of created stamp opening balances received from CSD
          schema:
            $ref: '#/definitions/response.CreateStampObCsdReceiptsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create CSD Opening Balance Receipts
      tags:
      - Stamps - OB/ CSD Receipt
  /stamp-ob-csd-receipts/{ob-transaction-id}:
    get:
      description: Retrieve information about stamps opening balances received from
        CSD with respect to ob_transaction_id
      parameters:
      - description: Transaction ID of the opening balance receipt
        in: path
        name: ob-transaction-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of stamps opening balances received from CSD w.r.t
            ob_transaction_id '
          schema:
            $ref: '#/definitions/response.StampObCsdReceiptsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get CSD Opening Balance Receipts by Transaction ID
      tags:
      - Stamps - OB/ CSD Receipt
  /stamp-ob-csd-receipts/{ob-transaction-id}/approve:
    put:
      description: Approve stamp opening balances received from CSD.
      parameters:
      - description: Transaction ID
        in: path
        name: ob-transaction-id
        required: true
        type: string
      - description: Approve stamp opening balances received from CSD
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateStampObCsdReceiptsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of approved stamp opening balances received from CSD
          schema:
            $ref: '#/definitions/response.StampObCsdReceiptsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve CSD Opening Balance Receipts
      tags:
      - Stamps - OB/ CSD Receipt
  /stamps-advance-txn/{transaction-id}/approve:
    put:
      description: Update a specific stamp advance transaction identified by tran_id
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Is Approved
        in: body
        name: body
        schema:
          $ref: '#/definitions/handler.updateStampAdvanceTxnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of updated stamp advance transaction
          schema:
            $ref: '#/definitions/response.StampsAdvanceTxnsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Stamp Advance Transaction
      tags:
      - Stamps - Advance Transaction
  /stamps-categories:
    get:
      description: Retrieve a list of all stamp categories.
      parameters:
      - default: 0
        description: Number of records to skip for pagination
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to limit for pagination
        in: query
        name: limit
        type: integer
      - description: Sort the records in ascending or descending order
        in: query
        name: sortType
        type: string
      - description: Order the records based on the specified field
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all stamp categories with their details
          schema:
            $ref: '#/definitions/response.ListStampsCategoriesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All Stamps Category
      tags:
      - Configure Stamps Category
  /stamps-categories/{category-id}:
    get:
      description: Retrieve information about a specific stamp category.
      parameters:
      - description: Category ID
        in: path
        name: category-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified stamp category
          schema:
            $ref: '#/definitions/response.StampscategoriesAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Stamp Category
      tags:
      - Configure Stamps Category
  /stamps-denominations:
    get:
      description: Retrieve information about stamp denominations of specific office.
      parameters:
      - description: Get Stamp Denominations by Office ID
        in: query
        name: office-id
        type: integer
      - description: Skip records
        in: query
        name: skip
        type: integer
      - description: Limit records
        in: query
        name: limit
        type: integer
      - description: Sort records
        in: query
        name: sortType
        type: string
      - description: Sort records
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of the stamp denominations of specific office. '
          schema:
            $ref: '#/definitions/response.ListStampsDenominationsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Office Stamp Denominations
      tags:
      - Configure Stamps Denomination
  /stamps-denominations/{denomination-id}:
    get:
      description: Retrieve information about a specific stamp denomination.
      parameters:
      - description: Get stamp denomination by ID
        in: path
        name: denomination-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the specified stamp denomination
          schema:
            $ref: '#/definitions/response.StampsDenominationsAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Specific Stamp Denomination
      tags:
      - Configure Stamps Denomination
  /stamps-error-transactions:
    get:
      description: Get stamp Error Transactions
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Is Raising Office
        in: query
        name: is-raising-office
        type: boolean
      - description: Type
        enum:
        - errors
        - pending
        in: query
        name: type
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get Stamp Error transactions
          schema:
            $ref: '#/definitions/response.ListStampsErrorTransactionsApiRespnse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get stamp error Transactions
      tags:
      - Stamp - Error Transactions
  /stamps-error-transactions/{error-id}:
    put:
      description: Update stamp Error Transactions
      parameters:
      - description: Error ID
        in: path
        name: error-id
        required: true
        type: string
      - description: Update Stamp Error transactions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateStampErrorTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update Stamp Error transactions
          schema:
            $ref: '#/definitions/response.UpdateStampsErrorTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update stamp error Transactions
      tags:
      - Stamp - Error Transactions
  /stamps-inventory:
    get:
      description: Fetch Stamps Inventory at an Office
      parameters:
      - description: 'Office ID (example: 9000003)'
        in: query
        name: office-id
        required: true
        type: integer
      - description: 'Skip records (example: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Limit records (example: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Stamps inventory receipt
          schema:
            $ref: '#/definitions/response.ListStampsInventoryAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch stamps inventory
      tags:
      - Tools - Stamps Inventory
  /stamps-inventory-requests/{request-id}:
    put:
      description: Receive Stamps Inventory at an Office
      parameters:
      - description: 'Update stamps inventory (example: REQ_21260551)'
        in: path
        name: request-id
        required: true
        type: string
      - description: 'Update stamps inventory (example: REQ_21260551)'
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateStampsInventoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Stamps inventory receipt
          schema:
            $ref: '#/definitions/response.UpdateStampsInventoryAPIResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update stamps inventory
      tags:
      - Tools - Stamps Inventory
  /stamps-transactions:
    get:
      description: List stamp transactions along with transaction status
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Transaction Status
        in: query
        name: txn-status
        type: string
      - description: Type
        enum:
        - all
        - pending
        - remittance
        in: query
        name: type
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Details of stamp transactions along with status
          schema:
            $ref: '#/definitions/response.ListStampTransactionsApiResonse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Stamp Transactions
      tags:
      - Stamps - Transactions
    post:
      description: Create a new stamp Transaction request
      parameters:
      - description: Information about the new stamp transaction request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createStampsTransactionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created stamp transaction
          schema:
            $ref: '#/definitions/response.CreateStampsTransactionsApiReaponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Stamp Transaction Request
      tags:
      - Stamps - Transactions
  /stamps-transactions/{transaction-id}:
    get:
      description: List stamp transaction by ID along with transaction status
      parameters:
      - description: List of stamp transactions
        in: path
        name: transaction-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of stamp transactions along with status
          schema:
            $ref: '#/definitions/response.FetchStampsTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Stamp Transaction by ID
      tags:
      - Stamps - Transactions
  /stamps-transactions/{transaction-id}/change-status:
    put:
      description: Process stamp Transaction issue request
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Type
        enum:
        - process-pdg-issue
        - approve-pdg-source
        - approve-pdg-issue
        - process-pdg-ack
        - process-or-acknowledge
        in: query
        name: type
        required: true
        type: string
      - description: Process stamp transaction issue request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateStampsTransactionsStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of processed stamp transaction issue request
          schema:
            $ref: '#/definitions/response.StampsTransactionsApiReaponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Process Stamp Transaction
      tags:
      - Stamps - Transactions
  /stamps-transactions/pdg-process-or-ack:
    get:
      description: Retrieves information about list of pending stamp receipt or ack
        treasury transactions.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending process/ack stamp transactions
          schema:
            $ref: '#/definitions/response.ListStamspTransactionsProcessOrAckApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending stamp receipt ack Transactions List
      tags:
      - Stamp - List pending receipt/ ack Transactions
  /stamps-write-off/{transaction-id}/change-status:
    put:
      description: Information about approving write off Transaction (e.g., Tran_id,   approver_id,disposal_details,approved_date,
        etc.,
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Type of transaction
        enum:
        - approve
        - process
        in: query
        name: type
        required: true
        type: string
      - description: Update or approving write off Transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateStampSoiledRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of approved writeoff Transaction
          schema:
            $ref: '#/definitions/response.UpdateStampSoiledApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Approve WriteOff Transaction Request
      tags:
      - Stamps - Write-Off
  /temporal/bag-close:
    post:
      description: Temporal Bag Close
      parameters:
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.temporalcombinedCashbagcloseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.TemporalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Temporal Bag Close
      tags:
      - TemporalBagOpen
  /temporal/bag-open:
    post:
      description: Temporal Bag Open
      parameters:
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.temporalCombinedRequestbagopenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.TemporalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Temporal Bag Open
      tags:
      - TemporalBagOpen
  /temporal/bag-open-get:
    post:
      description: Temporal Bag Open Get
      parameters:
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.temporalBagOpenGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.TemporalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Temporal Bag Open Get
      tags:
      - TemporalBagOpenGet
  /temporal/day-begin:
    post:
      description: Temporal Day Begin
      parameters:
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.temporalDayBeginCombinedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.TemporalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Temporal Day Begin
      tags:
      - TemporalDayBegin
  /temporal/day-end:
    post:
      description: Temporal Day End
      parameters:
      - description: Information about adding new accounting transaction details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.temporalDayEndCombinedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the newly created accounting transaction
          schema:
            $ref: '#/definitions/response.TemporalApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Temporal Day End
      tags:
      - TemporalDayEnd
  /transactions:
    get:
      description: Retrieves information about list of treasury transactions.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        required: true
        type: string
      - description: To Date
        in: query
        name: to-date
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all treasury transactions
          schema:
            $ref: '#/definitions/response.ListTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Treasury Transactions List
      tags:
      - Cash/ Cheque - Transactions
    post:
      description: Create a new Treasury Transaction.
      parameters:
      - description: Information about creating a new Treasury Transaction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createTransactionsBankRemittancesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of newly created treasury transaction
          schema:
            $ref: '#/definitions/response.CreateTransactionsBankRemittancesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a New Treasury Transaction
      tags:
      - Cash/ Cheque - Transactions
  /transactions/{transaction-id}/bank-addl-credit/approve:
    put:
      description: Update a bank additional credit request
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Update Bank Addl Credit Request
        in: body
        name: updateBankAddlCreditRequest
        required: true
        schema:
          $ref: '#/definitions/handler.updateBankAddlCreditRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the update bank addl credit request response
          schema:
            $ref: '#/definitions/response.UpdateBankAddlCreditTxnApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update Bank Additinal Credit request
      tags:
      - Transactions - Update Bank Addl Credit Request
  /transactions/{transaction-id}/change-status:
    put:
      description: Process Issue request Tresury Transaction
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Type of transaction
        enum:
        - approve-pdg-source
        - process-or-acknowledge
        - process-pdg-ack
        - approve-pdg-issue
        - process-pdg-issue
        in: query
        name: type
        required: true
        type: string
      - description: Information about processing issue request treasury Transaction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateTransactionsStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of processed issue request treasury Transaction
          schema:
            $ref: '#/definitions/response.TransactionsBankRemittancesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Process Treasury Transaction Issue Request
      tags:
      - Cash/ Cheque - Transactions
  /transactions/{transaction-id}/send-cheques-to-bank-or-ao:
    put:
      description: Retrieves information about list of pending cheque transactions
        for remittance to Bank/ Account Office
      parameters:
      - description: Transaction ID
        in: path
        name: transaction-id
        required: true
        type: string
      - description: Information about pending Transactions
        in: body
        name: sendChequesToBankOrAORequest
        required: true
        schema:
          $ref: '#/definitions/handler.sendChequesToBankOrAORequest'
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending cheques for remittance to Bank/
            Account Office
          schema:
            $ref: '#/definitions/response.SendChequesToBankOrAOApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending Cheque Transactions For Remittance to Bank/ Account Office
      tags:
      - Transactions - Pdg Cheque Transactions for Remittance
  /transactions/bank-addl-credit:
    get:
      description: Retrieve a list of all bank additional credit requests
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Is Division
        in: query
        name: is-division
        type: boolean
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Order By
        in: query
        name: orderBy
        type: string
      - description: Sort Type
        in: query
        name: sortType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all bank additional credit requests
          schema:
            $ref: '#/definitions/response.ListBankAddlCreditTxnsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get All bank additonal credit requests
      tags:
      - Transactions - List Bank additional credit requests
    post:
      consumes:
      - application/json
      description: create a new bank additional credit transaction
      parameters:
      - description: Create Bank Addl Credit request
        in: body
        name: createBankAddlCreditRequest
        required: true
        schema:
          $ref: '#/definitions/handler.createBankAddlCreditRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bank Additional Credit request
          schema:
            $ref: '#/definitions/response.CreateBankAddlCreditApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Create a bank additional credit
      tags:
      - Transaactions - Create Bank Addl Credit
  /transactions/bank-drawl-check:
    get:
      description: Retrieves information about Bank drawl limits and done during current
        month
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending bank drawl transactions
          schema:
            $ref: '#/definitions/response.FetchBankDrawlCheckApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Bank drawl limits checked
      tags:
      - Transactions - Bank Drawl Transactions Check
  /transactions/bank-remittances:
    get:
      description: List Bank Remittances
      parameters:
      - description: List bank remittances
        in: query
        name: office-id
        required: true
        type: string
      - description: From Date
        in: query
        name: from-date
        required: true
        type: string
      - description: To Date
        in: query
        name: to-date
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List Bank Remittances
          schema:
            $ref: '#/definitions/response.ListBankRemittancesApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: List Bank Remittances
      tags:
      - Cash/ Cheque - Transactions
  /transactions/cash-remittance-report:
    get:
      description: Retrieves information about list of treasury transactions.
      parameters:
      - description: Report about list of Treasury Transactions
        in: query
        name: office-id
        required: true
        type: string
      - description: Report about list of Treasury Transactions
        in: query
        name: from-date
        required: true
        type: string
      - description: Report about list of Treasury Transactions
        in: query
        name: to-date
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists of treasury transactions
          schema:
            $ref: '#/definitions/response.ListTransactionsApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch treasury transactions
      tags:
      - Report - Treasury
  /transactions/cheques-to-bank-or-ao:
    get:
      description: Retrieves information about list of pending cheque transactions
        for remittance to Bank/ Account Office
      parameters:
      - description: 'Office ID ex: 90000003'
        in: query
        name: office_id
        required: true
        type: string
      - description: Is Pending
        in: query
        name: is_pdg
        type: boolean
      - description: From Date
        in: query
        name: from_date
        type: string
      - description: To Date
        in: query
        name: to_date
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending cheques for remittance to Bank/
            Account Office
          schema:
            $ref: '#/definitions/response.ListPdgChequesToBankOrAOApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending Cheque Transactions For Remittance to Bank/ Account Office
      tags:
      - Transactions - Pdg Cheque Transactions for Remittance
  /transactions/pdg-process-or-ack:
    get:
      description: Retrieves information about list of pending receipt or ack treasury
        transactions.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending process/ack treasury transactions
          schema:
            $ref: '#/definitions/response.ListTransactionsPdgProcessOrAckApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending receipt ack Transactions List
      tags:
      - Cash/ Cheque - Transactions
  /transactions/pending:
    get:
      description: Retrieves information about list of pending treasury transactions.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending treasury transactions
          schema:
            $ref: '#/definitions/response.ListTransactionPendingApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending Transactions
      tags:
      - Report - Pdg Transactions
  /transactions/pending-process:
    get:
      description: Retrieves information about list of pending treasury transactions.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        required: true
        type: string
      - description: Transaction Status
        in: query
        name: txn-status
        required: true
        type: string
      - description: Is Postman
        in: query
        name: is-postman
        type: boolean
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of all pending treasury transactions
          schema:
            $ref: '#/definitions/response.ListTransactionsPendingProcessApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Get Pending Treasury Transactions List
      tags:
      - Cash/ Cheque - Transactions
  /transactions/special-remittance-slip:
    get:
      description: Retrieves information about list of Speical remittance slip by
        office id.
      parameters:
      - description: Office ID
        in: query
        name: office-id
        type: string
      - description: From Date
        in: query
        name: from-date
        type: string
      - description: To Date
        in: query
        name: to-date
        type: string
      - description: Type
        enum:
        - disposal
        - pending
        in: query
        name: type
        type: string
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lists Details of Special Remittance Slip
          schema:
            $ref: '#/definitions/response.ListTransactionsSpecialRemittanceSlipApiResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Fetch special remittance
      tags:
      - Report - Special Remittance
  /transactions/update-wallet-balance:
    post:
      description: Update wallet balance
      parameters:
      - description: Update wallet balance
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateTransactionsWalletBalanceRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "403":
          description: Forbidden error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "404":
          description: Data not found error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "409":
          description: Data conflict error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apierrors.APIErrorResponse'
      summary: Update wallet balance
      tags:
      - Cash - Update wallet
schemes:
- http
- https
swagger: "2.0"
