/*
Treasury Management API

Testing ConfigureStampsCategoryAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_ConfigureStampsCategoryAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ConfigureStampsCategoryAPIService StampsCategoriesCategoryIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var categoryId string

		resp, httpRes, err := apiClient.ConfigureStampsCategoryAPI.StampsCategoriesCategoryIdGet(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigureStampsCategoryAPIService StampsCategoriesCategoryIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var categoryId string

		resp, httpRes, err := apiClient.ConfigureStampsCategoryAPI.StampsCategoriesCategoryIdPut(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigureStampsCategoryAPIService StampsCategoriesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ConfigureStampsCategoryAPI.StampsCategoriesGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigureStampsCategoryAPIService StampsCategoriesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ConfigureStampsCategoryAPI.StampsCategoriesPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
